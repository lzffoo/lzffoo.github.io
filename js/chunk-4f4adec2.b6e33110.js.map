{"version":3,"sources":["webpack:///./src/components/Nes.vue?747b","webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./src/nes/controller.js","webpack:///./src/nes/utils.js","webpack:///./src/nes/cpu.js","webpack:///./src/nes/tile.js","webpack:///./src/nes/ppu.js","webpack:///./src/nes/papu.js","webpack:///./src/nes/mappers.js","webpack:///./src/nes/rom.js","webpack:///./src/nes/nes.js","webpack:///./src/nes/index.js","webpack:///./src/nes/initnes.js","webpack:///./src/nes/romUrl.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./src/nes/gamepad.js","webpack:///src/components/Nes.vue","webpack:///./src/components/Nes.vue?9239","webpack:///./src/components/Nes.vue","webpack:///./node_modules/regenerator-runtime/runtime.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","cb1","on","changeGame","model","value","callback","$$v","expression","_l","group","key","label","item","cb2","staticStyle","fps","_v","_s","zj","canWidth","canHeigh","cb3","activeName","index","labSpan","inputSpan","$set","keyMap","staticRenderFns","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","Controller","state","Array","i","length","BUTTON_A","BUTTON_B","BUTTON_SELECT","BUTTON_START","BUTTON_UP","BUTTON_DOWN","BUTTON_LEFT","BUTTON_RIGHT","prototype","buttonDown","buttonUp","utils","copyArrayElements","src","srcPos","dest","destPos","copyArray","slice","fromJSON","obj","JSON_PROPERTIES","toJSON","CPU","nes","mem","REG_ACC","REG_X","REG_Y","REG_SP","REG_PC","REG_PC_NEW","REG_STATUS","F_CARRY","F_DECIMAL","F_INTERRUPT","F_INTERRUPT_NEW","F_OVERFLOW","F_SIGN","F_ZERO","F_NOTUSED","F_NOTUSED_NEW","F_BRK","F_BRK_NEW","opdata","cyclesToHalt","crash","irqRequested","irqType","reset","IRQ_NORMAL","IRQ_NMI","IRQ_RESET","p","j","k","setStatus","OpData","emulate","temp","add","doIrq","doNonMaskableInterrupt","doResetInterrupt","opinf","mmap","load","cycleCount","cycleAdd","addrMode","opaddr","addr","load16bit","write","push","pull","stackWrap","stop","crashMessage","toString","val","requestIrq","type","pageCrossed","addr1","addr2","haltCycles","cycles","status","getStatus","st","s","setOp","INS_ADC","ADDR_IMM","ADDR_ZP","ADDR_ZPX","ADDR_ABS","ADDR_ABSX","ADDR_ABSY","ADDR_PREIDXIND","ADDR_POSTIDXIND","INS_AND","INS_ASL","ADDR_ACC","INS_BCC","ADDR_REL","INS_BCS","INS_BEQ","INS_BIT","INS_BMI","INS_BNE","INS_BPL","INS_BRK","ADDR_IMP","INS_BVC","INS_BVS","INS_CLC","INS_CLD","INS_CLI","INS_CLV","INS_CMP","INS_CPX","INS_CPY","INS_DEC","INS_DEX","INS_DEY","INS_EOR","INS_INC","INS_INX","INS_INY","INS_JMP","ADDR_INDABS","INS_JSR","INS_LDA","INS_LDX","ADDR_ZPY","INS_LDY","INS_LSR","INS_NOP","INS_ORA","INS_PHA","INS_PHP","INS_PLA","INS_PLP","INS_ROL","INS_ROR","INS_RTI","INS_RTS","INS_SBC","INS_SEC","INS_SED","INS_SEI","INS_STA","INS_STX","INS_STY","INS_TAX","INS_TAY","INS_TSX","INS_TXA","INS_TXS","INS_TYA","INS_ALR","INS_ANC","INS_ARR","INS_AXS","INS_LAX","INS_SAX","INS_DCP","INS_ISC","INS_RLA","INS_RRA","INS_SLO","INS_SRE","INS_SKB","INS_IGN","cycTable","instname","addrDesc","INS_DUMMY","inst","op","size","Tile","pix","fbIndex","tIndex","x","y","w","h","incX","incY","palIndex","tpri","c","initialized","opaque","setBuffer","scanline","setScanline","sline","b1","b2","buffer","srcx1","srcy1","srcx2","srcy2","dx","dy","palAdd","palette","flipHorizontal","flipVertical","pri","priTable","isTransparent","PPU","vramMem","spriteMem","vramAddress","vramTmpAddress","vramBufferedReadValue","firstWrite","sramAddress","currentMirroring","requestEndFrame","nmiOk","dummyCycleToggle","validTileData","nmiCounter","scanlineAlreadyRendered","f_nmiOnVblank","f_spriteSize","f_bgPatternTable","f_spPatternTable","f_addrInc","f_nTblAddress","f_color","f_spVisibility","f_bgVisibility","f_spClipping","f_bgClipping","f_dispType","cntFV","cntV","cntH","cntVT","cntHT","regFV","regV","regH","regVT","regHT","regFH","regS","curNt","attrib","bgbuffer","pixrendered","scantile","lastRenderedScanline","curX","sprX","sprY","sprTile","sprCol","vertFlip","horiFlip","bgPriority","spr0HitX","spr0HitY","hitSpr0","sprPalette","imgPalette","ptTile","ntable1","nameTable","vramMirrorTable","palTable","showSpr0Hit","clipToTvSize","STATUS_VRAMWRITE","STATUS_SLSPRITECOUNT","STATUS_SPRITE0HIT","STATUS_VBLANK","NameTable","PaletteTable","loadNTSCPalette","updateControlReg1","updateControlReg2","setMirroring","mirroring","triggerRendering","defineMirrorRegion","rom","HORIZONTAL_MIRRORING","VERTICAL_MIRRORING","SINGLESCREEN_MIRRORING","SINGLESCREEN_MIRRORING2","fromStart","toStart","startVBlank","cpu","renderFramePartially","endFrame","endScanline","setStatusFlag","renderBgScanline","checkSprite0","clockIrqCounter","regsToAddress","cntsToAddress","startFrame","bgColor","ui","writeFrame","setEmphasis","updatePalettes","flag","n","readStatusRegister","tmp","writeSRAMAddress","address","sramLoad","sramWrite","spriteRamWriteUpdate","scrollWrite","writeVRAMAddress","latchAccess","vramLoad","mirroredLoad","cntsFromAddress","regsFromAddress","vramWrite","mirroredWrite","writeMem","sramDMA","data","baseAddress","incTileCounter","count","Error","startScan","scanCount","renderSpritesPartially","si","ei","destIndex","scan","baseTile","t","tpix","att","col","tscanoffset","targetBuffer","tile","getTileIndex","getAttrib","sx","startscan","scancount","bgPri","top","toffset","bufferIndex","tIndexAdd","patternWrite","nameTableWrite","attribTableWrite","getEntry","tileIndex","Math","floor","leftOver","writeAttrib","doNMI","isPixelWhite","ppu","width","height","name","tx","ty","attindex","basex","basey","sqy","sqx","curTable","emphTable","currentEmph","makeTables","loadPALPalette","r","g","b","rFactor","gFactor","bFactor","emph","getRed","getGreen","getBlue","getRgb","yiq","rgb","loadDefaultPalette","CPU_FREQ_NTSC","PAPU","square1","ChannelSquare","square2","triangle","ChannelTriangle","noise","ChannelNoise","dmc","ChannelDM","frameIrqCounter","frameIrqCounterMax","initCounter","channelEnableValue","sampleRate","lengthLookup","dmcFreqLookup","noiseWavelengthLookup","square_table","tnd_table","frameIrqEnabled","frameIrqActive","frameClockNow","startedPlaying","recordOutput","initingHardware","masterFrameCounter","derivedFrameCounter","countSequence","sampleTimer","frameTime","sampleTimerMax","sampleCount","triValue","smpSquare1","smpSquare2","smpTriangle","smpDmc","accCount","prevSampleL","prevSampleR","smpAccumL","smpAccumR","dacRange","dcValue","masterVolume","stereoPosLSquare1","stereoPosLSquare2","stereoPosLTriangle","stereoPosLNoise","stereoPosLDMC","stereoPosRSquare1","stereoPosRSquare2","stereoPosRTriangle","stereoPosRNoise","stereoPosRDMC","extraCycles","maxSample","minSample","panning","setPanning","initLengthLookup","initDmcFrequencyLookup","initNoiseWavelengthLookup","initDACtables","writeReg","opts","preferredFrameRate","updateChannelEnable","resetCounter","readReg","getLengthStatus","getIrqStatus","irqGenerated","frameCounterTick","setEnabled","clockFrameCounter","nCycles","maxCycles","isEnabled","shiftCounter","dmaFrequency","clockDmc","progTimerMax","progTimerCount","linearCounter","lengthCounter","triangleCounter","sampleValue","squareCounter","updateSampleValue","acc_c","accValue","shiftReg","randomMode","randomBit","accSample","sample","sampleCondition","clockLengthCounter","clockSweep","clockEnvDecay","clockLinearCounter","sq_index","tnd_index","smpNoise","sampleValueL","sampleValueR","smpDiffL","smpDiffR","onAudioSample","getLengthMax","getDmcFrequency","getNoiseWaveLength","pos","updateStereoPos","setMasterVolume","ival","max_sqr","max_tnd","papu","MODE_NORMAL","MODE_LOOP","MODE_IRQ","hasSample","playMode","dmaCounter","deltaCounter","playStartAddress","playAddress","playLength","playLengthCounter","reg4012","reg4013","dacLsb","endOfSample","nextSample","envDecayDisable","envDecayLoopEnable","lengthCounterEnable","envReset","shiftNow","envDecayRate","envDecayCounter","envVolume","dutyLookup","impLookup","sqr1","sweepActive","sweepCarry","updateSweepPeriod","sweepCounter","sweepCounterMax","sweepMode","sweepShiftAmount","dutyMode","sweepResult","vol","addrAdd","lcHalt","lcControl","lcLoadValue","updateSampleCondition","clockProgrammableTimer","clockTriangleGenerator","Mappers","joy1StrobeState","joy2StrobeState","joypadLastWrite","zapperFired","zapperX","zapperY","onBatteryRamWrite","regWrite","writelow","regLoad","joy1Read","joy2Read","ret","controllers","loadROM","valid","romCount","loadPRGROM","loadCHRROM","loadBatteryRam","loadRomBank","vromCount","loadVromBank","batteryRam","ram","bank","vrom","vromTile","load32kRomBank","load8kVromBank","bank4kStart","load1kVromBank","bank1k","bank4k","bankoffset","baseIndex","load2kVromBank","bank2k","load8kRomBank","bank8k","bank16k","offset","regBuffer","regBufferCounter","oneScreenMirroring","prgSwitchingArea","prgSwitchingSize","vromSwitchingSize","romSelectionReg0","romSelectionReg1","romBankSelect","getRegNumber","setReg","reg","baseBank","switchLowHighPrgRom","oldSetting","switch16to32","switch32to16","CMD_SEL_2_1K_VROM_0000","CMD_SEL_2_1K_VROM_0800","CMD_SEL_1K_VROM_1000","CMD_SEL_1K_VROM_1400","CMD_SEL_1K_VROM_1800","CMD_SEL_1K_VROM_1C00","CMD_SEL_ROM_PAGE1","CMD_SEL_ROM_PAGE2","command","prgAddressSelect","chrAddressSelect","pageNumber","irqCounter","irqLatchValue","irqEnable","prgAddressChanged","executeCommand","cmd","prg_size","chr_size","sram_we_a","sram_we_b","graphic_mode","nametable_mode","nametable_type","fill_chr","fill_pal","SetBank_SRAM","SetBank_CPU","chr_mode","chr_page","SetBank_PPU","split_control","split_scroll","split_page","irq_line","ClearIRQ","irq_enable","mult_a","mult_b","exWrite","irq_status","prgbank1","prgbank2","ROM","mapperName","FOURSCREEN_MIRRORING","SINGLESCREEN_MIRRORING3","SINGLESCREEN_MIRRORING4","CHRROM_MIRRORING","header","trainer","fourScreen","mapperType","v","indexOf","charCodeAt","foundError","getMirroringType","getMapperName","mapperSupported","createMapper","NES","onFrame","onStatusUpdate","a","emulateSound","updateStatus","1","2","frame","bind","zapperMove","zapperFireDown","zapperFireUp","fpsFrameCount","romData","break","lastFpsTime","FRAMELOOP","controller","button","getFPS","now","Date","reloadROM","setFramerate","rate","setSampleRate","canvas_ctx","image","framebuffer_u8","framebuffer_u32","jsnes","holdNes","SCREEN_WIDTH","SCREEN_HEIGHT","FRAMEBUFFER_SIZE","AUDIO_BUFFERING","SAMPLE_COUNT","SAMPLE_MASK","audio_samples_L","Float32Array","audio_samples_R","audio_write_cursor","audio_read_cursor","framebuffer_24","l","onAnimationFrame","parseInt","window","requestAnimationFrame","set","putImageData","audio_remain","audio_callback","event","dst","outputBuffer","len","dst_l","getChannelData","dst_r","src_idx","player1Set","player2Set","nesSet","reSet","PauseAndStart","keyboard","player1","player2","keyCode","reStart","toggleVoice","toggleRunAndStart","nes_init","canvas_id","canvas","document","getElementById","getContext","getImageData","fillStyle","fillRect","ArrayBuffer","Uint8ClampedArray","Uint32Array","alerdSet","audio_ctx","AudioContext","webkitAudioContext","console","resume","script_processor","createScriptProcessor","connect","destination","screen","$","nes_boot","rom_data","nes_load_url","path","req","XMLHttpRequest","open","overrideMimeType","onerror","log","statusText","onload","responseText","send","suspend","localStorage","getItem","JSON","parse","temp2","temp3","saveThisKeyMap","setItem","stringify","addEventListener","romsData","8","9","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","48","49","50","51","52","53","54","55","56","57","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","93","96","97","98","99","100","101","102","103","104","105","106","107","109","110","111","112","113","114","115","116","117","118","120","121","122","123","144","145","186","187","188","189","190","191","192","219","220","221","222","_typeof","Symbol","iterator","constructor","start","gamepadInfo","rAF","mozRequestAnimationFrame","webkitRequestAnimationFrame","rAFStop","mozCancelRequestAnimationFrame","webkitCancelRequestAnimationFrame","cancelRequestAnimationFrame","gp","navigator","getGamepads","innerHTML","id","buttons","axes","gameLoop","interval","setInterval","pollGamepads","gamepads","webkitGetGamepads","clearInterval","buttonPressed","pressed","touched","keys","KEY_A","KEY_B","KEY_SELECT","KEY_START","KEY_UP","KEY_DOWN","KEY_LEFT","KEY_RIGHT","_keyA","_keyB","_tubA","_tubB","kesA","12","14","15","keyPress","pressKey","canSet","gamePadApi","setGamePad","canSetValue","setGamePadCall","tubrro","idnex","setTimeout","kesPad","saveKesPadSet","component","runtime","exports","Op","Object","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","AsyncIterator","PromiseImpl","invoke","record","result","__await","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","object","reverse","pop","skipTempReset","prev","charAt","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function"],"mappings":"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","file":"js/chunk-4f4adec2.b6e33110.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hello\",attrs:{\"align\":\"center\"}},[_c('div',{staticClass:\"container\"},[_c('el-row',[_c('el-col',{attrs:{\"span\":_vm.cb1}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\"},on:{\"change\":_vm.changeGame},model:{value:(_vm.value),callback:function ($$v) {_vm.value=$$v},expression:\"value\"}},_vm._l((_vm.options),function(group){return _c('el-option-group',{key:group.label,attrs:{\"label\":group.label}},_vm._l((group.options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)}),1)],1),_c('el-col',{attrs:{\"span\":_vm.cb2}},[_c('el-tag',{staticStyle:{\"float\":\"left\"},model:{value:(_vm.fps),callback:function ($$v) {_vm.fps=$$v},expression:\"fps\"}},[_vm._v(\"FPS:\"+_vm._s(_vm.fps))])],1),_c('el-col',{attrs:{\"span\":_vm.zj}},[_c('DIV',{staticStyle:{\"text-align\":\"center\"},attrs:{\"ID\":\"emulator\"}},[_c('canvas',{attrs:{\"id\":\"nes-canvas\",\"width\":_vm.canWidth,\"height\":_vm.canHeigh}})])],1),_c('el-col',{attrs:{\"span\":_vm.cb3}},[_c('el-collapse',{attrs:{\"accordion\":\"\"},model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v},expression:\"activeName\"}},[_c('el-collapse-item',{attrs:{\"title\":\"手柄设置\",\"name\":\"gamepad\"}},_vm._l((_vm.gamePadSet),function(item,index){return _c('el-row',{key:index},[_c('el-col',{attrs:{\"span\":_vm.labSpan}},[_c('el-tag',[_vm._v(_vm._s(item.label))])],1),_c('el-col',{attrs:{\"span\":_vm.inputSpan}},[_c('el-input',{attrs:{\"placeholder\":\"请输入内容\"},model:{value:(item.key),callback:function ($$v) {_vm.$set(item, \"key\", $$v)},expression:\"item.key\"}})],1)],1)}),1),_c('el-collapse-item',{attrs:{\"title\":\"p1\",\"name\":\"p1\"}},_vm._l((_vm.player1Set),function(item,index){return _c('el-row',{key:index},[_c('el-col',{attrs:{\"span\":_vm.labSpan}},[_c('el-tag',[_vm._v(_vm._s(item.label))])],1),_c('el-col',{attrs:{\"span\":_vm.inputSpan}},[_c('el-input',{attrs:{\"placeholder\":\"请输入内容\"},model:{value:(_vm.keyMap[item.key]),callback:function ($$v) {_vm.$set(_vm.keyMap, item.key, $$v)},expression:\"keyMap[item.key]\"}})],1)],1)}),1),_c('el-collapse-item',{attrs:{\"title\":\"p2\",\"name\":\"p2\"}},_vm._l((_vm.player2Set),function(item,index){return _c('el-row',{key:index},[_c('el-col',{attrs:{\"span\":_vm.labSpan}},[_c('el-tag',[_vm._v(_vm._s(item.label))])],1),_c('el-col',{attrs:{\"span\":_vm.inputSpan}},[_c('el-input',{attrs:{\"placeholder\":\"请输入内容\"},model:{value:(_vm.keyMap[item.key]),callback:function ($$v) {_vm.$set(_vm.keyMap, item.key, $$v)},expression:\"keyMap[item.key]\"}})],1)],1)}),1)],1)],1)],1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","var Controller = function () {\r\n  this.state = new Array(8);\r\n  for (var i = 0; i < this.state.length; i++) {\r\n    this.state[i] = 0x40;\r\n  }\r\n};\r\n\r\nController.BUTTON_A = 0;\r\nController.BUTTON_B = 1;\r\nController.BUTTON_SELECT = 2;\r\nController.BUTTON_START = 3;\r\nController.BUTTON_UP = 4;\r\nController.BUTTON_DOWN = 5;\r\nController.BUTTON_LEFT = 6;\r\nController.BUTTON_RIGHT = 7;\r\n\r\nController.prototype = {\r\n  buttonDown: function (key) {\r\n    this.state[key] = 0x41;\r\n  },\r\n\r\n  buttonUp: function (key) {\r\n    this.state[key] = 0x40;\r\n  },\r\n};\r\n\r\nexport {Controller} ;\r\n","let utils = {\r\n  copyArrayElements: function (src, srcPos, dest, destPos, length) {\r\n    for (var i = 0; i < length; ++i) {\r\n      dest[destPos + i] = src[srcPos + i];\r\n    }\r\n  },\r\n\r\n  copyArray: function (src) {\r\n    return src.slice(0);\r\n  },\r\n\r\n  fromJSON: function (obj, state) {\r\n    for (var i = 0; i < obj.JSON_PROPERTIES.length; i++) {\r\n      obj[obj.JSON_PROPERTIES[i]] = state[obj.JSON_PROPERTIES[i]];\r\n    }\r\n  },\r\n\r\n  toJSON: function (obj) {\r\n    var state = {};\r\n    for (var i = 0; i < obj.JSON_PROPERTIES.length; i++) {\r\n      state[obj.JSON_PROPERTIES[i]] = obj[obj.JSON_PROPERTIES[i]];\r\n    }\r\n    return state;\r\n  },\r\n};\r\n\r\nexport {utils};","import {utils} from './utils.js'\r\n\r\nvar CPU = function (nes) {\r\n  this.nes = nes;\r\n\r\n  // Keep Chrome happy\r\n  this.mem = null;\r\n  this.REG_ACC = null;\r\n  this.REG_X = null;\r\n  this.REG_Y = null;\r\n  this.REG_SP = null;\r\n  this.REG_PC = null;\r\n  this.REG_PC_NEW = null;\r\n  this.REG_STATUS = null;\r\n  this.F_CARRY = null;\r\n  this.F_DECIMAL = null;\r\n  this.F_INTERRUPT = null;\r\n  this.F_INTERRUPT_NEW = null;\r\n  this.F_OVERFLOW = null;\r\n  this.F_SIGN = null;\r\n  this.F_ZERO = null;\r\n  this.F_NOTUSED = null;\r\n  this.F_NOTUSED_NEW = null;\r\n  this.F_BRK = null;\r\n  this.F_BRK_NEW = null;\r\n  this.opdata = null;\r\n  this.cyclesToHalt = null;\r\n  this.crash = null;\r\n  this.irqRequested = null;\r\n  this.irqType = null;\r\n\r\n  this.reset();\r\n};\r\n\r\nCPU.prototype = {\r\n  // IRQ Types\r\n  IRQ_NORMAL: 0,\r\n  IRQ_NMI: 1,\r\n  IRQ_RESET: 2,\r\n\r\n  reset: function () {\r\n    // Main memory\r\n    this.mem = new Array(0x10000);\r\n\r\n    for (var i = 0; i < 0x2000; i++) {\r\n      this.mem[i] = 0xff;\r\n    }\r\n    for (var p = 0; p < 4; p++) {\r\n      var j = p * 0x800;\r\n      this.mem[j + 0x008] = 0xf7;\r\n      this.mem[j + 0x009] = 0xef;\r\n      this.mem[j + 0x00a] = 0xdf;\r\n      this.mem[j + 0x00f] = 0xbf;\r\n    }\r\n    for (var k = 0x2001; k < this.mem.length; k++) {\r\n      this.mem[k] = 0;\r\n    }\r\n\r\n    // CPU Registers:\r\n    this.REG_ACC = 0;\r\n    this.REG_X = 0;\r\n    this.REG_Y = 0;\r\n    // Reset Stack pointer:\r\n    this.REG_SP = 0x01ff;\r\n    // Reset Program counter:\r\n    this.REG_PC = 0x8000 - 1;\r\n    this.REG_PC_NEW = 0x8000 - 1;\r\n    // Reset Status register:\r\n    this.REG_STATUS = 0x28;\r\n\r\n    this.setStatus(0x28);\r\n\r\n    // Set flags:\r\n    this.F_CARRY = 0;\r\n    this.F_DECIMAL = 0;\r\n    this.F_INTERRUPT = 1;\r\n    this.F_INTERRUPT_NEW = 1;\r\n    this.F_OVERFLOW = 0;\r\n    this.F_SIGN = 0;\r\n    this.F_ZERO = 1;\r\n\r\n    this.F_NOTUSED = 1;\r\n    this.F_NOTUSED_NEW = 1;\r\n    this.F_BRK = 1;\r\n    this.F_BRK_NEW = 1;\r\n\r\n    this.opdata = new OpData().opdata;\r\n    this.cyclesToHalt = 0;\r\n\r\n    // Reset crash flag:\r\n    this.crash = false;\r\n\r\n    // Interrupt notification:\r\n    this.irqRequested = false;\r\n    this.irqType = null;\r\n  },\r\n\r\n  // Emulates a single CPU instruction, returns the number of cycles\r\n  emulate: function () {\r\n    var temp;\r\n    var add;\r\n\r\n    // Check interrupts:\r\n    if (this.irqRequested) {\r\n      temp =\r\n        this.F_CARRY |\r\n        ((this.F_ZERO === 0 ? 1 : 0) << 1) |\r\n        (this.F_INTERRUPT << 2) |\r\n        (this.F_DECIMAL << 3) |\r\n        (this.F_BRK << 4) |\r\n        (this.F_NOTUSED << 5) |\r\n        (this.F_OVERFLOW << 6) |\r\n        (this.F_SIGN << 7);\r\n\r\n      this.REG_PC_NEW = this.REG_PC;\r\n      this.F_INTERRUPT_NEW = this.F_INTERRUPT;\r\n      switch (this.irqType) {\r\n        case 0: {\r\n          // Normal IRQ:\r\n          if (this.F_INTERRUPT !== 0) {\r\n            // console.log(\"Interrupt was masked.\");\r\n            break;\r\n          }\r\n          this.doIrq(temp);\r\n          // console.log(\"Did normal IRQ. I=\"+this.F_INTERRUPT);\r\n          break;\r\n        }\r\n        case 1: {\r\n          // NMI:\r\n          this.doNonMaskableInterrupt(temp);\r\n          break;\r\n        }\r\n        case 2: {\r\n          // Reset:\r\n          this.doResetInterrupt();\r\n          break;\r\n        }\r\n      }\r\n\r\n      this.REG_PC = this.REG_PC_NEW;\r\n      this.F_INTERRUPT = this.F_INTERRUPT_NEW;\r\n      this.F_BRK = this.F_BRK_NEW;\r\n      this.irqRequested = false;\r\n    }\r\n\r\n    var opinf = this.opdata[this.nes.mmap.load(this.REG_PC + 1)];\r\n    var cycleCount = opinf >> 24;\r\n    var cycleAdd = 0;\r\n\r\n    // Find address mode:\r\n    var addrMode = (opinf >> 8) & 0xff;\r\n\r\n    // Increment PC by number of op bytes:\r\n    var opaddr = this.REG_PC;\r\n    this.REG_PC += (opinf >> 16) & 0xff;\r\n\r\n    var addr = 0;\r\n    switch (addrMode) {\r\n      case 0: {\r\n        // Zero Page mode. Use the address given after the opcode,\r\n        // but without high byte.\r\n        addr = this.load(opaddr + 2);\r\n        break;\r\n      }\r\n      case 1: {\r\n        // Relative mode.\r\n        addr = this.load(opaddr + 2);\r\n        if (addr < 0x80) {\r\n          addr += this.REG_PC;\r\n        } else {\r\n          addr += this.REG_PC - 256;\r\n        }\r\n        break;\r\n      }\r\n      case 2: {\r\n        // Ignore. Address is implied in instruction.\r\n        break;\r\n      }\r\n      case 3: {\r\n        // Absolute mode. Use the two bytes following the opcode as\r\n        // an address.\r\n        addr = this.load16bit(opaddr + 2);\r\n        break;\r\n      }\r\n      case 4: {\r\n        // Accumulator mode. The address is in the accumulator\r\n        // register.\r\n        addr = this.REG_ACC;\r\n        break;\r\n      }\r\n      case 5: {\r\n        // Immediate mode. The value is given after the opcode.\r\n        addr = this.REG_PC;\r\n        break;\r\n      }\r\n      case 6: {\r\n        // Zero Page Indexed mode, X as index. Use the address given\r\n        // after the opcode, then add the\r\n        // X register to it to get the final address.\r\n        addr = (this.load(opaddr + 2) + this.REG_X) & 0xff;\r\n        break;\r\n      }\r\n      case 7: {\r\n        // Zero Page Indexed mode, Y as index. Use the address given\r\n        // after the opcode, then add the\r\n        // Y register to it to get the final address.\r\n        addr = (this.load(opaddr + 2) + this.REG_Y) & 0xff;\r\n        break;\r\n      }\r\n      case 8: {\r\n        // Absolute Indexed Mode, X as index. Same as zero page\r\n        // indexed, but with the high byte.\r\n        addr = this.load16bit(opaddr + 2);\r\n        if ((addr & 0xff00) !== ((addr + this.REG_X) & 0xff00)) {\r\n          cycleAdd = 1;\r\n        }\r\n        addr += this.REG_X;\r\n        break;\r\n      }\r\n      case 9: {\r\n        // Absolute Indexed Mode, Y as index. Same as zero page\r\n        // indexed, but with the high byte.\r\n        addr = this.load16bit(opaddr + 2);\r\n        if ((addr & 0xff00) !== ((addr + this.REG_Y) & 0xff00)) {\r\n          cycleAdd = 1;\r\n        }\r\n        addr += this.REG_Y;\r\n        break;\r\n      }\r\n      case 10: {\r\n        // Pre-indexed Indirect mode. Find the 16-bit address\r\n        // starting at the given location plus\r\n        // the current X register. The value is the contents of that\r\n        // address.\r\n        addr = this.load(opaddr + 2);\r\n        if ((addr & 0xff00) !== ((addr + this.REG_X) & 0xff00)) {\r\n          cycleAdd = 1;\r\n        }\r\n        addr += this.REG_X;\r\n        addr &= 0xff;\r\n        addr = this.load16bit(addr);\r\n        break;\r\n      }\r\n      case 11: {\r\n        // Post-indexed Indirect mode. Find the 16-bit address\r\n        // contained in the given location\r\n        // (and the one following). Add to that address the contents\r\n        // of the Y register. Fetch the value\r\n        // stored at that adress.\r\n        addr = this.load16bit(this.load(opaddr + 2));\r\n        if ((addr & 0xff00) !== ((addr + this.REG_Y) & 0xff00)) {\r\n          cycleAdd = 1;\r\n        }\r\n        addr += this.REG_Y;\r\n        break;\r\n      }\r\n      case 12: {\r\n        // Indirect Absolute mode. Find the 16-bit address contained\r\n        // at the given location.\r\n        addr = this.load16bit(opaddr + 2); // Find op\r\n        if (addr < 0x1fff) {\r\n          addr =\r\n            this.mem[addr] +\r\n            (this.mem[(addr & 0xff00) | (((addr & 0xff) + 1) & 0xff)] << 8); // Read from address given in op\r\n        } else {\r\n          addr =\r\n            this.nes.mmap.load(addr) +\r\n            (this.nes.mmap.load(\r\n              (addr & 0xff00) | (((addr & 0xff) + 1) & 0xff)\r\n            ) <<\r\n              8);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    // Wrap around for addresses above 0xFFFF:\r\n    addr &= 0xffff;\r\n\r\n    // ----------------------------------------------------------------------------------------------------\r\n    // Decode & execute instruction:\r\n    // ----------------------------------------------------------------------------------------------------\r\n\r\n    // This should be compiled to a jump table.\r\n    switch (opinf & 0xff) {\r\n      case 0: {\r\n        // *******\r\n        // * ADC *\r\n        // *******\r\n\r\n        // Add with carry.\r\n        temp = this.REG_ACC + this.load(addr) + this.F_CARRY;\r\n\r\n        if (\r\n          ((this.REG_ACC ^ this.load(addr)) & 0x80) === 0 &&\r\n          ((this.REG_ACC ^ temp) & 0x80) !== 0\r\n        ) {\r\n          this.F_OVERFLOW = 1;\r\n        } else {\r\n          this.F_OVERFLOW = 0;\r\n        }\r\n        this.F_CARRY = temp > 255 ? 1 : 0;\r\n        this.F_SIGN = (temp >> 7) & 1;\r\n        this.F_ZERO = temp & 0xff;\r\n        this.REG_ACC = temp & 255;\r\n        cycleCount += cycleAdd;\r\n        break;\r\n      }\r\n      case 1: {\r\n        // *******\r\n        // * AND *\r\n        // *******\r\n\r\n        // AND memory with accumulator.\r\n        this.REG_ACC = this.REG_ACC & this.load(addr);\r\n        this.F_SIGN = (this.REG_ACC >> 7) & 1;\r\n        this.F_ZERO = this.REG_ACC;\r\n        if (addrMode !== 11) cycleCount += cycleAdd; // PostIdxInd = 11\r\n        break;\r\n      }\r\n      case 2: {\r\n        // *******\r\n        // * ASL *\r\n        // *******\r\n\r\n        // Shift left one bit\r\n        if (addrMode === 4) {\r\n          // ADDR_ACC = 4\r\n\r\n          this.F_CARRY = (this.REG_ACC >> 7) & 1;\r\n          this.REG_ACC = (this.REG_ACC << 1) & 255;\r\n          this.F_SIGN = (this.REG_ACC >> 7) & 1;\r\n          this.F_ZERO = this.REG_ACC;\r\n        } else {\r\n          temp = this.load(addr);\r\n          this.F_CARRY = (temp >> 7) & 1;\r\n          temp = (temp << 1) & 255;\r\n          this.F_SIGN = (temp >> 7) & 1;\r\n          this.F_ZERO = temp;\r\n          this.write(addr, temp);\r\n        }\r\n        break;\r\n      }\r\n      case 3: {\r\n        // *******\r\n        // * BCC *\r\n        // *******\r\n\r\n        // Branch on carry clear\r\n        if (this.F_CARRY === 0) {\r\n          cycleCount += (opaddr & 0xff00) !== (addr & 0xff00) ? 2 : 1;\r\n          this.REG_PC = addr;\r\n        }\r\n        break;\r\n      }\r\n      case 4: {\r\n        // *******\r\n        // * BCS *\r\n        // *******\r\n\r\n        // Branch on carry set\r\n        if (this.F_CARRY === 1) {\r\n          cycleCount += (opaddr & 0xff00) !== (addr & 0xff00) ? 2 : 1;\r\n          this.REG_PC = addr;\r\n        }\r\n        break;\r\n      }\r\n      case 5: {\r\n        // *******\r\n        // * BEQ *\r\n        // *******\r\n\r\n        // Branch on zero\r\n        if (this.F_ZERO === 0) {\r\n          cycleCount += (opaddr & 0xff00) !== (addr & 0xff00) ? 2 : 1;\r\n          this.REG_PC = addr;\r\n        }\r\n        break;\r\n      }\r\n      case 6: {\r\n        // *******\r\n        // * BIT *\r\n        // *******\r\n\r\n        temp = this.load(addr);\r\n        this.F_SIGN = (temp >> 7) & 1;\r\n        this.F_OVERFLOW = (temp >> 6) & 1;\r\n        temp &= this.REG_ACC;\r\n        this.F_ZERO = temp;\r\n        break;\r\n      }\r\n      case 7: {\r\n        // *******\r\n        // * BMI *\r\n        // *******\r\n\r\n        // Branch on negative result\r\n        if (this.F_SIGN === 1) {\r\n          cycleCount++;\r\n          this.REG_PC = addr;\r\n        }\r\n        break;\r\n      }\r\n      case 8: {\r\n        // *******\r\n        // * BNE *\r\n        // *******\r\n\r\n        // Branch on not zero\r\n        if (this.F_ZERO !== 0) {\r\n          cycleCount += (opaddr & 0xff00) !== (addr & 0xff00) ? 2 : 1;\r\n          this.REG_PC = addr;\r\n        }\r\n        break;\r\n      }\r\n      case 9: {\r\n        // *******\r\n        // * BPL *\r\n        // *******\r\n\r\n        // Branch on positive result\r\n        if (this.F_SIGN === 0) {\r\n          cycleCount += (opaddr & 0xff00) !== (addr & 0xff00) ? 2 : 1;\r\n          this.REG_PC = addr;\r\n        }\r\n        break;\r\n      }\r\n      case 10: {\r\n        // *******\r\n        // * BRK *\r\n        // *******\r\n\r\n        this.REG_PC += 2;\r\n        this.push((this.REG_PC >> 8) & 255);\r\n        this.push(this.REG_PC & 255);\r\n        this.F_BRK = 1;\r\n\r\n        this.push(\r\n          this.F_CARRY |\r\n            ((this.F_ZERO === 0 ? 1 : 0) << 1) |\r\n            (this.F_INTERRUPT << 2) |\r\n            (this.F_DECIMAL << 3) |\r\n            (this.F_BRK << 4) |\r\n            (this.F_NOTUSED << 5) |\r\n            (this.F_OVERFLOW << 6) |\r\n            (this.F_SIGN << 7)\r\n        );\r\n\r\n        this.F_INTERRUPT = 1;\r\n        //this.REG_PC = load(0xFFFE) | (load(0xFFFF) << 8);\r\n        this.REG_PC = this.load16bit(0xfffe);\r\n        this.REG_PC--;\r\n        break;\r\n      }\r\n      case 11: {\r\n        // *******\r\n        // * BVC *\r\n        // *******\r\n\r\n        // Branch on overflow clear\r\n        if (this.F_OVERFLOW === 0) {\r\n          cycleCount += (opaddr & 0xff00) !== (addr & 0xff00) ? 2 : 1;\r\n          this.REG_PC = addr;\r\n        }\r\n        break;\r\n      }\r\n      case 12: {\r\n        // *******\r\n        // * BVS *\r\n        // *******\r\n\r\n        // Branch on overflow set\r\n        if (this.F_OVERFLOW === 1) {\r\n          cycleCount += (opaddr & 0xff00) !== (addr & 0xff00) ? 2 : 1;\r\n          this.REG_PC = addr;\r\n        }\r\n        break;\r\n      }\r\n      case 13: {\r\n        // *******\r\n        // * CLC *\r\n        // *******\r\n\r\n        // Clear carry flag\r\n        this.F_CARRY = 0;\r\n        break;\r\n      }\r\n      case 14: {\r\n        // *******\r\n        // * CLD *\r\n        // *******\r\n\r\n        // Clear decimal flag\r\n        this.F_DECIMAL = 0;\r\n        break;\r\n      }\r\n      case 15: {\r\n        // *******\r\n        // * CLI *\r\n        // *******\r\n\r\n        // Clear interrupt flag\r\n        this.F_INTERRUPT = 0;\r\n        break;\r\n      }\r\n      case 16: {\r\n        // *******\r\n        // * CLV *\r\n        // *******\r\n\r\n        // Clear overflow flag\r\n        this.F_OVERFLOW = 0;\r\n        break;\r\n      }\r\n      case 17: {\r\n        // *******\r\n        // * CMP *\r\n        // *******\r\n\r\n        // Compare memory and accumulator:\r\n        temp = this.REG_ACC - this.load(addr);\r\n        this.F_CARRY = temp >= 0 ? 1 : 0;\r\n        this.F_SIGN = (temp >> 7) & 1;\r\n        this.F_ZERO = temp & 0xff;\r\n        cycleCount += cycleAdd;\r\n        break;\r\n      }\r\n      case 18: {\r\n        // *******\r\n        // * CPX *\r\n        // *******\r\n\r\n        // Compare memory and index X:\r\n        temp = this.REG_X - this.load(addr);\r\n        this.F_CARRY = temp >= 0 ? 1 : 0;\r\n        this.F_SIGN = (temp >> 7) & 1;\r\n        this.F_ZERO = temp & 0xff;\r\n        break;\r\n      }\r\n      case 19: {\r\n        // *******\r\n        // * CPY *\r\n        // *******\r\n\r\n        // Compare memory and index Y:\r\n        temp = this.REG_Y - this.load(addr);\r\n        this.F_CARRY = temp >= 0 ? 1 : 0;\r\n        this.F_SIGN = (temp >> 7) & 1;\r\n        this.F_ZERO = temp & 0xff;\r\n        break;\r\n      }\r\n      case 20: {\r\n        // *******\r\n        // * DEC *\r\n        // *******\r\n\r\n        // Decrement memory by one:\r\n        temp = (this.load(addr) - 1) & 0xff;\r\n        this.F_SIGN = (temp >> 7) & 1;\r\n        this.F_ZERO = temp;\r\n        this.write(addr, temp);\r\n        break;\r\n      }\r\n      case 21: {\r\n        // *******\r\n        // * DEX *\r\n        // *******\r\n\r\n        // Decrement index X by one:\r\n        this.REG_X = (this.REG_X - 1) & 0xff;\r\n        this.F_SIGN = (this.REG_X >> 7) & 1;\r\n        this.F_ZERO = this.REG_X;\r\n        break;\r\n      }\r\n      case 22: {\r\n        // *******\r\n        // * DEY *\r\n        // *******\r\n\r\n        // Decrement index Y by one:\r\n        this.REG_Y = (this.REG_Y - 1) & 0xff;\r\n        this.F_SIGN = (this.REG_Y >> 7) & 1;\r\n        this.F_ZERO = this.REG_Y;\r\n        break;\r\n      }\r\n      case 23: {\r\n        // *******\r\n        // * EOR *\r\n        // *******\r\n\r\n        // XOR Memory with accumulator, store in accumulator:\r\n        this.REG_ACC = (this.load(addr) ^ this.REG_ACC) & 0xff;\r\n        this.F_SIGN = (this.REG_ACC >> 7) & 1;\r\n        this.F_ZERO = this.REG_ACC;\r\n        cycleCount += cycleAdd;\r\n        break;\r\n      }\r\n      case 24: {\r\n        // *******\r\n        // * INC *\r\n        // *******\r\n\r\n        // Increment memory by one:\r\n        temp = (this.load(addr) + 1) & 0xff;\r\n        this.F_SIGN = (temp >> 7) & 1;\r\n        this.F_ZERO = temp;\r\n        this.write(addr, temp & 0xff);\r\n        break;\r\n      }\r\n      case 25: {\r\n        // *******\r\n        // * INX *\r\n        // *******\r\n\r\n        // Increment index X by one:\r\n        this.REG_X = (this.REG_X + 1) & 0xff;\r\n        this.F_SIGN = (this.REG_X >> 7) & 1;\r\n        this.F_ZERO = this.REG_X;\r\n        break;\r\n      }\r\n      case 26: {\r\n        // *******\r\n        // * INY *\r\n        // *******\r\n\r\n        // Increment index Y by one:\r\n        this.REG_Y++;\r\n        this.REG_Y &= 0xff;\r\n        this.F_SIGN = (this.REG_Y >> 7) & 1;\r\n        this.F_ZERO = this.REG_Y;\r\n        break;\r\n      }\r\n      case 27: {\r\n        // *******\r\n        // * JMP *\r\n        // *******\r\n\r\n        // Jump to new location:\r\n        this.REG_PC = addr - 1;\r\n        break;\r\n      }\r\n      case 28: {\r\n        // *******\r\n        // * JSR *\r\n        // *******\r\n\r\n        // Jump to new location, saving return address.\r\n        // Push return address on stack:\r\n        this.push((this.REG_PC >> 8) & 255);\r\n        this.push(this.REG_PC & 255);\r\n        this.REG_PC = addr - 1;\r\n        break;\r\n      }\r\n      case 29: {\r\n        // *******\r\n        // * LDA *\r\n        // *******\r\n\r\n        // Load accumulator with memory:\r\n        this.REG_ACC = this.load(addr);\r\n        this.F_SIGN = (this.REG_ACC >> 7) & 1;\r\n        this.F_ZERO = this.REG_ACC;\r\n        cycleCount += cycleAdd;\r\n        break;\r\n      }\r\n      case 30: {\r\n        // *******\r\n        // * LDX *\r\n        // *******\r\n\r\n        // Load index X with memory:\r\n        this.REG_X = this.load(addr);\r\n        this.F_SIGN = (this.REG_X >> 7) & 1;\r\n        this.F_ZERO = this.REG_X;\r\n        cycleCount += cycleAdd;\r\n        break;\r\n      }\r\n      case 31: {\r\n        // *******\r\n        // * LDY *\r\n        // *******\r\n\r\n        // Load index Y with memory:\r\n        this.REG_Y = this.load(addr);\r\n        this.F_SIGN = (this.REG_Y >> 7) & 1;\r\n        this.F_ZERO = this.REG_Y;\r\n        cycleCount += cycleAdd;\r\n        break;\r\n      }\r\n      case 32: {\r\n        // *******\r\n        // * LSR *\r\n        // *******\r\n\r\n        // Shift right one bit:\r\n        if (addrMode === 4) {\r\n          // ADDR_ACC\r\n\r\n          temp = this.REG_ACC & 0xff;\r\n          this.F_CARRY = temp & 1;\r\n          temp >>= 1;\r\n          this.REG_ACC = temp;\r\n        } else {\r\n          temp = this.load(addr) & 0xff;\r\n          this.F_CARRY = temp & 1;\r\n          temp >>= 1;\r\n          this.write(addr, temp);\r\n        }\r\n        this.F_SIGN = 0;\r\n        this.F_ZERO = temp;\r\n        break;\r\n      }\r\n      case 33: {\r\n        // *******\r\n        // * NOP *\r\n        // *******\r\n\r\n        // No OPeration.\r\n        // Ignore.\r\n        break;\r\n      }\r\n      case 34: {\r\n        // *******\r\n        // * ORA *\r\n        // *******\r\n\r\n        // OR memory with accumulator, store in accumulator.\r\n        temp = (this.load(addr) | this.REG_ACC) & 255;\r\n        this.F_SIGN = (temp >> 7) & 1;\r\n        this.F_ZERO = temp;\r\n        this.REG_ACC = temp;\r\n        if (addrMode !== 11) cycleCount += cycleAdd; // PostIdxInd = 11\r\n        break;\r\n      }\r\n      case 35: {\r\n        // *******\r\n        // * PHA *\r\n        // *******\r\n\r\n        // Push accumulator on stack\r\n        this.push(this.REG_ACC);\r\n        break;\r\n      }\r\n      case 36: {\r\n        // *******\r\n        // * PHP *\r\n        // *******\r\n\r\n        // Push processor status on stack\r\n        this.F_BRK = 1;\r\n        this.push(\r\n          this.F_CARRY |\r\n            ((this.F_ZERO === 0 ? 1 : 0) << 1) |\r\n            (this.F_INTERRUPT << 2) |\r\n            (this.F_DECIMAL << 3) |\r\n            (this.F_BRK << 4) |\r\n            (this.F_NOTUSED << 5) |\r\n            (this.F_OVERFLOW << 6) |\r\n            (this.F_SIGN << 7)\r\n        );\r\n        break;\r\n      }\r\n      case 37: {\r\n        // *******\r\n        // * PLA *\r\n        // *******\r\n\r\n        // Pull accumulator from stack\r\n        this.REG_ACC = this.pull();\r\n        this.F_SIGN = (this.REG_ACC >> 7) & 1;\r\n        this.F_ZERO = this.REG_ACC;\r\n        break;\r\n      }\r\n      case 38: {\r\n        // *******\r\n        // * PLP *\r\n        // *******\r\n\r\n        // Pull processor status from stack\r\n        temp = this.pull();\r\n        this.F_CARRY = temp & 1;\r\n        this.F_ZERO = ((temp >> 1) & 1) === 1 ? 0 : 1;\r\n        this.F_INTERRUPT = (temp >> 2) & 1;\r\n        this.F_DECIMAL = (temp >> 3) & 1;\r\n        this.F_BRK = (temp >> 4) & 1;\r\n        this.F_NOTUSED = (temp >> 5) & 1;\r\n        this.F_OVERFLOW = (temp >> 6) & 1;\r\n        this.F_SIGN = (temp >> 7) & 1;\r\n\r\n        this.F_NOTUSED = 1;\r\n        break;\r\n      }\r\n      case 39: {\r\n        // *******\r\n        // * ROL *\r\n        // *******\r\n\r\n        // Rotate one bit left\r\n        if (addrMode === 4) {\r\n          // ADDR_ACC = 4\r\n\r\n          temp = this.REG_ACC;\r\n          add = this.F_CARRY;\r\n          this.F_CARRY = (temp >> 7) & 1;\r\n          temp = ((temp << 1) & 0xff) + add;\r\n          this.REG_ACC = temp;\r\n        } else {\r\n          temp = this.load(addr);\r\n          add = this.F_CARRY;\r\n          this.F_CARRY = (temp >> 7) & 1;\r\n          temp = ((temp << 1) & 0xff) + add;\r\n          this.write(addr, temp);\r\n        }\r\n        this.F_SIGN = (temp >> 7) & 1;\r\n        this.F_ZERO = temp;\r\n        break;\r\n      }\r\n      case 40: {\r\n        // *******\r\n        // * ROR *\r\n        // *******\r\n\r\n        // Rotate one bit right\r\n        if (addrMode === 4) {\r\n          // ADDR_ACC = 4\r\n\r\n          add = this.F_CARRY << 7;\r\n          this.F_CARRY = this.REG_ACC & 1;\r\n          temp = (this.REG_ACC >> 1) + add;\r\n          this.REG_ACC = temp;\r\n        } else {\r\n          temp = this.load(addr);\r\n          add = this.F_CARRY << 7;\r\n          this.F_CARRY = temp & 1;\r\n          temp = (temp >> 1) + add;\r\n          this.write(addr, temp);\r\n        }\r\n        this.F_SIGN = (temp >> 7) & 1;\r\n        this.F_ZERO = temp;\r\n        break;\r\n      }\r\n      case 41: {\r\n        // *******\r\n        // * RTI *\r\n        // *******\r\n\r\n        // Return from interrupt. Pull status and PC from stack.\r\n\r\n        temp = this.pull();\r\n        this.F_CARRY = temp & 1;\r\n        this.F_ZERO = ((temp >> 1) & 1) === 0 ? 1 : 0;\r\n        this.F_INTERRUPT = (temp >> 2) & 1;\r\n        this.F_DECIMAL = (temp >> 3) & 1;\r\n        this.F_BRK = (temp >> 4) & 1;\r\n        this.F_NOTUSED = (temp >> 5) & 1;\r\n        this.F_OVERFLOW = (temp >> 6) & 1;\r\n        this.F_SIGN = (temp >> 7) & 1;\r\n\r\n        this.REG_PC = this.pull();\r\n        this.REG_PC += this.pull() << 8;\r\n        if (this.REG_PC === 0xffff) {\r\n          return;\r\n        }\r\n        this.REG_PC--;\r\n        this.F_NOTUSED = 1;\r\n        break;\r\n      }\r\n      case 42: {\r\n        // *******\r\n        // * RTS *\r\n        // *******\r\n\r\n        // Return from subroutine. Pull PC from stack.\r\n\r\n        this.REG_PC = this.pull();\r\n        this.REG_PC += this.pull() << 8;\r\n\r\n        if (this.REG_PC === 0xffff) {\r\n          return; // return from NSF play routine:\r\n        }\r\n        break;\r\n      }\r\n      case 43: {\r\n        // *******\r\n        // * SBC *\r\n        // *******\r\n\r\n        temp = this.REG_ACC - this.load(addr) - (1 - this.F_CARRY);\r\n        this.F_SIGN = (temp >> 7) & 1;\r\n        this.F_ZERO = temp & 0xff;\r\n        if (\r\n          ((this.REG_ACC ^ temp) & 0x80) !== 0 &&\r\n          ((this.REG_ACC ^ this.load(addr)) & 0x80) !== 0\r\n        ) {\r\n          this.F_OVERFLOW = 1;\r\n        } else {\r\n          this.F_OVERFLOW = 0;\r\n        }\r\n        this.F_CARRY = temp < 0 ? 0 : 1;\r\n        this.REG_ACC = temp & 0xff;\r\n        if (addrMode !== 11) cycleCount += cycleAdd; // PostIdxInd = 11\r\n        break;\r\n      }\r\n      case 44: {\r\n        // *******\r\n        // * SEC *\r\n        // *******\r\n\r\n        // Set carry flag\r\n        this.F_CARRY = 1;\r\n        break;\r\n      }\r\n      case 45: {\r\n        // *******\r\n        // * SED *\r\n        // *******\r\n\r\n        // Set decimal mode\r\n        this.F_DECIMAL = 1;\r\n        break;\r\n      }\r\n      case 46: {\r\n        // *******\r\n        // * SEI *\r\n        // *******\r\n\r\n        // Set interrupt disable status\r\n        this.F_INTERRUPT = 1;\r\n        break;\r\n      }\r\n      case 47: {\r\n        // *******\r\n        // * STA *\r\n        // *******\r\n\r\n        // Store accumulator in memory\r\n        this.write(addr, this.REG_ACC);\r\n        break;\r\n      }\r\n      case 48: {\r\n        // *******\r\n        // * STX *\r\n        // *******\r\n\r\n        // Store index X in memory\r\n        this.write(addr, this.REG_X);\r\n        break;\r\n      }\r\n      case 49: {\r\n        // *******\r\n        // * STY *\r\n        // *******\r\n\r\n        // Store index Y in memory:\r\n        this.write(addr, this.REG_Y);\r\n        break;\r\n      }\r\n      case 50: {\r\n        // *******\r\n        // * TAX *\r\n        // *******\r\n\r\n        // Transfer accumulator to index X:\r\n        this.REG_X = this.REG_ACC;\r\n        this.F_SIGN = (this.REG_ACC >> 7) & 1;\r\n        this.F_ZERO = this.REG_ACC;\r\n        break;\r\n      }\r\n      case 51: {\r\n        // *******\r\n        // * TAY *\r\n        // *******\r\n\r\n        // Transfer accumulator to index Y:\r\n        this.REG_Y = this.REG_ACC;\r\n        this.F_SIGN = (this.REG_ACC >> 7) & 1;\r\n        this.F_ZERO = this.REG_ACC;\r\n        break;\r\n      }\r\n      case 52: {\r\n        // *******\r\n        // * TSX *\r\n        // *******\r\n\r\n        // Transfer stack pointer to index X:\r\n        this.REG_X = this.REG_SP - 0x0100;\r\n        this.F_SIGN = (this.REG_SP >> 7) & 1;\r\n        this.F_ZERO = this.REG_X;\r\n        break;\r\n      }\r\n      case 53: {\r\n        // *******\r\n        // * TXA *\r\n        // *******\r\n\r\n        // Transfer index X to accumulator:\r\n        this.REG_ACC = this.REG_X;\r\n        this.F_SIGN = (this.REG_X >> 7) & 1;\r\n        this.F_ZERO = this.REG_X;\r\n        break;\r\n      }\r\n      case 54: {\r\n        // *******\r\n        // * TXS *\r\n        // *******\r\n\r\n        // Transfer index X to stack pointer:\r\n        this.REG_SP = this.REG_X + 0x0100;\r\n        this.stackWrap();\r\n        break;\r\n      }\r\n      case 55: {\r\n        // *******\r\n        // * TYA *\r\n        // *******\r\n\r\n        // Transfer index Y to accumulator:\r\n        this.REG_ACC = this.REG_Y;\r\n        this.F_SIGN = (this.REG_Y >> 7) & 1;\r\n        this.F_ZERO = this.REG_Y;\r\n        break;\r\n      }\r\n      case 56: {\r\n        // *******\r\n        // * ALR *\r\n        // *******\r\n\r\n        // Shift right one bit after ANDing:\r\n        temp = this.REG_ACC & this.load(addr);\r\n        this.F_CARRY = temp & 1;\r\n        this.REG_ACC = this.F_ZERO = temp >> 1;\r\n        this.F_SIGN = 0;\r\n        break;\r\n      }\r\n      case 57: {\r\n        // *******\r\n        // * ANC *\r\n        // *******\r\n\r\n        // AND accumulator, setting carry to bit 7 result.\r\n        this.REG_ACC = this.F_ZERO = this.REG_ACC & this.load(addr);\r\n        this.F_CARRY = this.F_SIGN = (this.REG_ACC >> 7) & 1;\r\n        break;\r\n      }\r\n      case 58: {\r\n        // *******\r\n        // * ARR *\r\n        // *******\r\n\r\n        // Rotate right one bit after ANDing:\r\n        temp = this.REG_ACC & this.load(addr);\r\n        this.REG_ACC = this.F_ZERO = (temp >> 1) + (this.F_CARRY << 7);\r\n        this.F_SIGN = this.F_CARRY;\r\n        this.F_CARRY = (temp >> 7) & 1;\r\n        this.F_OVERFLOW = ((temp >> 7) ^ (temp >> 6)) & 1;\r\n        break;\r\n      }\r\n      case 59: {\r\n        // *******\r\n        // * AXS *\r\n        // *******\r\n\r\n        // Set X to (X AND A) - value.\r\n        temp = (this.REG_X & this.REG_ACC) - this.load(addr);\r\n        this.F_SIGN = (temp >> 7) & 1;\r\n        this.F_ZERO = temp & 0xff;\r\n        if (\r\n          ((this.REG_X ^ temp) & 0x80) !== 0 &&\r\n          ((this.REG_X ^ this.load(addr)) & 0x80) !== 0\r\n        ) {\r\n          this.F_OVERFLOW = 1;\r\n        } else {\r\n          this.F_OVERFLOW = 0;\r\n        }\r\n        this.F_CARRY = temp < 0 ? 0 : 1;\r\n        this.REG_X = temp & 0xff;\r\n        break;\r\n      }\r\n      case 60: {\r\n        // *******\r\n        // * LAX *\r\n        // *******\r\n\r\n        // Load A and X with memory:\r\n        this.REG_ACC = this.REG_X = this.F_ZERO = this.load(addr);\r\n        this.F_SIGN = (this.REG_ACC >> 7) & 1;\r\n        cycleCount += cycleAdd;\r\n        break;\r\n      }\r\n      case 61: {\r\n        // *******\r\n        // * SAX *\r\n        // *******\r\n\r\n        // Store A AND X in memory:\r\n        this.write(addr, this.REG_ACC & this.REG_X);\r\n        break;\r\n      }\r\n      case 62: {\r\n        // *******\r\n        // * DCP *\r\n        // *******\r\n\r\n        // Decrement memory by one:\r\n        temp = (this.load(addr) - 1) & 0xff;\r\n        this.write(addr, temp);\r\n\r\n        // Then compare with the accumulator:\r\n        temp = this.REG_ACC - temp;\r\n        this.F_CARRY = temp >= 0 ? 1 : 0;\r\n        this.F_SIGN = (temp >> 7) & 1;\r\n        this.F_ZERO = temp & 0xff;\r\n        if (addrMode !== 11) cycleCount += cycleAdd; // PostIdxInd = 11\r\n        break;\r\n      }\r\n      case 63: {\r\n        // *******\r\n        // * ISC *\r\n        // *******\r\n\r\n        // Increment memory by one:\r\n        temp = (this.load(addr) + 1) & 0xff;\r\n        this.write(addr, temp);\r\n\r\n        // Then subtract from the accumulator:\r\n        temp = this.REG_ACC - temp - (1 - this.F_CARRY);\r\n        this.F_SIGN = (temp >> 7) & 1;\r\n        this.F_ZERO = temp & 0xff;\r\n        if (\r\n          ((this.REG_ACC ^ temp) & 0x80) !== 0 &&\r\n          ((this.REG_ACC ^ this.load(addr)) & 0x80) !== 0\r\n        ) {\r\n          this.F_OVERFLOW = 1;\r\n        } else {\r\n          this.F_OVERFLOW = 0;\r\n        }\r\n        this.F_CARRY = temp < 0 ? 0 : 1;\r\n        this.REG_ACC = temp & 0xff;\r\n        if (addrMode !== 11) cycleCount += cycleAdd; // PostIdxInd = 11\r\n        break;\r\n      }\r\n      case 64: {\r\n        // *******\r\n        // * RLA *\r\n        // *******\r\n\r\n        // Rotate one bit left\r\n        temp = this.load(addr);\r\n        add = this.F_CARRY;\r\n        this.F_CARRY = (temp >> 7) & 1;\r\n        temp = ((temp << 1) & 0xff) + add;\r\n        this.write(addr, temp);\r\n\r\n        // Then AND with the accumulator.\r\n        this.REG_ACC = this.REG_ACC & temp;\r\n        this.F_SIGN = (this.REG_ACC >> 7) & 1;\r\n        this.F_ZERO = this.REG_ACC;\r\n        if (addrMode !== 11) cycleCount += cycleAdd; // PostIdxInd = 11\r\n        break;\r\n      }\r\n      case 65: {\r\n        // *******\r\n        // * RRA *\r\n        // *******\r\n\r\n        // Rotate one bit right\r\n        temp = this.load(addr);\r\n        add = this.F_CARRY << 7;\r\n        this.F_CARRY = temp & 1;\r\n        temp = (temp >> 1) + add;\r\n        this.write(addr, temp);\r\n\r\n        // Then add to the accumulator\r\n        temp = this.REG_ACC + this.load(addr) + this.F_CARRY;\r\n\r\n        if (\r\n          ((this.REG_ACC ^ this.load(addr)) & 0x80) === 0 &&\r\n          ((this.REG_ACC ^ temp) & 0x80) !== 0\r\n        ) {\r\n          this.F_OVERFLOW = 1;\r\n        } else {\r\n          this.F_OVERFLOW = 0;\r\n        }\r\n        this.F_CARRY = temp > 255 ? 1 : 0;\r\n        this.F_SIGN = (temp >> 7) & 1;\r\n        this.F_ZERO = temp & 0xff;\r\n        this.REG_ACC = temp & 255;\r\n        if (addrMode !== 11) cycleCount += cycleAdd; // PostIdxInd = 11\r\n        break;\r\n      }\r\n      case 66: {\r\n        // *******\r\n        // * SLO *\r\n        // *******\r\n\r\n        // Shift one bit left\r\n        temp = this.load(addr);\r\n        this.F_CARRY = (temp >> 7) & 1;\r\n        temp = (temp << 1) & 255;\r\n        this.write(addr, temp);\r\n\r\n        // Then OR with the accumulator.\r\n        this.REG_ACC = this.REG_ACC | temp;\r\n        this.F_SIGN = (this.REG_ACC >> 7) & 1;\r\n        this.F_ZERO = this.REG_ACC;\r\n        if (addrMode !== 11) cycleCount += cycleAdd; // PostIdxInd = 11\r\n        break;\r\n      }\r\n      case 67: {\r\n        // *******\r\n        // * SRE *\r\n        // *******\r\n\r\n        // Shift one bit right\r\n        temp = this.load(addr) & 0xff;\r\n        this.F_CARRY = temp & 1;\r\n        temp >>= 1;\r\n        this.write(addr, temp);\r\n\r\n        // Then XOR with the accumulator.\r\n        this.REG_ACC = this.REG_ACC ^ temp;\r\n        this.F_SIGN = (this.REG_ACC >> 7) & 1;\r\n        this.F_ZERO = this.REG_ACC;\r\n        if (addrMode !== 11) cycleCount += cycleAdd; // PostIdxInd = 11\r\n        break;\r\n      }\r\n      case 68: {\r\n        // *******\r\n        // * SKB *\r\n        // *******\r\n\r\n        // Do nothing\r\n        break;\r\n      }\r\n      case 69: {\r\n        // *******\r\n        // * IGN *\r\n        // *******\r\n\r\n        // Do nothing but load.\r\n        // TODO: Properly implement the double-reads.\r\n        this.load(addr);\r\n        if (addrMode !== 11) cycleCount += cycleAdd; // PostIdxInd = 11\r\n        break;\r\n      }\r\n\r\n      default: {\r\n        // *******\r\n        // * ??? *\r\n        // *******\r\n\r\n        this.nes.stop();\r\n        this.nes.crashMessage =\r\n          \"Game crashed, invalid opcode at address $\" + opaddr.toString(16);\r\n        break;\r\n      }\r\n    } // end of switch\r\n\r\n    return cycleCount;\r\n  },\r\n\r\n  load: function (addr) {\r\n    if (addr < 0x2000) {\r\n      return this.mem[addr & 0x7ff];\r\n    } else {\r\n      return this.nes.mmap.load(addr);\r\n    }\r\n  },\r\n\r\n  load16bit: function (addr) {\r\n    if (addr < 0x1fff) {\r\n      return this.mem[addr & 0x7ff] | (this.mem[(addr + 1) & 0x7ff] << 8);\r\n    } else {\r\n      return this.nes.mmap.load(addr) | (this.nes.mmap.load(addr + 1) << 8);\r\n    }\r\n  },\r\n\r\n  write: function (addr, val) {\r\n    if (addr < 0x2000) {\r\n      this.mem[addr & 0x7ff] = val;\r\n    } else {\r\n      this.nes.mmap.write(addr, val);\r\n    }\r\n  },\r\n\r\n  requestIrq: function (type) {\r\n    if (this.irqRequested) {\r\n      if (type === this.IRQ_NORMAL) {\r\n        return;\r\n      }\r\n      // console.log(\"too fast irqs. type=\"+type);\r\n    }\r\n    this.irqRequested = true;\r\n    this.irqType = type;\r\n  },\r\n\r\n  push: function (value) {\r\n    this.nes.mmap.write(this.REG_SP, value);\r\n    this.REG_SP--;\r\n    this.REG_SP = 0x0100 | (this.REG_SP & 0xff);\r\n  },\r\n\r\n  stackWrap: function () {\r\n    this.REG_SP = 0x0100 | (this.REG_SP & 0xff);\r\n  },\r\n\r\n  pull: function () {\r\n    this.REG_SP++;\r\n    this.REG_SP = 0x0100 | (this.REG_SP & 0xff);\r\n    return this.nes.mmap.load(this.REG_SP);\r\n  },\r\n\r\n  pageCrossed: function (addr1, addr2) {\r\n    return (addr1 & 0xff00) !== (addr2 & 0xff00);\r\n  },\r\n\r\n  haltCycles: function (cycles) {\r\n    this.cyclesToHalt += cycles;\r\n  },\r\n\r\n  doNonMaskableInterrupt: function (status) {\r\n    if ((this.nes.mmap.load(0x2000) & 128) !== 0) {\r\n      // Check whether VBlank Interrupts are enabled\r\n\r\n      this.REG_PC_NEW++;\r\n      this.push((this.REG_PC_NEW >> 8) & 0xff);\r\n      this.push(this.REG_PC_NEW & 0xff);\r\n      //this.F_INTERRUPT_NEW = 1;\r\n      this.push(status);\r\n\r\n      this.REG_PC_NEW =\r\n        this.nes.mmap.load(0xfffa) | (this.nes.mmap.load(0xfffb) << 8);\r\n      this.REG_PC_NEW--;\r\n    }\r\n  },\r\n\r\n  doResetInterrupt: function () {\r\n    this.REG_PC_NEW =\r\n      this.nes.mmap.load(0xfffc) | (this.nes.mmap.load(0xfffd) << 8);\r\n    this.REG_PC_NEW--;\r\n  },\r\n\r\n  doIrq: function (status) {\r\n    this.REG_PC_NEW++;\r\n    this.push((this.REG_PC_NEW >> 8) & 0xff);\r\n    this.push(this.REG_PC_NEW & 0xff);\r\n    this.push(status);\r\n    this.F_INTERRUPT_NEW = 1;\r\n    this.F_BRK_NEW = 0;\r\n\r\n    this.REG_PC_NEW =\r\n      this.nes.mmap.load(0xfffe) | (this.nes.mmap.load(0xffff) << 8);\r\n    this.REG_PC_NEW--;\r\n  },\r\n\r\n  getStatus: function () {\r\n    return (\r\n      this.F_CARRY |\r\n      (this.F_ZERO << 1) |\r\n      (this.F_INTERRUPT << 2) |\r\n      (this.F_DECIMAL << 3) |\r\n      (this.F_BRK << 4) |\r\n      (this.F_NOTUSED << 5) |\r\n      (this.F_OVERFLOW << 6) |\r\n      (this.F_SIGN << 7)\r\n    );\r\n  },\r\n\r\n  setStatus: function (st) {\r\n    this.F_CARRY = st & 1;\r\n    this.F_ZERO = (st >> 1) & 1;\r\n    this.F_INTERRUPT = (st >> 2) & 1;\r\n    this.F_DECIMAL = (st >> 3) & 1;\r\n    this.F_BRK = (st >> 4) & 1;\r\n    this.F_NOTUSED = (st >> 5) & 1;\r\n    this.F_OVERFLOW = (st >> 6) & 1;\r\n    this.F_SIGN = (st >> 7) & 1;\r\n  },\r\n\r\n  JSON_PROPERTIES: [\r\n    \"mem\",\r\n    \"cyclesToHalt\",\r\n    \"irqRequested\",\r\n    \"irqType\",\r\n    // Registers\r\n    \"REG_ACC\",\r\n    \"REG_X\",\r\n    \"REG_Y\",\r\n    \"REG_SP\",\r\n    \"REG_PC\",\r\n    \"REG_PC_NEW\",\r\n    \"REG_STATUS\",\r\n    // Status\r\n    \"F_CARRY\",\r\n    \"F_DECIMAL\",\r\n    \"F_INTERRUPT\",\r\n    \"F_INTERRUPT_NEW\",\r\n    \"F_OVERFLOW\",\r\n    \"F_SIGN\",\r\n    \"F_ZERO\",\r\n    \"F_NOTUSED\",\r\n    \"F_NOTUSED_NEW\",\r\n    \"F_BRK\",\r\n    \"F_BRK_NEW\",\r\n  ],\r\n\r\n  toJSON: function () {\r\n    return utils.toJSON(this);\r\n  },\r\n\r\n  fromJSON: function (s) {\r\n    utils.fromJSON(this, s);\r\n  },\r\n};\r\n\r\n// Generates and provides an array of details about instructions\r\nvar OpData = function () {\r\n  this.opdata = new Array(256);\r\n\r\n  // Set all to invalid instruction (to detect crashes):\r\n  for (var i = 0; i < 256; i++) this.opdata[i] = 0xff;\r\n\r\n  // Now fill in all valid opcodes:\r\n\r\n  // ADC:\r\n  this.setOp(this.INS_ADC, 0x69, this.ADDR_IMM, 2, 2);\r\n  this.setOp(this.INS_ADC, 0x65, this.ADDR_ZP, 2, 3);\r\n  this.setOp(this.INS_ADC, 0x75, this.ADDR_ZPX, 2, 4);\r\n  this.setOp(this.INS_ADC, 0x6d, this.ADDR_ABS, 3, 4);\r\n  this.setOp(this.INS_ADC, 0x7d, this.ADDR_ABSX, 3, 4);\r\n  this.setOp(this.INS_ADC, 0x79, this.ADDR_ABSY, 3, 4);\r\n  this.setOp(this.INS_ADC, 0x61, this.ADDR_PREIDXIND, 2, 6);\r\n  this.setOp(this.INS_ADC, 0x71, this.ADDR_POSTIDXIND, 2, 5);\r\n\r\n  // AND:\r\n  this.setOp(this.INS_AND, 0x29, this.ADDR_IMM, 2, 2);\r\n  this.setOp(this.INS_AND, 0x25, this.ADDR_ZP, 2, 3);\r\n  this.setOp(this.INS_AND, 0x35, this.ADDR_ZPX, 2, 4);\r\n  this.setOp(this.INS_AND, 0x2d, this.ADDR_ABS, 3, 4);\r\n  this.setOp(this.INS_AND, 0x3d, this.ADDR_ABSX, 3, 4);\r\n  this.setOp(this.INS_AND, 0x39, this.ADDR_ABSY, 3, 4);\r\n  this.setOp(this.INS_AND, 0x21, this.ADDR_PREIDXIND, 2, 6);\r\n  this.setOp(this.INS_AND, 0x31, this.ADDR_POSTIDXIND, 2, 5);\r\n\r\n  // ASL:\r\n  this.setOp(this.INS_ASL, 0x0a, this.ADDR_ACC, 1, 2);\r\n  this.setOp(this.INS_ASL, 0x06, this.ADDR_ZP, 2, 5);\r\n  this.setOp(this.INS_ASL, 0x16, this.ADDR_ZPX, 2, 6);\r\n  this.setOp(this.INS_ASL, 0x0e, this.ADDR_ABS, 3, 6);\r\n  this.setOp(this.INS_ASL, 0x1e, this.ADDR_ABSX, 3, 7);\r\n\r\n  // BCC:\r\n  this.setOp(this.INS_BCC, 0x90, this.ADDR_REL, 2, 2);\r\n\r\n  // BCS:\r\n  this.setOp(this.INS_BCS, 0xb0, this.ADDR_REL, 2, 2);\r\n\r\n  // BEQ:\r\n  this.setOp(this.INS_BEQ, 0xf0, this.ADDR_REL, 2, 2);\r\n\r\n  // BIT:\r\n  this.setOp(this.INS_BIT, 0x24, this.ADDR_ZP, 2, 3);\r\n  this.setOp(this.INS_BIT, 0x2c, this.ADDR_ABS, 3, 4);\r\n\r\n  // BMI:\r\n  this.setOp(this.INS_BMI, 0x30, this.ADDR_REL, 2, 2);\r\n\r\n  // BNE:\r\n  this.setOp(this.INS_BNE, 0xd0, this.ADDR_REL, 2, 2);\r\n\r\n  // BPL:\r\n  this.setOp(this.INS_BPL, 0x10, this.ADDR_REL, 2, 2);\r\n\r\n  // BRK:\r\n  this.setOp(this.INS_BRK, 0x00, this.ADDR_IMP, 1, 7);\r\n\r\n  // BVC:\r\n  this.setOp(this.INS_BVC, 0x50, this.ADDR_REL, 2, 2);\r\n\r\n  // BVS:\r\n  this.setOp(this.INS_BVS, 0x70, this.ADDR_REL, 2, 2);\r\n\r\n  // CLC:\r\n  this.setOp(this.INS_CLC, 0x18, this.ADDR_IMP, 1, 2);\r\n\r\n  // CLD:\r\n  this.setOp(this.INS_CLD, 0xd8, this.ADDR_IMP, 1, 2);\r\n\r\n  // CLI:\r\n  this.setOp(this.INS_CLI, 0x58, this.ADDR_IMP, 1, 2);\r\n\r\n  // CLV:\r\n  this.setOp(this.INS_CLV, 0xb8, this.ADDR_IMP, 1, 2);\r\n\r\n  // CMP:\r\n  this.setOp(this.INS_CMP, 0xc9, this.ADDR_IMM, 2, 2);\r\n  this.setOp(this.INS_CMP, 0xc5, this.ADDR_ZP, 2, 3);\r\n  this.setOp(this.INS_CMP, 0xd5, this.ADDR_ZPX, 2, 4);\r\n  this.setOp(this.INS_CMP, 0xcd, this.ADDR_ABS, 3, 4);\r\n  this.setOp(this.INS_CMP, 0xdd, this.ADDR_ABSX, 3, 4);\r\n  this.setOp(this.INS_CMP, 0xd9, this.ADDR_ABSY, 3, 4);\r\n  this.setOp(this.INS_CMP, 0xc1, this.ADDR_PREIDXIND, 2, 6);\r\n  this.setOp(this.INS_CMP, 0xd1, this.ADDR_POSTIDXIND, 2, 5);\r\n\r\n  // CPX:\r\n  this.setOp(this.INS_CPX, 0xe0, this.ADDR_IMM, 2, 2);\r\n  this.setOp(this.INS_CPX, 0xe4, this.ADDR_ZP, 2, 3);\r\n  this.setOp(this.INS_CPX, 0xec, this.ADDR_ABS, 3, 4);\r\n\r\n  // CPY:\r\n  this.setOp(this.INS_CPY, 0xc0, this.ADDR_IMM, 2, 2);\r\n  this.setOp(this.INS_CPY, 0xc4, this.ADDR_ZP, 2, 3);\r\n  this.setOp(this.INS_CPY, 0xcc, this.ADDR_ABS, 3, 4);\r\n\r\n  // DEC:\r\n  this.setOp(this.INS_DEC, 0xc6, this.ADDR_ZP, 2, 5);\r\n  this.setOp(this.INS_DEC, 0xd6, this.ADDR_ZPX, 2, 6);\r\n  this.setOp(this.INS_DEC, 0xce, this.ADDR_ABS, 3, 6);\r\n  this.setOp(this.INS_DEC, 0xde, this.ADDR_ABSX, 3, 7);\r\n\r\n  // DEX:\r\n  this.setOp(this.INS_DEX, 0xca, this.ADDR_IMP, 1, 2);\r\n\r\n  // DEY:\r\n  this.setOp(this.INS_DEY, 0x88, this.ADDR_IMP, 1, 2);\r\n\r\n  // EOR:\r\n  this.setOp(this.INS_EOR, 0x49, this.ADDR_IMM, 2, 2);\r\n  this.setOp(this.INS_EOR, 0x45, this.ADDR_ZP, 2, 3);\r\n  this.setOp(this.INS_EOR, 0x55, this.ADDR_ZPX, 2, 4);\r\n  this.setOp(this.INS_EOR, 0x4d, this.ADDR_ABS, 3, 4);\r\n  this.setOp(this.INS_EOR, 0x5d, this.ADDR_ABSX, 3, 4);\r\n  this.setOp(this.INS_EOR, 0x59, this.ADDR_ABSY, 3, 4);\r\n  this.setOp(this.INS_EOR, 0x41, this.ADDR_PREIDXIND, 2, 6);\r\n  this.setOp(this.INS_EOR, 0x51, this.ADDR_POSTIDXIND, 2, 5);\r\n\r\n  // INC:\r\n  this.setOp(this.INS_INC, 0xe6, this.ADDR_ZP, 2, 5);\r\n  this.setOp(this.INS_INC, 0xf6, this.ADDR_ZPX, 2, 6);\r\n  this.setOp(this.INS_INC, 0xee, this.ADDR_ABS, 3, 6);\r\n  this.setOp(this.INS_INC, 0xfe, this.ADDR_ABSX, 3, 7);\r\n\r\n  // INX:\r\n  this.setOp(this.INS_INX, 0xe8, this.ADDR_IMP, 1, 2);\r\n\r\n  // INY:\r\n  this.setOp(this.INS_INY, 0xc8, this.ADDR_IMP, 1, 2);\r\n\r\n  // JMP:\r\n  this.setOp(this.INS_JMP, 0x4c, this.ADDR_ABS, 3, 3);\r\n  this.setOp(this.INS_JMP, 0x6c, this.ADDR_INDABS, 3, 5);\r\n\r\n  // JSR:\r\n  this.setOp(this.INS_JSR, 0x20, this.ADDR_ABS, 3, 6);\r\n\r\n  // LDA:\r\n  this.setOp(this.INS_LDA, 0xa9, this.ADDR_IMM, 2, 2);\r\n  this.setOp(this.INS_LDA, 0xa5, this.ADDR_ZP, 2, 3);\r\n  this.setOp(this.INS_LDA, 0xb5, this.ADDR_ZPX, 2, 4);\r\n  this.setOp(this.INS_LDA, 0xad, this.ADDR_ABS, 3, 4);\r\n  this.setOp(this.INS_LDA, 0xbd, this.ADDR_ABSX, 3, 4);\r\n  this.setOp(this.INS_LDA, 0xb9, this.ADDR_ABSY, 3, 4);\r\n  this.setOp(this.INS_LDA, 0xa1, this.ADDR_PREIDXIND, 2, 6);\r\n  this.setOp(this.INS_LDA, 0xb1, this.ADDR_POSTIDXIND, 2, 5);\r\n\r\n  // LDX:\r\n  this.setOp(this.INS_LDX, 0xa2, this.ADDR_IMM, 2, 2);\r\n  this.setOp(this.INS_LDX, 0xa6, this.ADDR_ZP, 2, 3);\r\n  this.setOp(this.INS_LDX, 0xb6, this.ADDR_ZPY, 2, 4);\r\n  this.setOp(this.INS_LDX, 0xae, this.ADDR_ABS, 3, 4);\r\n  this.setOp(this.INS_LDX, 0xbe, this.ADDR_ABSY, 3, 4);\r\n\r\n  // LDY:\r\n  this.setOp(this.INS_LDY, 0xa0, this.ADDR_IMM, 2, 2);\r\n  this.setOp(this.INS_LDY, 0xa4, this.ADDR_ZP, 2, 3);\r\n  this.setOp(this.INS_LDY, 0xb4, this.ADDR_ZPX, 2, 4);\r\n  this.setOp(this.INS_LDY, 0xac, this.ADDR_ABS, 3, 4);\r\n  this.setOp(this.INS_LDY, 0xbc, this.ADDR_ABSX, 3, 4);\r\n\r\n  // LSR:\r\n  this.setOp(this.INS_LSR, 0x4a, this.ADDR_ACC, 1, 2);\r\n  this.setOp(this.INS_LSR, 0x46, this.ADDR_ZP, 2, 5);\r\n  this.setOp(this.INS_LSR, 0x56, this.ADDR_ZPX, 2, 6);\r\n  this.setOp(this.INS_LSR, 0x4e, this.ADDR_ABS, 3, 6);\r\n  this.setOp(this.INS_LSR, 0x5e, this.ADDR_ABSX, 3, 7);\r\n\r\n  // NOP:\r\n  this.setOp(this.INS_NOP, 0x1a, this.ADDR_IMP, 1, 2);\r\n  this.setOp(this.INS_NOP, 0x3a, this.ADDR_IMP, 1, 2);\r\n  this.setOp(this.INS_NOP, 0x5a, this.ADDR_IMP, 1, 2);\r\n  this.setOp(this.INS_NOP, 0x7a, this.ADDR_IMP, 1, 2);\r\n  this.setOp(this.INS_NOP, 0xda, this.ADDR_IMP, 1, 2);\r\n  this.setOp(this.INS_NOP, 0xea, this.ADDR_IMP, 1, 2);\r\n  this.setOp(this.INS_NOP, 0xfa, this.ADDR_IMP, 1, 2);\r\n\r\n  // ORA:\r\n  this.setOp(this.INS_ORA, 0x09, this.ADDR_IMM, 2, 2);\r\n  this.setOp(this.INS_ORA, 0x05, this.ADDR_ZP, 2, 3);\r\n  this.setOp(this.INS_ORA, 0x15, this.ADDR_ZPX, 2, 4);\r\n  this.setOp(this.INS_ORA, 0x0d, this.ADDR_ABS, 3, 4);\r\n  this.setOp(this.INS_ORA, 0x1d, this.ADDR_ABSX, 3, 4);\r\n  this.setOp(this.INS_ORA, 0x19, this.ADDR_ABSY, 3, 4);\r\n  this.setOp(this.INS_ORA, 0x01, this.ADDR_PREIDXIND, 2, 6);\r\n  this.setOp(this.INS_ORA, 0x11, this.ADDR_POSTIDXIND, 2, 5);\r\n\r\n  // PHA:\r\n  this.setOp(this.INS_PHA, 0x48, this.ADDR_IMP, 1, 3);\r\n\r\n  // PHP:\r\n  this.setOp(this.INS_PHP, 0x08, this.ADDR_IMP, 1, 3);\r\n\r\n  // PLA:\r\n  this.setOp(this.INS_PLA, 0x68, this.ADDR_IMP, 1, 4);\r\n\r\n  // PLP:\r\n  this.setOp(this.INS_PLP, 0x28, this.ADDR_IMP, 1, 4);\r\n\r\n  // ROL:\r\n  this.setOp(this.INS_ROL, 0x2a, this.ADDR_ACC, 1, 2);\r\n  this.setOp(this.INS_ROL, 0x26, this.ADDR_ZP, 2, 5);\r\n  this.setOp(this.INS_ROL, 0x36, this.ADDR_ZPX, 2, 6);\r\n  this.setOp(this.INS_ROL, 0x2e, this.ADDR_ABS, 3, 6);\r\n  this.setOp(this.INS_ROL, 0x3e, this.ADDR_ABSX, 3, 7);\r\n\r\n  // ROR:\r\n  this.setOp(this.INS_ROR, 0x6a, this.ADDR_ACC, 1, 2);\r\n  this.setOp(this.INS_ROR, 0x66, this.ADDR_ZP, 2, 5);\r\n  this.setOp(this.INS_ROR, 0x76, this.ADDR_ZPX, 2, 6);\r\n  this.setOp(this.INS_ROR, 0x6e, this.ADDR_ABS, 3, 6);\r\n  this.setOp(this.INS_ROR, 0x7e, this.ADDR_ABSX, 3, 7);\r\n\r\n  // RTI:\r\n  this.setOp(this.INS_RTI, 0x40, this.ADDR_IMP, 1, 6);\r\n\r\n  // RTS:\r\n  this.setOp(this.INS_RTS, 0x60, this.ADDR_IMP, 1, 6);\r\n\r\n  // SBC:\r\n  this.setOp(this.INS_SBC, 0xe9, this.ADDR_IMM, 2, 2);\r\n  this.setOp(this.INS_SBC, 0xe5, this.ADDR_ZP, 2, 3);\r\n  this.setOp(this.INS_SBC, 0xf5, this.ADDR_ZPX, 2, 4);\r\n  this.setOp(this.INS_SBC, 0xed, this.ADDR_ABS, 3, 4);\r\n  this.setOp(this.INS_SBC, 0xfd, this.ADDR_ABSX, 3, 4);\r\n  this.setOp(this.INS_SBC, 0xf9, this.ADDR_ABSY, 3, 4);\r\n  this.setOp(this.INS_SBC, 0xe1, this.ADDR_PREIDXIND, 2, 6);\r\n  this.setOp(this.INS_SBC, 0xf1, this.ADDR_POSTIDXIND, 2, 5);\r\n\r\n  // SEC:\r\n  this.setOp(this.INS_SEC, 0x38, this.ADDR_IMP, 1, 2);\r\n\r\n  // SED:\r\n  this.setOp(this.INS_SED, 0xf8, this.ADDR_IMP, 1, 2);\r\n\r\n  // SEI:\r\n  this.setOp(this.INS_SEI, 0x78, this.ADDR_IMP, 1, 2);\r\n\r\n  // STA:\r\n  this.setOp(this.INS_STA, 0x85, this.ADDR_ZP, 2, 3);\r\n  this.setOp(this.INS_STA, 0x95, this.ADDR_ZPX, 2, 4);\r\n  this.setOp(this.INS_STA, 0x8d, this.ADDR_ABS, 3, 4);\r\n  this.setOp(this.INS_STA, 0x9d, this.ADDR_ABSX, 3, 5);\r\n  this.setOp(this.INS_STA, 0x99, this.ADDR_ABSY, 3, 5);\r\n  this.setOp(this.INS_STA, 0x81, this.ADDR_PREIDXIND, 2, 6);\r\n  this.setOp(this.INS_STA, 0x91, this.ADDR_POSTIDXIND, 2, 6);\r\n\r\n  // STX:\r\n  this.setOp(this.INS_STX, 0x86, this.ADDR_ZP, 2, 3);\r\n  this.setOp(this.INS_STX, 0x96, this.ADDR_ZPY, 2, 4);\r\n  this.setOp(this.INS_STX, 0x8e, this.ADDR_ABS, 3, 4);\r\n\r\n  // STY:\r\n  this.setOp(this.INS_STY, 0x84, this.ADDR_ZP, 2, 3);\r\n  this.setOp(this.INS_STY, 0x94, this.ADDR_ZPX, 2, 4);\r\n  this.setOp(this.INS_STY, 0x8c, this.ADDR_ABS, 3, 4);\r\n\r\n  // TAX:\r\n  this.setOp(this.INS_TAX, 0xaa, this.ADDR_IMP, 1, 2);\r\n\r\n  // TAY:\r\n  this.setOp(this.INS_TAY, 0xa8, this.ADDR_IMP, 1, 2);\r\n\r\n  // TSX:\r\n  this.setOp(this.INS_TSX, 0xba, this.ADDR_IMP, 1, 2);\r\n\r\n  // TXA:\r\n  this.setOp(this.INS_TXA, 0x8a, this.ADDR_IMP, 1, 2);\r\n\r\n  // TXS:\r\n  this.setOp(this.INS_TXS, 0x9a, this.ADDR_IMP, 1, 2);\r\n\r\n  // TYA:\r\n  this.setOp(this.INS_TYA, 0x98, this.ADDR_IMP, 1, 2);\r\n\r\n  // ALR:\r\n  this.setOp(this.INS_ALR, 0x4b, this.ADDR_IMM, 2, 2);\r\n\r\n  // ANC:\r\n  this.setOp(this.INS_ANC, 0x0b, this.ADDR_IMM, 2, 2);\r\n  this.setOp(this.INS_ANC, 0x2b, this.ADDR_IMM, 2, 2);\r\n\r\n  // ARR:\r\n  this.setOp(this.INS_ARR, 0x6b, this.ADDR_IMM, 2, 2);\r\n\r\n  // AXS:\r\n  this.setOp(this.INS_AXS, 0xcb, this.ADDR_IMM, 2, 2);\r\n\r\n  // LAX:\r\n  this.setOp(this.INS_LAX, 0xa3, this.ADDR_PREIDXIND, 2, 6);\r\n  this.setOp(this.INS_LAX, 0xa7, this.ADDR_ZP, 2, 3);\r\n  this.setOp(this.INS_LAX, 0xaf, this.ADDR_ABS, 3, 4);\r\n  this.setOp(this.INS_LAX, 0xb3, this.ADDR_POSTIDXIND, 2, 5);\r\n  this.setOp(this.INS_LAX, 0xb7, this.ADDR_ZPY, 2, 4);\r\n  this.setOp(this.INS_LAX, 0xbf, this.ADDR_ABSY, 3, 4);\r\n\r\n  // SAX:\r\n  this.setOp(this.INS_SAX, 0x83, this.ADDR_PREIDXIND, 2, 6);\r\n  this.setOp(this.INS_SAX, 0x87, this.ADDR_ZP, 2, 3);\r\n  this.setOp(this.INS_SAX, 0x8f, this.ADDR_ABS, 3, 4);\r\n  this.setOp(this.INS_SAX, 0x97, this.ADDR_ZPY, 2, 4);\r\n\r\n  // DCP:\r\n  this.setOp(this.INS_DCP, 0xc3, this.ADDR_PREIDXIND, 2, 8);\r\n  this.setOp(this.INS_DCP, 0xc7, this.ADDR_ZP, 2, 5);\r\n  this.setOp(this.INS_DCP, 0xcf, this.ADDR_ABS, 3, 6);\r\n  this.setOp(this.INS_DCP, 0xd3, this.ADDR_POSTIDXIND, 2, 8);\r\n  this.setOp(this.INS_DCP, 0xd7, this.ADDR_ZPX, 2, 6);\r\n  this.setOp(this.INS_DCP, 0xdb, this.ADDR_ABSY, 3, 7);\r\n  this.setOp(this.INS_DCP, 0xdf, this.ADDR_ABSX, 3, 7);\r\n\r\n  // ISC:\r\n  this.setOp(this.INS_ISC, 0xe3, this.ADDR_PREIDXIND, 2, 8);\r\n  this.setOp(this.INS_ISC, 0xe7, this.ADDR_ZP, 2, 5);\r\n  this.setOp(this.INS_ISC, 0xef, this.ADDR_ABS, 3, 6);\r\n  this.setOp(this.INS_ISC, 0xf3, this.ADDR_POSTIDXIND, 2, 8);\r\n  this.setOp(this.INS_ISC, 0xf7, this.ADDR_ZPX, 2, 6);\r\n  this.setOp(this.INS_ISC, 0xfb, this.ADDR_ABSY, 3, 7);\r\n  this.setOp(this.INS_ISC, 0xff, this.ADDR_ABSX, 3, 7);\r\n\r\n  // RLA:\r\n  this.setOp(this.INS_RLA, 0x23, this.ADDR_PREIDXIND, 2, 8);\r\n  this.setOp(this.INS_RLA, 0x27, this.ADDR_ZP, 2, 5);\r\n  this.setOp(this.INS_RLA, 0x2f, this.ADDR_ABS, 3, 6);\r\n  this.setOp(this.INS_RLA, 0x33, this.ADDR_POSTIDXIND, 2, 8);\r\n  this.setOp(this.INS_RLA, 0x37, this.ADDR_ZPX, 2, 6);\r\n  this.setOp(this.INS_RLA, 0x3b, this.ADDR_ABSY, 3, 7);\r\n  this.setOp(this.INS_RLA, 0x3f, this.ADDR_ABSX, 3, 7);\r\n\r\n  // RRA:\r\n  this.setOp(this.INS_RRA, 0x63, this.ADDR_PREIDXIND, 2, 8);\r\n  this.setOp(this.INS_RRA, 0x67, this.ADDR_ZP, 2, 5);\r\n  this.setOp(this.INS_RRA, 0x6f, this.ADDR_ABS, 3, 6);\r\n  this.setOp(this.INS_RRA, 0x73, this.ADDR_POSTIDXIND, 2, 8);\r\n  this.setOp(this.INS_RRA, 0x77, this.ADDR_ZPX, 2, 6);\r\n  this.setOp(this.INS_RRA, 0x7b, this.ADDR_ABSY, 3, 7);\r\n  this.setOp(this.INS_RRA, 0x7f, this.ADDR_ABSX, 3, 7);\r\n\r\n  // SLO:\r\n  this.setOp(this.INS_SLO, 0x03, this.ADDR_PREIDXIND, 2, 8);\r\n  this.setOp(this.INS_SLO, 0x07, this.ADDR_ZP, 2, 5);\r\n  this.setOp(this.INS_SLO, 0x0f, this.ADDR_ABS, 3, 6);\r\n  this.setOp(this.INS_SLO, 0x13, this.ADDR_POSTIDXIND, 2, 8);\r\n  this.setOp(this.INS_SLO, 0x17, this.ADDR_ZPX, 2, 6);\r\n  this.setOp(this.INS_SLO, 0x1b, this.ADDR_ABSY, 3, 7);\r\n  this.setOp(this.INS_SLO, 0x1f, this.ADDR_ABSX, 3, 7);\r\n\r\n  // SRE:\r\n  this.setOp(this.INS_SRE, 0x43, this.ADDR_PREIDXIND, 2, 8);\r\n  this.setOp(this.INS_SRE, 0x47, this.ADDR_ZP, 2, 5);\r\n  this.setOp(this.INS_SRE, 0x4f, this.ADDR_ABS, 3, 6);\r\n  this.setOp(this.INS_SRE, 0x53, this.ADDR_POSTIDXIND, 2, 8);\r\n  this.setOp(this.INS_SRE, 0x57, this.ADDR_ZPX, 2, 6);\r\n  this.setOp(this.INS_SRE, 0x5b, this.ADDR_ABSY, 3, 7);\r\n  this.setOp(this.INS_SRE, 0x5f, this.ADDR_ABSX, 3, 7);\r\n\r\n  // SKB:\r\n  this.setOp(this.INS_SKB, 0x80, this.ADDR_IMM, 2, 2);\r\n  this.setOp(this.INS_SKB, 0x82, this.ADDR_IMM, 2, 2);\r\n  this.setOp(this.INS_SKB, 0x89, this.ADDR_IMM, 2, 2);\r\n  this.setOp(this.INS_SKB, 0xc2, this.ADDR_IMM, 2, 2);\r\n  this.setOp(this.INS_SKB, 0xe2, this.ADDR_IMM, 2, 2);\r\n\r\n  // SKB:\r\n  this.setOp(this.INS_IGN, 0x0c, this.ADDR_ABS, 3, 4);\r\n  this.setOp(this.INS_IGN, 0x1c, this.ADDR_ABSX, 3, 4);\r\n  this.setOp(this.INS_IGN, 0x3c, this.ADDR_ABSX, 3, 4);\r\n  this.setOp(this.INS_IGN, 0x5c, this.ADDR_ABSX, 3, 4);\r\n  this.setOp(this.INS_IGN, 0x7c, this.ADDR_ABSX, 3, 4);\r\n  this.setOp(this.INS_IGN, 0xdc, this.ADDR_ABSX, 3, 4);\r\n  this.setOp(this.INS_IGN, 0xfc, this.ADDR_ABSX, 3, 4);\r\n  this.setOp(this.INS_IGN, 0x04, this.ADDR_ZP, 2, 3);\r\n  this.setOp(this.INS_IGN, 0x44, this.ADDR_ZP, 2, 3);\r\n  this.setOp(this.INS_IGN, 0x64, this.ADDR_ZP, 2, 3);\r\n  this.setOp(this.INS_IGN, 0x14, this.ADDR_ZPX, 2, 4);\r\n  this.setOp(this.INS_IGN, 0x34, this.ADDR_ZPX, 2, 4);\r\n  this.setOp(this.INS_IGN, 0x54, this.ADDR_ZPX, 2, 4);\r\n  this.setOp(this.INS_IGN, 0x74, this.ADDR_ZPX, 2, 4);\r\n  this.setOp(this.INS_IGN, 0xd4, this.ADDR_ZPX, 2, 4);\r\n  this.setOp(this.INS_IGN, 0xf4, this.ADDR_ZPX, 2, 4);\r\n\r\n  // prettier-ignore\r\n  this.cycTable = new Array(\r\n    /*0x00*/ 7,6,2,8,3,3,5,5,3,2,2,2,4,4,6,6,\r\n    /*0x10*/ 2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7,\r\n    /*0x20*/ 6,6,2,8,3,3,5,5,4,2,2,2,4,4,6,6,\r\n    /*0x30*/ 2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7,\r\n    /*0x40*/ 6,6,2,8,3,3,5,5,3,2,2,2,3,4,6,6,\r\n    /*0x50*/ 2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7,\r\n    /*0x60*/ 6,6,2,8,3,3,5,5,4,2,2,2,5,4,6,6,\r\n    /*0x70*/ 2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7,\r\n    /*0x80*/ 2,6,2,6,3,3,3,3,2,2,2,2,4,4,4,4,\r\n    /*0x90*/ 2,6,2,6,4,4,4,4,2,5,2,5,5,5,5,5,\r\n    /*0xA0*/ 2,6,2,6,3,3,3,3,2,2,2,2,4,4,4,4,\r\n    /*0xB0*/ 2,5,2,5,4,4,4,4,2,4,2,4,4,4,4,4,\r\n    /*0xC0*/ 2,6,2,8,3,3,5,5,2,2,2,2,4,4,6,6,\r\n    /*0xD0*/ 2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7,\r\n    /*0xE0*/ 2,6,3,8,3,3,5,5,2,2,2,2,4,4,6,6,\r\n    /*0xF0*/ 2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7\r\n  );\r\n\r\n  this.instname = new Array(70);\r\n\r\n  // Instruction Names:\r\n  this.instname[0] = \"ADC\";\r\n  this.instname[1] = \"AND\";\r\n  this.instname[2] = \"ASL\";\r\n  this.instname[3] = \"BCC\";\r\n  this.instname[4] = \"BCS\";\r\n  this.instname[5] = \"BEQ\";\r\n  this.instname[6] = \"BIT\";\r\n  this.instname[7] = \"BMI\";\r\n  this.instname[8] = \"BNE\";\r\n  this.instname[9] = \"BPL\";\r\n  this.instname[10] = \"BRK\";\r\n  this.instname[11] = \"BVC\";\r\n  this.instname[12] = \"BVS\";\r\n  this.instname[13] = \"CLC\";\r\n  this.instname[14] = \"CLD\";\r\n  this.instname[15] = \"CLI\";\r\n  this.instname[16] = \"CLV\";\r\n  this.instname[17] = \"CMP\";\r\n  this.instname[18] = \"CPX\";\r\n  this.instname[19] = \"CPY\";\r\n  this.instname[20] = \"DEC\";\r\n  this.instname[21] = \"DEX\";\r\n  this.instname[22] = \"DEY\";\r\n  this.instname[23] = \"EOR\";\r\n  this.instname[24] = \"INC\";\r\n  this.instname[25] = \"INX\";\r\n  this.instname[26] = \"INY\";\r\n  this.instname[27] = \"JMP\";\r\n  this.instname[28] = \"JSR\";\r\n  this.instname[29] = \"LDA\";\r\n  this.instname[30] = \"LDX\";\r\n  this.instname[31] = \"LDY\";\r\n  this.instname[32] = \"LSR\";\r\n  this.instname[33] = \"NOP\";\r\n  this.instname[34] = \"ORA\";\r\n  this.instname[35] = \"PHA\";\r\n  this.instname[36] = \"PHP\";\r\n  this.instname[37] = \"PLA\";\r\n  this.instname[38] = \"PLP\";\r\n  this.instname[39] = \"ROL\";\r\n  this.instname[40] = \"ROR\";\r\n  this.instname[41] = \"RTI\";\r\n  this.instname[42] = \"RTS\";\r\n  this.instname[43] = \"SBC\";\r\n  this.instname[44] = \"SEC\";\r\n  this.instname[45] = \"SED\";\r\n  this.instname[46] = \"SEI\";\r\n  this.instname[47] = \"STA\";\r\n  this.instname[48] = \"STX\";\r\n  this.instname[49] = \"STY\";\r\n  this.instname[50] = \"TAX\";\r\n  this.instname[51] = \"TAY\";\r\n  this.instname[52] = \"TSX\";\r\n  this.instname[53] = \"TXA\";\r\n  this.instname[54] = \"TXS\";\r\n  this.instname[55] = \"TYA\";\r\n  this.instname[56] = \"ALR\";\r\n  this.instname[57] = \"ANC\";\r\n  this.instname[58] = \"ARR\";\r\n  this.instname[59] = \"AXS\";\r\n  this.instname[60] = \"LAX\";\r\n  this.instname[61] = \"SAX\";\r\n  this.instname[62] = \"DCP\";\r\n  this.instname[63] = \"ISC\";\r\n  this.instname[64] = \"RLA\";\r\n  this.instname[65] = \"RRA\";\r\n  this.instname[66] = \"SLO\";\r\n  this.instname[67] = \"SRE\";\r\n  this.instname[68] = \"SKB\";\r\n  this.instname[69] = \"IGN\";\r\n\r\n  this.addrDesc = new Array(\r\n    \"Zero Page           \",\r\n    \"Relative            \",\r\n    \"Implied             \",\r\n    \"Absolute            \",\r\n    \"Accumulator         \",\r\n    \"Immediate           \",\r\n    \"Zero Page,X         \",\r\n    \"Zero Page,Y         \",\r\n    \"Absolute,X          \",\r\n    \"Absolute,Y          \",\r\n    \"Preindexed Indirect \",\r\n    \"Postindexed Indirect\",\r\n    \"Indirect Absolute   \"\r\n  );\r\n};\r\n\r\nOpData.prototype = {\r\n  INS_ADC: 0,\r\n  INS_AND: 1,\r\n  INS_ASL: 2,\r\n\r\n  INS_BCC: 3,\r\n  INS_BCS: 4,\r\n  INS_BEQ: 5,\r\n  INS_BIT: 6,\r\n  INS_BMI: 7,\r\n  INS_BNE: 8,\r\n  INS_BPL: 9,\r\n  INS_BRK: 10,\r\n  INS_BVC: 11,\r\n  INS_BVS: 12,\r\n\r\n  INS_CLC: 13,\r\n  INS_CLD: 14,\r\n  INS_CLI: 15,\r\n  INS_CLV: 16,\r\n  INS_CMP: 17,\r\n  INS_CPX: 18,\r\n  INS_CPY: 19,\r\n\r\n  INS_DEC: 20,\r\n  INS_DEX: 21,\r\n  INS_DEY: 22,\r\n\r\n  INS_EOR: 23,\r\n\r\n  INS_INC: 24,\r\n  INS_INX: 25,\r\n  INS_INY: 26,\r\n\r\n  INS_JMP: 27,\r\n  INS_JSR: 28,\r\n\r\n  INS_LDA: 29,\r\n  INS_LDX: 30,\r\n  INS_LDY: 31,\r\n  INS_LSR: 32,\r\n\r\n  INS_NOP: 33,\r\n\r\n  INS_ORA: 34,\r\n\r\n  INS_PHA: 35,\r\n  INS_PHP: 36,\r\n  INS_PLA: 37,\r\n  INS_PLP: 38,\r\n\r\n  INS_ROL: 39,\r\n  INS_ROR: 40,\r\n  INS_RTI: 41,\r\n  INS_RTS: 42,\r\n\r\n  INS_SBC: 43,\r\n  INS_SEC: 44,\r\n  INS_SED: 45,\r\n  INS_SEI: 46,\r\n  INS_STA: 47,\r\n  INS_STX: 48,\r\n  INS_STY: 49,\r\n\r\n  INS_TAX: 50,\r\n  INS_TAY: 51,\r\n  INS_TSX: 52,\r\n  INS_TXA: 53,\r\n  INS_TXS: 54,\r\n  INS_TYA: 55,\r\n\r\n  INS_ALR: 56,\r\n  INS_ANC: 57,\r\n  INS_ARR: 58,\r\n  INS_AXS: 59,\r\n  INS_LAX: 60,\r\n  INS_SAX: 61,\r\n  INS_DCP: 62,\r\n  INS_ISC: 63,\r\n  INS_RLA: 64,\r\n  INS_RRA: 65,\r\n  INS_SLO: 66,\r\n  INS_SRE: 67,\r\n  INS_SKB: 68,\r\n  INS_IGN: 69,\r\n\r\n  INS_DUMMY: 70, // dummy instruction used for 'halting' the processor some cycles\r\n\r\n  // -------------------------------- //\r\n\r\n  // Addressing modes:\r\n  ADDR_ZP: 0,\r\n  ADDR_REL: 1,\r\n  ADDR_IMP: 2,\r\n  ADDR_ABS: 3,\r\n  ADDR_ACC: 4,\r\n  ADDR_IMM: 5,\r\n  ADDR_ZPX: 6,\r\n  ADDR_ZPY: 7,\r\n  ADDR_ABSX: 8,\r\n  ADDR_ABSY: 9,\r\n  ADDR_PREIDXIND: 10,\r\n  ADDR_POSTIDXIND: 11,\r\n  ADDR_INDABS: 12,\r\n\r\n  setOp: function (inst, op, addr, size, cycles) {\r\n    this.opdata[op] =\r\n      (inst & 0xff) |\r\n      ((addr & 0xff) << 8) |\r\n      ((size & 0xff) << 16) |\r\n      ((cycles & 0xff) << 24);\r\n  },\r\n};\r\n\r\nexport {CPU};\r\n","var Tile = function () {\r\n  // Tile data:\r\n  this.pix = new Array(64);\r\n\r\n  this.fbIndex = null;\r\n  this.tIndex = null;\r\n  this.x = null;\r\n  this.y = null;\r\n  this.w = null;\r\n  this.h = null;\r\n  this.incX = null;\r\n  this.incY = null;\r\n  this.palIndex = null;\r\n  this.tpri = null;\r\n  this.c = null;\r\n  this.initialized = false;\r\n  this.opaque = new Array(8);\r\n};\r\n\r\nTile.prototype = {\r\n  setBuffer: function (scanline) {\r\n    for (this.y = 0; this.y < 8; this.y++) {\r\n      this.setScanline(this.y, scanline[this.y], scanline[this.y + 8]);\r\n    }\r\n  },\r\n\r\n  setScanline: function (sline, b1, b2) {\r\n    this.initialized = true;\r\n    this.tIndex = sline << 3;\r\n    for (this.x = 0; this.x < 8; this.x++) {\r\n      this.pix[this.tIndex + this.x] =\r\n        ((b1 >> (7 - this.x)) & 1) + (((b2 >> (7 - this.x)) & 1) << 1);\r\n      if (this.pix[this.tIndex + this.x] === 0) {\r\n        this.opaque[sline] = false;\r\n      }\r\n    }\r\n  },\r\n\r\n  render: function (\r\n    buffer,\r\n    srcx1,\r\n    srcy1,\r\n    srcx2,\r\n    srcy2,\r\n    dx,\r\n    dy,\r\n    palAdd,\r\n    palette,\r\n    flipHorizontal,\r\n    flipVertical,\r\n    pri,\r\n    priTable\r\n  ) {\r\n    if (dx < -7 || dx >= 256 || dy < -7 || dy >= 240) {\r\n      return;\r\n    }\r\n\r\n    this.w = srcx2 - srcx1;\r\n    this.h = srcy2 - srcy1;\r\n\r\n    if (dx < 0) {\r\n      srcx1 -= dx;\r\n    }\r\n    if (dx + srcx2 >= 256) {\r\n      srcx2 = 256 - dx;\r\n    }\r\n\r\n    if (dy < 0) {\r\n      srcy1 -= dy;\r\n    }\r\n    if (dy + srcy2 >= 240) {\r\n      srcy2 = 240 - dy;\r\n    }\r\n\r\n    if (!flipHorizontal && !flipVertical) {\r\n      this.fbIndex = (dy << 8) + dx;\r\n      this.tIndex = 0;\r\n      for (this.y = 0; this.y < 8; this.y++) {\r\n        for (this.x = 0; this.x < 8; this.x++) {\r\n          if (\r\n            this.x >= srcx1 &&\r\n            this.x < srcx2 &&\r\n            this.y >= srcy1 &&\r\n            this.y < srcy2\r\n          ) {\r\n            this.palIndex = this.pix[this.tIndex];\r\n            this.tpri = priTable[this.fbIndex];\r\n            if (this.palIndex !== 0 && pri <= (this.tpri & 0xff)) {\r\n              //console.log(\"Rendering upright tile to buffer\");\r\n              buffer[this.fbIndex] = palette[this.palIndex + palAdd];\r\n              this.tpri = (this.tpri & 0xf00) | pri;\r\n              priTable[this.fbIndex] = this.tpri;\r\n            }\r\n          }\r\n          this.fbIndex++;\r\n          this.tIndex++;\r\n        }\r\n        this.fbIndex -= 8;\r\n        this.fbIndex += 256;\r\n      }\r\n    } else if (flipHorizontal && !flipVertical) {\r\n      this.fbIndex = (dy << 8) + dx;\r\n      this.tIndex = 7;\r\n      for (this.y = 0; this.y < 8; this.y++) {\r\n        for (this.x = 0; this.x < 8; this.x++) {\r\n          if (\r\n            this.x >= srcx1 &&\r\n            this.x < srcx2 &&\r\n            this.y >= srcy1 &&\r\n            this.y < srcy2\r\n          ) {\r\n            this.palIndex = this.pix[this.tIndex];\r\n            this.tpri = priTable[this.fbIndex];\r\n            if (this.palIndex !== 0 && pri <= (this.tpri & 0xff)) {\r\n              buffer[this.fbIndex] = palette[this.palIndex + palAdd];\r\n              this.tpri = (this.tpri & 0xf00) | pri;\r\n              priTable[this.fbIndex] = this.tpri;\r\n            }\r\n          }\r\n          this.fbIndex++;\r\n          this.tIndex--;\r\n        }\r\n        this.fbIndex -= 8;\r\n        this.fbIndex += 256;\r\n        this.tIndex += 16;\r\n      }\r\n    } else if (flipVertical && !flipHorizontal) {\r\n      this.fbIndex = (dy << 8) + dx;\r\n      this.tIndex = 56;\r\n      for (this.y = 0; this.y < 8; this.y++) {\r\n        for (this.x = 0; this.x < 8; this.x++) {\r\n          if (\r\n            this.x >= srcx1 &&\r\n            this.x < srcx2 &&\r\n            this.y >= srcy1 &&\r\n            this.y < srcy2\r\n          ) {\r\n            this.palIndex = this.pix[this.tIndex];\r\n            this.tpri = priTable[this.fbIndex];\r\n            if (this.palIndex !== 0 && pri <= (this.tpri & 0xff)) {\r\n              buffer[this.fbIndex] = palette[this.palIndex + palAdd];\r\n              this.tpri = (this.tpri & 0xf00) | pri;\r\n              priTable[this.fbIndex] = this.tpri;\r\n            }\r\n          }\r\n          this.fbIndex++;\r\n          this.tIndex++;\r\n        }\r\n        this.fbIndex -= 8;\r\n        this.fbIndex += 256;\r\n        this.tIndex -= 16;\r\n      }\r\n    } else {\r\n      this.fbIndex = (dy << 8) + dx;\r\n      this.tIndex = 63;\r\n      for (this.y = 0; this.y < 8; this.y++) {\r\n        for (this.x = 0; this.x < 8; this.x++) {\r\n          if (\r\n            this.x >= srcx1 &&\r\n            this.x < srcx2 &&\r\n            this.y >= srcy1 &&\r\n            this.y < srcy2\r\n          ) {\r\n            this.palIndex = this.pix[this.tIndex];\r\n            this.tpri = priTable[this.fbIndex];\r\n            if (this.palIndex !== 0 && pri <= (this.tpri & 0xff)) {\r\n              buffer[this.fbIndex] = palette[this.palIndex + palAdd];\r\n              this.tpri = (this.tpri & 0xf00) | pri;\r\n              priTable[this.fbIndex] = this.tpri;\r\n            }\r\n          }\r\n          this.fbIndex++;\r\n          this.tIndex--;\r\n        }\r\n        this.fbIndex -= 8;\r\n        this.fbIndex += 256;\r\n      }\r\n    }\r\n  },\r\n\r\n  isTransparent: function (x, y) {\r\n    return this.pix[(y << 3) + x] === 0;\r\n  },\r\n\r\n  toJSON: function () {\r\n    return {\r\n      opaque: this.opaque,\r\n      pix: this.pix,\r\n    };\r\n  },\r\n\r\n  fromJSON: function (s) {\r\n    this.opaque = s.opaque;\r\n    this.pix = s.pix;\r\n  },\r\n};\r\n\r\nexport {Tile};\r\n","import {Tile} from './tile.js'\r\nimport {utils} from './utils.js'\r\n\r\n\r\nvar PPU = function (nes) {\r\n  this.nes = nes;\r\n\r\n  // Keep Chrome happy\r\n  this.vramMem = null;\r\n  this.spriteMem = null;\r\n  this.vramAddress = null;\r\n  this.vramTmpAddress = null;\r\n  this.vramBufferedReadValue = null;\r\n  this.firstWrite = null;\r\n  this.sramAddress = null;\r\n  this.currentMirroring = null;\r\n  this.requestEndFrame = null;\r\n  this.nmiOk = null;\r\n  this.dummyCycleToggle = null;\r\n  this.validTileData = null;\r\n  this.nmiCounter = null;\r\n  this.scanlineAlreadyRendered = null;\r\n  this.f_nmiOnVblank = null;\r\n  this.f_spriteSize = null;\r\n  this.f_bgPatternTable = null;\r\n  this.f_spPatternTable = null;\r\n  this.f_addrInc = null;\r\n  this.f_nTblAddress = null;\r\n  this.f_color = null;\r\n  this.f_spVisibility = null;\r\n  this.f_bgVisibility = null;\r\n  this.f_spClipping = null;\r\n  this.f_bgClipping = null;\r\n  this.f_dispType = null;\r\n  this.cntFV = null;\r\n  this.cntV = null;\r\n  this.cntH = null;\r\n  this.cntVT = null;\r\n  this.cntHT = null;\r\n  this.regFV = null;\r\n  this.regV = null;\r\n  this.regH = null;\r\n  this.regVT = null;\r\n  this.regHT = null;\r\n  this.regFH = null;\r\n  this.regS = null;\r\n  this.curNt = null;\r\n  this.attrib = null;\r\n  this.buffer = null;\r\n  this.bgbuffer = null;\r\n  this.pixrendered = null;\r\n\r\n  this.validTileData = null;\r\n  this.scantile = null;\r\n  this.scanline = null;\r\n  this.lastRenderedScanline = null;\r\n  this.curX = null;\r\n  this.sprX = null;\r\n  this.sprY = null;\r\n  this.sprTile = null;\r\n  this.sprCol = null;\r\n  this.vertFlip = null;\r\n  this.horiFlip = null;\r\n  this.bgPriority = null;\r\n  this.spr0HitX = null;\r\n  this.spr0HitY = null;\r\n  this.hitSpr0 = null;\r\n  this.sprPalette = null;\r\n  this.imgPalette = null;\r\n  this.ptTile = null;\r\n  this.ntable1 = null;\r\n  this.currentMirroring = null;\r\n  this.nameTable = null;\r\n  this.vramMirrorTable = null;\r\n  this.palTable = null;\r\n\r\n  // Rendering Options:\r\n  this.showSpr0Hit = false;\r\n  this.clipToTvSize = true;\r\n\r\n  this.reset();\r\n};\r\n\r\nPPU.prototype = {\r\n  // Status flags:\r\n  STATUS_VRAMWRITE: 4,\r\n  STATUS_SLSPRITECOUNT: 5,\r\n  STATUS_SPRITE0HIT: 6,\r\n  STATUS_VBLANK: 7,\r\n\r\n  reset: function () {\r\n    var i;\r\n\r\n    // Memory\r\n    this.vramMem = new Array(0x8000);\r\n    this.spriteMem = new Array(0x100);\r\n    for (i = 0; i < this.vramMem.length; i++) {\r\n      this.vramMem[i] = 0;\r\n    }\r\n    for (i = 0; i < this.spriteMem.length; i++) {\r\n      this.spriteMem[i] = 0;\r\n    }\r\n\r\n    // VRAM I/O:\r\n    this.vramAddress = null;\r\n    this.vramTmpAddress = null;\r\n    this.vramBufferedReadValue = 0;\r\n    this.firstWrite = true; // VRAM/Scroll Hi/Lo latch\r\n\r\n    // SPR-RAM I/O:\r\n    this.sramAddress = 0; // 8-bit only.\r\n\r\n    this.currentMirroring = -1;\r\n    this.requestEndFrame = false;\r\n    this.nmiOk = false;\r\n    this.dummyCycleToggle = false;\r\n    this.validTileData = false;\r\n    this.nmiCounter = 0;\r\n    this.scanlineAlreadyRendered = null;\r\n\r\n    // Control Flags Register 1:\r\n    this.f_nmiOnVblank = 0; // NMI on VBlank. 0=disable, 1=enable\r\n    this.f_spriteSize = 0; // Sprite size. 0=8x8, 1=8x16\r\n    this.f_bgPatternTable = 0; // Background Pattern Table address. 0=0x0000,1=0x1000\r\n    this.f_spPatternTable = 0; // Sprite Pattern Table address. 0=0x0000,1=0x1000\r\n    this.f_addrInc = 0; // PPU Address Increment. 0=1,1=32\r\n    this.f_nTblAddress = 0; // Name Table Address. 0=0x2000,1=0x2400,2=0x2800,3=0x2C00\r\n\r\n    // Control Flags Register 2:\r\n    this.f_color = 0; // Background color. 0=black, 1=blue, 2=green, 4=red\r\n    this.f_spVisibility = 0; // Sprite visibility. 0=not displayed,1=displayed\r\n    this.f_bgVisibility = 0; // Background visibility. 0=Not Displayed,1=displayed\r\n    this.f_spClipping = 0; // Sprite clipping. 0=Sprites invisible in left 8-pixel column,1=No clipping\r\n    this.f_bgClipping = 0; // Background clipping. 0=BG invisible in left 8-pixel column, 1=No clipping\r\n    this.f_dispType = 0; // Display type. 0=color, 1=monochrome\r\n\r\n    // Counters:\r\n    this.cntFV = 0;\r\n    this.cntV = 0;\r\n    this.cntH = 0;\r\n    this.cntVT = 0;\r\n    this.cntHT = 0;\r\n\r\n    // Registers:\r\n    this.regFV = 0;\r\n    this.regV = 0;\r\n    this.regH = 0;\r\n    this.regVT = 0;\r\n    this.regHT = 0;\r\n    this.regFH = 0;\r\n    this.regS = 0;\r\n\r\n    // These are temporary variables used in rendering and sound procedures.\r\n    // Their states outside of those procedures can be ignored.\r\n    // TODO: the use of this is a bit weird, investigate\r\n    this.curNt = null;\r\n\r\n    // Variables used when rendering:\r\n    this.attrib = new Array(32);\r\n    this.buffer = new Array(256 * 240);\r\n    this.bgbuffer = new Array(256 * 240);\r\n    this.pixrendered = new Array(256 * 240);\r\n\r\n    this.validTileData = null;\r\n\r\n    this.scantile = new Array(32);\r\n\r\n    // Initialize misc vars:\r\n    this.scanline = 0;\r\n    this.lastRenderedScanline = -1;\r\n    this.curX = 0;\r\n\r\n    // Sprite data:\r\n    this.sprX = new Array(64); // X coordinate\r\n    this.sprY = new Array(64); // Y coordinate\r\n    this.sprTile = new Array(64); // Tile Index (into pattern table)\r\n    this.sprCol = new Array(64); // Upper two bits of color\r\n    this.vertFlip = new Array(64); // Vertical Flip\r\n    this.horiFlip = new Array(64); // Horizontal Flip\r\n    this.bgPriority = new Array(64); // Background priority\r\n    this.spr0HitX = 0; // Sprite #0 hit X coordinate\r\n    this.spr0HitY = 0; // Sprite #0 hit Y coordinate\r\n    this.hitSpr0 = false;\r\n\r\n    // Palette data:\r\n    this.sprPalette = new Array(16);\r\n    this.imgPalette = new Array(16);\r\n\r\n    // Create pattern table tile buffers:\r\n    this.ptTile = new Array(512);\r\n    for (i = 0; i < 512; i++) {\r\n      this.ptTile[i] = new Tile();\r\n    }\r\n\r\n    // Create nametable buffers:\r\n    // Name table data:\r\n    this.ntable1 = new Array(4);\r\n    this.currentMirroring = -1;\r\n    this.nameTable = new Array(4);\r\n    for (i = 0; i < 4; i++) {\r\n      this.nameTable[i] = new NameTable(32, 32, \"Nt\" + i);\r\n    }\r\n\r\n    // Initialize mirroring lookup table:\r\n    this.vramMirrorTable = new Array(0x8000);\r\n    for (i = 0; i < 0x8000; i++) {\r\n      this.vramMirrorTable[i] = i;\r\n    }\r\n\r\n    this.palTable = new PaletteTable();\r\n    this.palTable.loadNTSCPalette();\r\n    //this.palTable.loadDefaultPalette();\r\n\r\n    this.updateControlReg1(0);\r\n    this.updateControlReg2(0);\r\n  },\r\n\r\n  // Sets Nametable mirroring.\r\n  setMirroring: function (mirroring) {\r\n    if (mirroring === this.currentMirroring) {\r\n      return;\r\n    }\r\n\r\n    this.currentMirroring = mirroring;\r\n    this.triggerRendering();\r\n\r\n    // Remove mirroring:\r\n    if (this.vramMirrorTable === null) {\r\n      this.vramMirrorTable = new Array(0x8000);\r\n    }\r\n    for (var i = 0; i < 0x8000; i++) {\r\n      this.vramMirrorTable[i] = i;\r\n    }\r\n\r\n    // Palette mirroring:\r\n    this.defineMirrorRegion(0x3f20, 0x3f00, 0x20);\r\n    this.defineMirrorRegion(0x3f40, 0x3f00, 0x20);\r\n    this.defineMirrorRegion(0x3f80, 0x3f00, 0x20);\r\n    this.defineMirrorRegion(0x3fc0, 0x3f00, 0x20);\r\n\r\n    // Additional mirroring:\r\n    this.defineMirrorRegion(0x3000, 0x2000, 0xf00);\r\n    this.defineMirrorRegion(0x4000, 0x0000, 0x4000);\r\n\r\n    if (mirroring === this.nes.rom.HORIZONTAL_MIRRORING) {\r\n      // Horizontal mirroring.\r\n\r\n      this.ntable1[0] = 0;\r\n      this.ntable1[1] = 0;\r\n      this.ntable1[2] = 1;\r\n      this.ntable1[3] = 1;\r\n\r\n      this.defineMirrorRegion(0x2400, 0x2000, 0x400);\r\n      this.defineMirrorRegion(0x2c00, 0x2800, 0x400);\r\n    } else if (mirroring === this.nes.rom.VERTICAL_MIRRORING) {\r\n      // Vertical mirroring.\r\n\r\n      this.ntable1[0] = 0;\r\n      this.ntable1[1] = 1;\r\n      this.ntable1[2] = 0;\r\n      this.ntable1[3] = 1;\r\n\r\n      this.defineMirrorRegion(0x2800, 0x2000, 0x400);\r\n      this.defineMirrorRegion(0x2c00, 0x2400, 0x400);\r\n    } else if (mirroring === this.nes.rom.SINGLESCREEN_MIRRORING) {\r\n      // Single Screen mirroring\r\n\r\n      this.ntable1[0] = 0;\r\n      this.ntable1[1] = 0;\r\n      this.ntable1[2] = 0;\r\n      this.ntable1[3] = 0;\r\n\r\n      this.defineMirrorRegion(0x2400, 0x2000, 0x400);\r\n      this.defineMirrorRegion(0x2800, 0x2000, 0x400);\r\n      this.defineMirrorRegion(0x2c00, 0x2000, 0x400);\r\n    } else if (mirroring === this.nes.rom.SINGLESCREEN_MIRRORING2) {\r\n      this.ntable1[0] = 1;\r\n      this.ntable1[1] = 1;\r\n      this.ntable1[2] = 1;\r\n      this.ntable1[3] = 1;\r\n\r\n      this.defineMirrorRegion(0x2400, 0x2400, 0x400);\r\n      this.defineMirrorRegion(0x2800, 0x2400, 0x400);\r\n      this.defineMirrorRegion(0x2c00, 0x2400, 0x400);\r\n    } else {\r\n      // Assume Four-screen mirroring.\r\n\r\n      this.ntable1[0] = 0;\r\n      this.ntable1[1] = 1;\r\n      this.ntable1[2] = 2;\r\n      this.ntable1[3] = 3;\r\n    }\r\n  },\r\n\r\n  // Define a mirrored area in the address lookup table.\r\n  // Assumes the regions don't overlap.\r\n  // The 'to' region is the region that is physically in memory.\r\n  defineMirrorRegion: function (fromStart, toStart, size) {\r\n    for (var i = 0; i < size; i++) {\r\n      this.vramMirrorTable[fromStart + i] = toStart + i;\r\n    }\r\n  },\r\n\r\n  startVBlank: function () {\r\n    // Do NMI:\r\n    this.nes.cpu.requestIrq(this.nes.cpu.IRQ_NMI);\r\n\r\n    // Make sure everything is rendered:\r\n    if (this.lastRenderedScanline < 239) {\r\n      this.renderFramePartially(\r\n        this.lastRenderedScanline + 1,\r\n        240 - this.lastRenderedScanline\r\n      );\r\n    }\r\n\r\n    // End frame:\r\n    this.endFrame();\r\n\r\n    // Reset scanline counter:\r\n    this.lastRenderedScanline = -1;\r\n  },\r\n\r\n  endScanline: function () {\r\n    switch (this.scanline) {\r\n      case 19:\r\n        // Dummy scanline.\r\n        // May be variable length:\r\n        if (this.dummyCycleToggle) {\r\n          // Remove dead cycle at end of scanline,\r\n          // for next scanline:\r\n          this.curX = 1;\r\n          this.dummyCycleToggle = !this.dummyCycleToggle;\r\n        }\r\n        break;\r\n\r\n      case 20:\r\n        // Clear VBlank flag:\r\n        this.setStatusFlag(this.STATUS_VBLANK, false);\r\n\r\n        // Clear Sprite #0 hit flag:\r\n        this.setStatusFlag(this.STATUS_SPRITE0HIT, false);\r\n        this.hitSpr0 = false;\r\n        this.spr0HitX = -1;\r\n        this.spr0HitY = -1;\r\n\r\n        if (this.f_bgVisibility === 1 || this.f_spVisibility === 1) {\r\n          // Update counters:\r\n          this.cntFV = this.regFV;\r\n          this.cntV = this.regV;\r\n          this.cntH = this.regH;\r\n          this.cntVT = this.regVT;\r\n          this.cntHT = this.regHT;\r\n\r\n          if (this.f_bgVisibility === 1) {\r\n            // Render dummy scanline:\r\n            this.renderBgScanline(false, 0);\r\n          }\r\n        }\r\n\r\n        if (this.f_bgVisibility === 1 && this.f_spVisibility === 1) {\r\n          // Check sprite 0 hit for first scanline:\r\n          this.checkSprite0(0);\r\n        }\r\n\r\n        if (this.f_bgVisibility === 1 || this.f_spVisibility === 1) {\r\n          // Clock mapper IRQ Counter:\r\n          this.nes.mmap.clockIrqCounter();\r\n        }\r\n        break;\r\n\r\n      case 261:\r\n        // Dead scanline, no rendering.\r\n        // Set VINT:\r\n        this.setStatusFlag(this.STATUS_VBLANK, true);\r\n        this.requestEndFrame = true;\r\n        this.nmiCounter = 9;\r\n\r\n        // Wrap around:\r\n        this.scanline = -1; // will be incremented to 0\r\n\r\n        break;\r\n\r\n      default:\r\n        if (this.scanline >= 21 && this.scanline <= 260) {\r\n          // Render normally:\r\n          if (this.f_bgVisibility === 1) {\r\n            if (!this.scanlineAlreadyRendered) {\r\n              // update scroll:\r\n              this.cntHT = this.regHT;\r\n              this.cntH = this.regH;\r\n              this.renderBgScanline(true, this.scanline + 1 - 21);\r\n            }\r\n            this.scanlineAlreadyRendered = false;\r\n\r\n            // Check for sprite 0 (next scanline):\r\n            if (!this.hitSpr0 && this.f_spVisibility === 1) {\r\n              if (\r\n                this.sprX[0] >= -7 &&\r\n                this.sprX[0] < 256 &&\r\n                this.sprY[0] + 1 <= this.scanline - 20 &&\r\n                this.sprY[0] + 1 + (this.f_spriteSize === 0 ? 8 : 16) >=\r\n                  this.scanline - 20\r\n              ) {\r\n                if (this.checkSprite0(this.scanline - 20)) {\r\n                  this.hitSpr0 = true;\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          if (this.f_bgVisibility === 1 || this.f_spVisibility === 1) {\r\n            // Clock mapper IRQ Counter:\r\n            this.nes.mmap.clockIrqCounter();\r\n          }\r\n        }\r\n    }\r\n\r\n    this.scanline++;\r\n    this.regsToAddress();\r\n    this.cntsToAddress();\r\n  },\r\n\r\n  startFrame: function () {\r\n    // Set background color:\r\n    var bgColor = 0;\r\n\r\n    if (this.f_dispType === 0) {\r\n      // Color display.\r\n      // f_color determines color emphasis.\r\n      // Use first entry of image palette as BG color.\r\n      bgColor = this.imgPalette[0];\r\n    } else {\r\n      // Monochrome display.\r\n      // f_color determines the bg color.\r\n      switch (this.f_color) {\r\n        case 0:\r\n          // Black\r\n          bgColor = 0x00000;\r\n          break;\r\n        case 1:\r\n          // Green\r\n          bgColor = 0x00ff00;\r\n          break;\r\n        case 2:\r\n          // Blue\r\n          bgColor = 0xff0000;\r\n          break;\r\n        case 3:\r\n          // Invalid. Use black.\r\n          bgColor = 0x000000;\r\n          break;\r\n        case 4:\r\n          // Red\r\n          bgColor = 0x0000ff;\r\n          break;\r\n        default:\r\n          // Invalid. Use black.\r\n          bgColor = 0x0;\r\n      }\r\n    }\r\n\r\n    var buffer = this.buffer;\r\n    var i;\r\n    for (i = 0; i < 256 * 240; i++) {\r\n      buffer[i] = bgColor;\r\n    }\r\n    var pixrendered = this.pixrendered;\r\n    for (i = 0; i < pixrendered.length; i++) {\r\n      pixrendered[i] = 65;\r\n    }\r\n  },\r\n\r\n  endFrame: function () {\r\n    var i, x, y;\r\n    var buffer = this.buffer;\r\n\r\n    // Draw spr#0 hit coordinates:\r\n    if (this.showSpr0Hit) {\r\n      // Spr 0 position:\r\n      if (\r\n        this.sprX[0] >= 0 &&\r\n        this.sprX[0] < 256 &&\r\n        this.sprY[0] >= 0 &&\r\n        this.sprY[0] < 240\r\n      ) {\r\n        for (i = 0; i < 256; i++) {\r\n          buffer[(this.sprY[0] << 8) + i] = 0xff5555;\r\n        }\r\n        for (i = 0; i < 240; i++) {\r\n          buffer[(i << 8) + this.sprX[0]] = 0xff5555;\r\n        }\r\n      }\r\n      // Hit position:\r\n      if (\r\n        this.spr0HitX >= 0 &&\r\n        this.spr0HitX < 256 &&\r\n        this.spr0HitY >= 0 &&\r\n        this.spr0HitY < 240\r\n      ) {\r\n        for (i = 0; i < 256; i++) {\r\n          buffer[(this.spr0HitY << 8) + i] = 0x55ff55;\r\n        }\r\n        for (i = 0; i < 240; i++) {\r\n          buffer[(i << 8) + this.spr0HitX] = 0x55ff55;\r\n        }\r\n      }\r\n    }\r\n\r\n    // This is a bit lazy..\r\n    // if either the sprites or the background should be clipped,\r\n    // both are clipped after rendering is finished.\r\n    if (\r\n      this.clipToTvSize ||\r\n      this.f_bgClipping === 0 ||\r\n      this.f_spClipping === 0\r\n    ) {\r\n      // Clip left 8-pixels column:\r\n      for (y = 0; y < 240; y++) {\r\n        for (x = 0; x < 8; x++) {\r\n          buffer[(y << 8) + x] = 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.clipToTvSize) {\r\n      // Clip right 8-pixels column too:\r\n      for (y = 0; y < 240; y++) {\r\n        for (x = 0; x < 8; x++) {\r\n          buffer[(y << 8) + 255 - x] = 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Clip top and bottom 8 pixels:\r\n    if (this.clipToTvSize) {\r\n      for (y = 0; y < 8; y++) {\r\n        for (x = 0; x < 256; x++) {\r\n          buffer[(y << 8) + x] = 0;\r\n          buffer[((239 - y) << 8) + x] = 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.nes.ui.writeFrame(buffer);\r\n  },\r\n\r\n  updateControlReg1: function (value) {\r\n    this.triggerRendering();\r\n\r\n    this.f_nmiOnVblank = (value >> 7) & 1;\r\n    this.f_spriteSize = (value >> 5) & 1;\r\n    this.f_bgPatternTable = (value >> 4) & 1;\r\n    this.f_spPatternTable = (value >> 3) & 1;\r\n    this.f_addrInc = (value >> 2) & 1;\r\n    this.f_nTblAddress = value & 3;\r\n\r\n    this.regV = (value >> 1) & 1;\r\n    this.regH = value & 1;\r\n    this.regS = (value >> 4) & 1;\r\n  },\r\n\r\n  updateControlReg2: function (value) {\r\n    this.triggerRendering();\r\n\r\n    this.f_color = (value >> 5) & 7;\r\n    this.f_spVisibility = (value >> 4) & 1;\r\n    this.f_bgVisibility = (value >> 3) & 1;\r\n    this.f_spClipping = (value >> 2) & 1;\r\n    this.f_bgClipping = (value >> 1) & 1;\r\n    this.f_dispType = value & 1;\r\n\r\n    if (this.f_dispType === 0) {\r\n      this.palTable.setEmphasis(this.f_color);\r\n    }\r\n    this.updatePalettes();\r\n  },\r\n\r\n  setStatusFlag: function (flag, value) {\r\n    var n = 1 << flag;\r\n    this.nes.cpu.mem[0x2002] =\r\n      (this.nes.cpu.mem[0x2002] & (255 - n)) | (value ? n : 0);\r\n  },\r\n\r\n  // CPU Register $2002:\r\n  // Read the Status Register.\r\n  readStatusRegister: function () {\r\n    var tmp = this.nes.cpu.mem[0x2002];\r\n\r\n    // Reset scroll & VRAM Address toggle:\r\n    this.firstWrite = true;\r\n\r\n    // Clear VBlank flag:\r\n    this.setStatusFlag(this.STATUS_VBLANK, false);\r\n\r\n    // Fetch status data:\r\n    return tmp;\r\n  },\r\n\r\n  // CPU Register $2003:\r\n  // Write the SPR-RAM address that is used for sramWrite (Register 0x2004 in CPU memory map)\r\n  writeSRAMAddress: function (address) {\r\n    this.sramAddress = address;\r\n  },\r\n\r\n  // CPU Register $2004 (R):\r\n  // Read from SPR-RAM (Sprite RAM).\r\n  // The address should be set first.\r\n  sramLoad: function () {\r\n    /*short tmp = sprMem.load(sramAddress);\r\n        sramAddress++; // Increment address\r\n        sramAddress%=0x100;\r\n        return tmp;*/\r\n    return this.spriteMem[this.sramAddress];\r\n  },\r\n\r\n  // CPU Register $2004 (W):\r\n  // Write to SPR-RAM (Sprite RAM).\r\n  // The address should be set first.\r\n  sramWrite: function (value) {\r\n    this.spriteMem[this.sramAddress] = value;\r\n    this.spriteRamWriteUpdate(this.sramAddress, value);\r\n    this.sramAddress++; // Increment address\r\n    this.sramAddress %= 0x100;\r\n  },\r\n\r\n  // CPU Register $2005:\r\n  // Write to scroll registers.\r\n  // The first write is the vertical offset, the second is the\r\n  // horizontal offset:\r\n  scrollWrite: function (value) {\r\n    this.triggerRendering();\r\n\r\n    if (this.firstWrite) {\r\n      // First write, horizontal scroll:\r\n      this.regHT = (value >> 3) & 31;\r\n      this.regFH = value & 7;\r\n    } else {\r\n      // Second write, vertical scroll:\r\n      this.regFV = value & 7;\r\n      this.regVT = (value >> 3) & 31;\r\n    }\r\n    this.firstWrite = !this.firstWrite;\r\n  },\r\n\r\n  // CPU Register $2006:\r\n  // Sets the adress used when reading/writing from/to VRAM.\r\n  // The first write sets the high byte, the second the low byte.\r\n  writeVRAMAddress: function (address) {\r\n    if (this.firstWrite) {\r\n      this.regFV = (address >> 4) & 3;\r\n      this.regV = (address >> 3) & 1;\r\n      this.regH = (address >> 2) & 1;\r\n      this.regVT = (this.regVT & 7) | ((address & 3) << 3);\r\n    } else {\r\n      this.triggerRendering();\r\n\r\n      this.regVT = (this.regVT & 24) | ((address >> 5) & 7);\r\n      this.regHT = address & 31;\r\n\r\n      this.cntFV = this.regFV;\r\n      this.cntV = this.regV;\r\n      this.cntH = this.regH;\r\n      this.cntVT = this.regVT;\r\n      this.cntHT = this.regHT;\r\n\r\n      this.checkSprite0(this.scanline - 20);\r\n    }\r\n\r\n    this.firstWrite = !this.firstWrite;\r\n\r\n    // Invoke mapper latch:\r\n    this.cntsToAddress();\r\n    if (this.vramAddress < 0x2000) {\r\n      this.nes.mmap.latchAccess(this.vramAddress);\r\n    }\r\n  },\r\n\r\n  // CPU Register $2007(R):\r\n  // Read from PPU memory. The address should be set first.\r\n  vramLoad: function () {\r\n    var tmp;\r\n\r\n    this.cntsToAddress();\r\n    this.regsToAddress();\r\n\r\n    // If address is in range 0x0000-0x3EFF, return buffered values:\r\n    if (this.vramAddress <= 0x3eff) {\r\n      tmp = this.vramBufferedReadValue;\r\n\r\n      // Update buffered value:\r\n      if (this.vramAddress < 0x2000) {\r\n        this.vramBufferedReadValue = this.vramMem[this.vramAddress];\r\n      } else {\r\n        this.vramBufferedReadValue = this.mirroredLoad(this.vramAddress);\r\n      }\r\n\r\n      // Mapper latch access:\r\n      if (this.vramAddress < 0x2000) {\r\n        this.nes.mmap.latchAccess(this.vramAddress);\r\n      }\r\n\r\n      // Increment by either 1 or 32, depending on d2 of Control Register 1:\r\n      this.vramAddress += this.f_addrInc === 1 ? 32 : 1;\r\n\r\n      this.cntsFromAddress();\r\n      this.regsFromAddress();\r\n\r\n      return tmp; // Return the previous buffered value.\r\n    }\r\n\r\n    // No buffering in this mem range. Read normally.\r\n    tmp = this.mirroredLoad(this.vramAddress);\r\n\r\n    // Increment by either 1 or 32, depending on d2 of Control Register 1:\r\n    this.vramAddress += this.f_addrInc === 1 ? 32 : 1;\r\n\r\n    this.cntsFromAddress();\r\n    this.regsFromAddress();\r\n\r\n    return tmp;\r\n  },\r\n\r\n  // CPU Register $2007(W):\r\n  // Write to PPU memory. The address should be set first.\r\n  vramWrite: function (value) {\r\n    this.triggerRendering();\r\n    this.cntsToAddress();\r\n    this.regsToAddress();\r\n\r\n    if (this.vramAddress >= 0x2000) {\r\n      // Mirroring is used.\r\n      this.mirroredWrite(this.vramAddress, value);\r\n    } else {\r\n      // Write normally.\r\n      this.writeMem(this.vramAddress, value);\r\n\r\n      // Invoke mapper latch:\r\n      this.nes.mmap.latchAccess(this.vramAddress);\r\n    }\r\n\r\n    // Increment by either 1 or 32, depending on d2 of Control Register 1:\r\n    this.vramAddress += this.f_addrInc === 1 ? 32 : 1;\r\n    this.regsFromAddress();\r\n    this.cntsFromAddress();\r\n  },\r\n\r\n  // CPU Register $4014:\r\n  // Write 256 bytes of main memory\r\n  // into Sprite RAM.\r\n  sramDMA: function (value) {\r\n    var baseAddress = value * 0x100;\r\n    var data;\r\n    for (var i = this.sramAddress; i < 256; i++) {\r\n      data = this.nes.cpu.mem[baseAddress + i];\r\n      this.spriteMem[i] = data;\r\n      this.spriteRamWriteUpdate(i, data);\r\n    }\r\n\r\n    this.nes.cpu.haltCycles(513);\r\n  },\r\n\r\n  // Updates the scroll registers from a new VRAM address.\r\n  regsFromAddress: function () {\r\n    var address = (this.vramTmpAddress >> 8) & 0xff;\r\n    this.regFV = (address >> 4) & 7;\r\n    this.regV = (address >> 3) & 1;\r\n    this.regH = (address >> 2) & 1;\r\n    this.regVT = (this.regVT & 7) | ((address & 3) << 3);\r\n\r\n    address = this.vramTmpAddress & 0xff;\r\n    this.regVT = (this.regVT & 24) | ((address >> 5) & 7);\r\n    this.regHT = address & 31;\r\n  },\r\n\r\n  // Updates the scroll registers from a new VRAM address.\r\n  cntsFromAddress: function () {\r\n    var address = (this.vramAddress >> 8) & 0xff;\r\n    this.cntFV = (address >> 4) & 3;\r\n    this.cntV = (address >> 3) & 1;\r\n    this.cntH = (address >> 2) & 1;\r\n    this.cntVT = (this.cntVT & 7) | ((address & 3) << 3);\r\n\r\n    address = this.vramAddress & 0xff;\r\n    this.cntVT = (this.cntVT & 24) | ((address >> 5) & 7);\r\n    this.cntHT = address & 31;\r\n  },\r\n\r\n  regsToAddress: function () {\r\n    var b1 = (this.regFV & 7) << 4;\r\n    b1 |= (this.regV & 1) << 3;\r\n    b1 |= (this.regH & 1) << 2;\r\n    b1 |= (this.regVT >> 3) & 3;\r\n\r\n    var b2 = (this.regVT & 7) << 5;\r\n    b2 |= this.regHT & 31;\r\n\r\n    this.vramTmpAddress = ((b1 << 8) | b2) & 0x7fff;\r\n  },\r\n\r\n  cntsToAddress: function () {\r\n    var b1 = (this.cntFV & 7) << 4;\r\n    b1 |= (this.cntV & 1) << 3;\r\n    b1 |= (this.cntH & 1) << 2;\r\n    b1 |= (this.cntVT >> 3) & 3;\r\n\r\n    var b2 = (this.cntVT & 7) << 5;\r\n    b2 |= this.cntHT & 31;\r\n\r\n    this.vramAddress = ((b1 << 8) | b2) & 0x7fff;\r\n  },\r\n\r\n  incTileCounter: function (count) {\r\n    for (var i = count; i !== 0; i--) {\r\n      this.cntHT++;\r\n      if (this.cntHT === 32) {\r\n        this.cntHT = 0;\r\n        this.cntVT++;\r\n        if (this.cntVT >= 30) {\r\n          this.cntH++;\r\n          if (this.cntH === 2) {\r\n            this.cntH = 0;\r\n            this.cntV++;\r\n            if (this.cntV === 2) {\r\n              this.cntV = 0;\r\n              this.cntFV++;\r\n              this.cntFV &= 0x7;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  // Reads from memory, taking into account\r\n  // mirroring/mapping of address ranges.\r\n  mirroredLoad: function (address) {\r\n    return this.vramMem[this.vramMirrorTable[address]];\r\n  },\r\n\r\n  // Writes to memory, taking into account\r\n  // mirroring/mapping of address ranges.\r\n  mirroredWrite: function (address, value) {\r\n    if (address >= 0x3f00 && address < 0x3f20) {\r\n      // Palette write mirroring.\r\n      if (address === 0x3f00 || address === 0x3f10) {\r\n        this.writeMem(0x3f00, value);\r\n        this.writeMem(0x3f10, value);\r\n      } else if (address === 0x3f04 || address === 0x3f14) {\r\n        this.writeMem(0x3f04, value);\r\n        this.writeMem(0x3f14, value);\r\n      } else if (address === 0x3f08 || address === 0x3f18) {\r\n        this.writeMem(0x3f08, value);\r\n        this.writeMem(0x3f18, value);\r\n      } else if (address === 0x3f0c || address === 0x3f1c) {\r\n        this.writeMem(0x3f0c, value);\r\n        this.writeMem(0x3f1c, value);\r\n      } else {\r\n        this.writeMem(address, value);\r\n      }\r\n    } else {\r\n      // Use lookup table for mirrored address:\r\n      if (address < this.vramMirrorTable.length) {\r\n        this.writeMem(this.vramMirrorTable[address], value);\r\n      } else {\r\n        throw new Error(\"Invalid VRAM address: \" + address.toString(16));\r\n      }\r\n    }\r\n  },\r\n\r\n  triggerRendering: function () {\r\n    if (this.scanline >= 21 && this.scanline <= 260) {\r\n      // Render sprites, and combine:\r\n      this.renderFramePartially(\r\n        this.lastRenderedScanline + 1,\r\n        this.scanline - 21 - this.lastRenderedScanline\r\n      );\r\n\r\n      // Set last rendered scanline:\r\n      this.lastRenderedScanline = this.scanline - 21;\r\n    }\r\n  },\r\n\r\n  renderFramePartially: function (startScan, scanCount) {\r\n    if (this.f_spVisibility === 1) {\r\n      this.renderSpritesPartially(startScan, scanCount, true);\r\n    }\r\n\r\n    if (this.f_bgVisibility === 1) {\r\n      var si = startScan << 8;\r\n      var ei = (startScan + scanCount) << 8;\r\n      if (ei > 0xf000) {\r\n        ei = 0xf000;\r\n      }\r\n      var buffer = this.buffer;\r\n      var bgbuffer = this.bgbuffer;\r\n      var pixrendered = this.pixrendered;\r\n      for (var destIndex = si; destIndex < ei; destIndex++) {\r\n        if (pixrendered[destIndex] > 0xff) {\r\n          buffer[destIndex] = bgbuffer[destIndex];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.f_spVisibility === 1) {\r\n      this.renderSpritesPartially(startScan, scanCount, false);\r\n    }\r\n\r\n    this.validTileData = false;\r\n  },\r\n\r\n  renderBgScanline: function (bgbuffer, scan) {\r\n    var baseTile = this.regS === 0 ? 0 : 256;\r\n    var destIndex = (scan << 8) - this.regFH;\r\n\r\n    this.curNt = this.ntable1[this.cntV + this.cntV + this.cntH];\r\n\r\n    this.cntHT = this.regHT;\r\n    this.cntH = this.regH;\r\n    this.curNt = this.ntable1[this.cntV + this.cntV + this.cntH];\r\n\r\n    if (scan < 240 && scan - this.cntFV >= 0) {\r\n      var tscanoffset = this.cntFV << 3;\r\n      var scantile = this.scantile;\r\n      var attrib = this.attrib;\r\n      var ptTile = this.ptTile;\r\n      var nameTable = this.nameTable;\r\n      var imgPalette = this.imgPalette;\r\n      var pixrendered = this.pixrendered;\r\n      var targetBuffer = bgbuffer ? this.bgbuffer : this.buffer;\r\n\r\n      var t, tpix, att, col;\r\n\r\n      for (var tile = 0; tile < 32; tile++) {\r\n        if (scan >= 0) {\r\n          // Fetch tile & attrib data:\r\n          if (this.validTileData) {\r\n            // Get data from array:\r\n            t = scantile[tile];\r\n            if (typeof t === \"undefined\") {\r\n              continue;\r\n            }\r\n            tpix = t.pix;\r\n            att = attrib[tile];\r\n          } else {\r\n            // Fetch data:\r\n            t =\r\n              ptTile[\r\n                baseTile +\r\n                  nameTable[this.curNt].getTileIndex(this.cntHT, this.cntVT)\r\n              ];\r\n            if (typeof t === \"undefined\") {\r\n              continue;\r\n            }\r\n            tpix = t.pix;\r\n            att = nameTable[this.curNt].getAttrib(this.cntHT, this.cntVT);\r\n            scantile[tile] = t;\r\n            attrib[tile] = att;\r\n          }\r\n\r\n          // Render tile scanline:\r\n          var sx = 0;\r\n          var x = (tile << 3) - this.regFH;\r\n\r\n          if (x > -8) {\r\n            if (x < 0) {\r\n              destIndex -= x;\r\n              sx = -x;\r\n            }\r\n            if (t.opaque[this.cntFV]) {\r\n              for (; sx < 8; sx++) {\r\n                targetBuffer[destIndex] =\r\n                  imgPalette[tpix[tscanoffset + sx] + att];\r\n                pixrendered[destIndex] |= 256;\r\n                destIndex++;\r\n              }\r\n            } else {\r\n              for (; sx < 8; sx++) {\r\n                col = tpix[tscanoffset + sx];\r\n                if (col !== 0) {\r\n                  targetBuffer[destIndex] = imgPalette[col + att];\r\n                  pixrendered[destIndex] |= 256;\r\n                }\r\n                destIndex++;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Increase Horizontal Tile Counter:\r\n        if (++this.cntHT === 32) {\r\n          this.cntHT = 0;\r\n          this.cntH++;\r\n          this.cntH %= 2;\r\n          this.curNt = this.ntable1[(this.cntV << 1) + this.cntH];\r\n        }\r\n      }\r\n\r\n      // Tile data for one row should now have been fetched,\r\n      // so the data in the array is valid.\r\n      this.validTileData = true;\r\n    }\r\n\r\n    // update vertical scroll:\r\n    this.cntFV++;\r\n    if (this.cntFV === 8) {\r\n      this.cntFV = 0;\r\n      this.cntVT++;\r\n      if (this.cntVT === 30) {\r\n        this.cntVT = 0;\r\n        this.cntV++;\r\n        this.cntV %= 2;\r\n        this.curNt = this.ntable1[(this.cntV << 1) + this.cntH];\r\n      } else if (this.cntVT === 32) {\r\n        this.cntVT = 0;\r\n      }\r\n\r\n      // Invalidate fetched data:\r\n      this.validTileData = false;\r\n    }\r\n  },\r\n\r\n  renderSpritesPartially: function (startscan, scancount, bgPri) {\r\n    if (this.f_spVisibility === 1) {\r\n      for (var i = 0; i < 64; i++) {\r\n        if (\r\n          this.bgPriority[i] === bgPri &&\r\n          this.sprX[i] >= 0 &&\r\n          this.sprX[i] < 256 &&\r\n          this.sprY[i] + 8 >= startscan &&\r\n          this.sprY[i] < startscan + scancount\r\n        ) {\r\n          // Show sprite.\r\n          if (this.f_spriteSize === 0) {\r\n            // 8x8 sprites\r\n\r\n            this.srcy1 = 0;\r\n            this.srcy2 = 8;\r\n\r\n            if (this.sprY[i] < startscan) {\r\n              this.srcy1 = startscan - this.sprY[i] - 1;\r\n            }\r\n\r\n            if (this.sprY[i] + 8 > startscan + scancount) {\r\n              this.srcy2 = startscan + scancount - this.sprY[i] + 1;\r\n            }\r\n\r\n            if (this.f_spPatternTable === 0) {\r\n              this.ptTile[this.sprTile[i]].render(\r\n                this.buffer,\r\n                0,\r\n                this.srcy1,\r\n                8,\r\n                this.srcy2,\r\n                this.sprX[i],\r\n                this.sprY[i] + 1,\r\n                this.sprCol[i],\r\n                this.sprPalette,\r\n                this.horiFlip[i],\r\n                this.vertFlip[i],\r\n                i,\r\n                this.pixrendered\r\n              );\r\n            } else {\r\n              this.ptTile[this.sprTile[i] + 256].render(\r\n                this.buffer,\r\n                0,\r\n                this.srcy1,\r\n                8,\r\n                this.srcy2,\r\n                this.sprX[i],\r\n                this.sprY[i] + 1,\r\n                this.sprCol[i],\r\n                this.sprPalette,\r\n                this.horiFlip[i],\r\n                this.vertFlip[i],\r\n                i,\r\n                this.pixrendered\r\n              );\r\n            }\r\n          } else {\r\n            // 8x16 sprites\r\n            var top = this.sprTile[i];\r\n            if ((top & 1) !== 0) {\r\n              top = this.sprTile[i] - 1 + 256;\r\n            }\r\n\r\n            var srcy1 = 0;\r\n            var srcy2 = 8;\r\n\r\n            if (this.sprY[i] < startscan) {\r\n              srcy1 = startscan - this.sprY[i] - 1;\r\n            }\r\n\r\n            if (this.sprY[i] + 8 > startscan + scancount) {\r\n              srcy2 = startscan + scancount - this.sprY[i];\r\n            }\r\n\r\n            this.ptTile[top + (this.vertFlip[i] ? 1 : 0)].render(\r\n              this.buffer,\r\n              0,\r\n              srcy1,\r\n              8,\r\n              srcy2,\r\n              this.sprX[i],\r\n              this.sprY[i] + 1,\r\n              this.sprCol[i],\r\n              this.sprPalette,\r\n              this.horiFlip[i],\r\n              this.vertFlip[i],\r\n              i,\r\n              this.pixrendered\r\n            );\r\n\r\n            srcy1 = 0;\r\n            srcy2 = 8;\r\n\r\n            if (this.sprY[i] + 8 < startscan) {\r\n              srcy1 = startscan - (this.sprY[i] + 8 + 1);\r\n            }\r\n\r\n            if (this.sprY[i] + 16 > startscan + scancount) {\r\n              srcy2 = startscan + scancount - (this.sprY[i] + 8);\r\n            }\r\n\r\n            this.ptTile[top + (this.vertFlip[i] ? 0 : 1)].render(\r\n              this.buffer,\r\n              0,\r\n              srcy1,\r\n              8,\r\n              srcy2,\r\n              this.sprX[i],\r\n              this.sprY[i] + 1 + 8,\r\n              this.sprCol[i],\r\n              this.sprPalette,\r\n              this.horiFlip[i],\r\n              this.vertFlip[i],\r\n              i,\r\n              this.pixrendered\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  checkSprite0: function (scan) {\r\n    this.spr0HitX = -1;\r\n    this.spr0HitY = -1;\r\n\r\n    var toffset;\r\n    var tIndexAdd = this.f_spPatternTable === 0 ? 0 : 256;\r\n    var x, y, t, i;\r\n    var bufferIndex;\r\n\r\n    x = this.sprX[0];\r\n    y = this.sprY[0] + 1;\r\n\r\n    if (this.f_spriteSize === 0) {\r\n      // 8x8 sprites.\r\n\r\n      // Check range:\r\n      if (y <= scan && y + 8 > scan && x >= -7 && x < 256) {\r\n        // Sprite is in range.\r\n        // Draw scanline:\r\n        t = this.ptTile[this.sprTile[0] + tIndexAdd];\r\n\r\n        if (this.vertFlip[0]) {\r\n          toffset = 7 - (scan - y);\r\n        } else {\r\n          toffset = scan - y;\r\n        }\r\n        toffset *= 8;\r\n\r\n        bufferIndex = scan * 256 + x;\r\n        if (this.horiFlip[0]) {\r\n          for (i = 7; i >= 0; i--) {\r\n            if (x >= 0 && x < 256) {\r\n              if (\r\n                bufferIndex >= 0 &&\r\n                bufferIndex < 61440 &&\r\n                this.pixrendered[bufferIndex] !== 0\r\n              ) {\r\n                if (t.pix[toffset + i] !== 0) {\r\n                  this.spr0HitX = bufferIndex % 256;\r\n                  this.spr0HitY = scan;\r\n                  return true;\r\n                }\r\n              }\r\n            }\r\n            x++;\r\n            bufferIndex++;\r\n          }\r\n        } else {\r\n          for (i = 0; i < 8; i++) {\r\n            if (x >= 0 && x < 256) {\r\n              if (\r\n                bufferIndex >= 0 &&\r\n                bufferIndex < 61440 &&\r\n                this.pixrendered[bufferIndex] !== 0\r\n              ) {\r\n                if (t.pix[toffset + i] !== 0) {\r\n                  this.spr0HitX = bufferIndex % 256;\r\n                  this.spr0HitY = scan;\r\n                  return true;\r\n                }\r\n              }\r\n            }\r\n            x++;\r\n            bufferIndex++;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // 8x16 sprites:\r\n\r\n      // Check range:\r\n      if (y <= scan && y + 16 > scan && x >= -7 && x < 256) {\r\n        // Sprite is in range.\r\n        // Draw scanline:\r\n\r\n        if (this.vertFlip[0]) {\r\n          toffset = 15 - (scan - y);\r\n        } else {\r\n          toffset = scan - y;\r\n        }\r\n\r\n        if (toffset < 8) {\r\n          // first half of sprite.\r\n          t = this.ptTile[\r\n            this.sprTile[0] +\r\n              (this.vertFlip[0] ? 1 : 0) +\r\n              ((this.sprTile[0] & 1) !== 0 ? 255 : 0)\r\n          ];\r\n        } else {\r\n          // second half of sprite.\r\n          t = this.ptTile[\r\n            this.sprTile[0] +\r\n              (this.vertFlip[0] ? 0 : 1) +\r\n              ((this.sprTile[0] & 1) !== 0 ? 255 : 0)\r\n          ];\r\n          if (this.vertFlip[0]) {\r\n            toffset = 15 - toffset;\r\n          } else {\r\n            toffset -= 8;\r\n          }\r\n        }\r\n        toffset *= 8;\r\n\r\n        bufferIndex = scan * 256 + x;\r\n        if (this.horiFlip[0]) {\r\n          for (i = 7; i >= 0; i--) {\r\n            if (x >= 0 && x < 256) {\r\n              if (\r\n                bufferIndex >= 0 &&\r\n                bufferIndex < 61440 &&\r\n                this.pixrendered[bufferIndex] !== 0\r\n              ) {\r\n                if (t.pix[toffset + i] !== 0) {\r\n                  this.spr0HitX = bufferIndex % 256;\r\n                  this.spr0HitY = scan;\r\n                  return true;\r\n                }\r\n              }\r\n            }\r\n            x++;\r\n            bufferIndex++;\r\n          }\r\n        } else {\r\n          for (i = 0; i < 8; i++) {\r\n            if (x >= 0 && x < 256) {\r\n              if (\r\n                bufferIndex >= 0 &&\r\n                bufferIndex < 61440 &&\r\n                this.pixrendered[bufferIndex] !== 0\r\n              ) {\r\n                if (t.pix[toffset + i] !== 0) {\r\n                  this.spr0HitX = bufferIndex % 256;\r\n                  this.spr0HitY = scan;\r\n                  return true;\r\n                }\r\n              }\r\n            }\r\n            x++;\r\n            bufferIndex++;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  },\r\n\r\n  // This will write to PPU memory, and\r\n  // update internally buffered data\r\n  // appropriately.\r\n  writeMem: function (address, value) {\r\n    this.vramMem[address] = value;\r\n\r\n    // Update internally buffered data:\r\n    if (address < 0x2000) {\r\n      this.vramMem[address] = value;\r\n      this.patternWrite(address, value);\r\n    } else if (address >= 0x2000 && address < 0x23c0) {\r\n      this.nameTableWrite(this.ntable1[0], address - 0x2000, value);\r\n    } else if (address >= 0x23c0 && address < 0x2400) {\r\n      this.attribTableWrite(this.ntable1[0], address - 0x23c0, value);\r\n    } else if (address >= 0x2400 && address < 0x27c0) {\r\n      this.nameTableWrite(this.ntable1[1], address - 0x2400, value);\r\n    } else if (address >= 0x27c0 && address < 0x2800) {\r\n      this.attribTableWrite(this.ntable1[1], address - 0x27c0, value);\r\n    } else if (address >= 0x2800 && address < 0x2bc0) {\r\n      this.nameTableWrite(this.ntable1[2], address - 0x2800, value);\r\n    } else if (address >= 0x2bc0 && address < 0x2c00) {\r\n      this.attribTableWrite(this.ntable1[2], address - 0x2bc0, value);\r\n    } else if (address >= 0x2c00 && address < 0x2fc0) {\r\n      this.nameTableWrite(this.ntable1[3], address - 0x2c00, value);\r\n    } else if (address >= 0x2fc0 && address < 0x3000) {\r\n      this.attribTableWrite(this.ntable1[3], address - 0x2fc0, value);\r\n    } else if (address >= 0x3f00 && address < 0x3f20) {\r\n      this.updatePalettes();\r\n    }\r\n  },\r\n\r\n  // Reads data from $3f00 to $f20\r\n  // into the two buffered palettes.\r\n  updatePalettes: function () {\r\n    var i;\r\n\r\n    for (i = 0; i < 16; i++) {\r\n      if (this.f_dispType === 0) {\r\n        this.imgPalette[i] = this.palTable.getEntry(\r\n          this.vramMem[0x3f00 + i] & 63\r\n        );\r\n      } else {\r\n        this.imgPalette[i] = this.palTable.getEntry(\r\n          this.vramMem[0x3f00 + i] & 32\r\n        );\r\n      }\r\n    }\r\n    for (i = 0; i < 16; i++) {\r\n      if (this.f_dispType === 0) {\r\n        this.sprPalette[i] = this.palTable.getEntry(\r\n          this.vramMem[0x3f10 + i] & 63\r\n        );\r\n      } else {\r\n        this.sprPalette[i] = this.palTable.getEntry(\r\n          this.vramMem[0x3f10 + i] & 32\r\n        );\r\n      }\r\n    }\r\n  },\r\n\r\n  // Updates the internal pattern\r\n  // table buffers with this new byte.\r\n  // In vNES, there is a version of this with 4 arguments which isn't used.\r\n  patternWrite: function (address, value) {\r\n    var tileIndex = Math.floor(address / 16);\r\n    var leftOver = address % 16;\r\n    if (leftOver < 8) {\r\n      this.ptTile[tileIndex].setScanline(\r\n        leftOver,\r\n        value,\r\n        this.vramMem[address + 8]\r\n      );\r\n    } else {\r\n      this.ptTile[tileIndex].setScanline(\r\n        leftOver - 8,\r\n        this.vramMem[address - 8],\r\n        value\r\n      );\r\n    }\r\n  },\r\n\r\n  // Updates the internal name table buffers\r\n  // with this new byte.\r\n  nameTableWrite: function (index, address, value) {\r\n    this.nameTable[index].tile[address] = value;\r\n\r\n    // Update Sprite #0 hit:\r\n    //updateSpr0Hit();\r\n    this.checkSprite0(this.scanline - 20);\r\n  },\r\n\r\n  // Updates the internal pattern\r\n  // table buffers with this new attribute\r\n  // table byte.\r\n  attribTableWrite: function (index, address, value) {\r\n    this.nameTable[index].writeAttrib(address, value);\r\n  },\r\n\r\n  // Updates the internally buffered sprite\r\n  // data with this new byte of info.\r\n  spriteRamWriteUpdate: function (address, value) {\r\n    var tIndex = Math.floor(address / 4);\r\n\r\n    if (tIndex === 0) {\r\n      //updateSpr0Hit();\r\n      this.checkSprite0(this.scanline - 20);\r\n    }\r\n\r\n    if (address % 4 === 0) {\r\n      // Y coordinate\r\n      this.sprY[tIndex] = value;\r\n    } else if (address % 4 === 1) {\r\n      // Tile index\r\n      this.sprTile[tIndex] = value;\r\n    } else if (address % 4 === 2) {\r\n      // Attributes\r\n      this.vertFlip[tIndex] = (value & 0x80) !== 0;\r\n      this.horiFlip[tIndex] = (value & 0x40) !== 0;\r\n      this.bgPriority[tIndex] = (value & 0x20) !== 0;\r\n      this.sprCol[tIndex] = (value & 3) << 2;\r\n    } else if (address % 4 === 3) {\r\n      // X coordinate\r\n      this.sprX[tIndex] = value;\r\n    }\r\n  },\r\n\r\n  doNMI: function () {\r\n    // Set VBlank flag:\r\n    this.setStatusFlag(this.STATUS_VBLANK, true);\r\n    //nes.getCpu().doNonMaskableInterrupt();\r\n    this.nes.cpu.requestIrq(this.nes.cpu.IRQ_NMI);\r\n  },\r\n\r\n  isPixelWhite: function (x, y) {\r\n    this.triggerRendering();\r\n    return this.nes.ppu.buffer[(y << 8) + x] === 0xffffff;\r\n  },\r\n\r\n  JSON_PROPERTIES: [\r\n    // Memory\r\n    \"vramMem\",\r\n    \"spriteMem\",\r\n    // Counters\r\n    \"cntFV\",\r\n    \"cntV\",\r\n    \"cntH\",\r\n    \"cntVT\",\r\n    \"cntHT\",\r\n    // Registers\r\n    \"regFV\",\r\n    \"regV\",\r\n    \"regH\",\r\n    \"regVT\",\r\n    \"regHT\",\r\n    \"regFH\",\r\n    \"regS\",\r\n    // VRAM addr\r\n    \"vramAddress\",\r\n    \"vramTmpAddress\",\r\n    // Control/Status registers\r\n    \"f_nmiOnVblank\",\r\n    \"f_spriteSize\",\r\n    \"f_bgPatternTable\",\r\n    \"f_spPatternTable\",\r\n    \"f_addrInc\",\r\n    \"f_nTblAddress\",\r\n    \"f_color\",\r\n    \"f_spVisibility\",\r\n    \"f_bgVisibility\",\r\n    \"f_spClipping\",\r\n    \"f_bgClipping\",\r\n    \"f_dispType\",\r\n    // VRAM I/O\r\n    \"vramBufferedReadValue\",\r\n    \"firstWrite\",\r\n    // Mirroring\r\n    \"currentMirroring\",\r\n    \"vramMirrorTable\",\r\n    \"ntable1\",\r\n    // SPR-RAM I/O\r\n    \"sramAddress\",\r\n    // Sprites. Most sprite data is rebuilt from spriteMem\r\n    \"hitSpr0\",\r\n    // Palettes\r\n    \"sprPalette\",\r\n    \"imgPalette\",\r\n    // Rendering progression\r\n    \"curX\",\r\n    \"scanline\",\r\n    \"lastRenderedScanline\",\r\n    \"curNt\",\r\n    \"scantile\",\r\n    // Used during rendering\r\n    \"attrib\",\r\n    \"buffer\",\r\n    \"bgbuffer\",\r\n    \"pixrendered\",\r\n    // Misc\r\n    \"requestEndFrame\",\r\n    \"nmiOk\",\r\n    \"dummyCycleToggle\",\r\n    \"nmiCounter\",\r\n    \"validTileData\",\r\n    \"scanlineAlreadyRendered\",\r\n  ],\r\n\r\n  toJSON: function () {\r\n    var i;\r\n    var state = utils.toJSON(this);\r\n\r\n    state.nameTable = [];\r\n    for (i = 0; i < this.nameTable.length; i++) {\r\n      state.nameTable[i] = this.nameTable[i].toJSON();\r\n    }\r\n\r\n    state.ptTile = [];\r\n    for (i = 0; i < this.ptTile.length; i++) {\r\n      state.ptTile[i] = this.ptTile[i].toJSON();\r\n    }\r\n\r\n    return state;\r\n  },\r\n\r\n  fromJSON: function (state) {\r\n    var i;\r\n\r\n    utils.fromJSON(this, state);\r\n\r\n    for (i = 0; i < this.nameTable.length; i++) {\r\n      this.nameTable[i].fromJSON(state.nameTable[i]);\r\n    }\r\n\r\n    for (i = 0; i < this.ptTile.length; i++) {\r\n      this.ptTile[i].fromJSON(state.ptTile[i]);\r\n    }\r\n\r\n    // Sprite data:\r\n    for (i = 0; i < this.spriteMem.length; i++) {\r\n      this.spriteRamWriteUpdate(i, this.spriteMem[i]);\r\n    }\r\n  },\r\n};\r\n\r\nvar NameTable = function (width, height, name) {\r\n  this.width = width;\r\n  this.height = height;\r\n  this.name = name;\r\n\r\n  this.tile = new Array(width * height);\r\n  this.attrib = new Array(width * height);\r\n  for (var i = 0; i < width * height; i++) {\r\n    this.tile[i] = 0;\r\n    this.attrib[i] = 0;\r\n  }\r\n};\r\n\r\nNameTable.prototype = {\r\n  getTileIndex: function (x, y) {\r\n    return this.tile[y * this.width + x];\r\n  },\r\n\r\n  getAttrib: function (x, y) {\r\n    return this.attrib[y * this.width + x];\r\n  },\r\n\r\n  writeAttrib: function (index, value) {\r\n    var basex = (index % 8) * 4;\r\n    var basey = Math.floor(index / 8) * 4;\r\n    var add;\r\n    var tx, ty;\r\n    var attindex;\r\n\r\n    for (var sqy = 0; sqy < 2; sqy++) {\r\n      for (var sqx = 0; sqx < 2; sqx++) {\r\n        add = (value >> (2 * (sqy * 2 + sqx))) & 3;\r\n        for (var y = 0; y < 2; y++) {\r\n          for (var x = 0; x < 2; x++) {\r\n            tx = basex + sqx * 2 + x;\r\n            ty = basey + sqy * 2 + y;\r\n            attindex = ty * this.width + tx;\r\n            this.attrib[attindex] = (add << 2) & 12;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  toJSON: function () {\r\n    return {\r\n      tile: this.tile,\r\n      attrib: this.attrib,\r\n    };\r\n  },\r\n\r\n  fromJSON: function (s) {\r\n    this.tile = s.tile;\r\n    this.attrib = s.attrib;\r\n  },\r\n};\r\n\r\nvar PaletteTable = function () {\r\n  this.curTable = new Array(64);\r\n  this.emphTable = new Array(8);\r\n  this.currentEmph = -1;\r\n};\r\n\r\nPaletteTable.prototype = {\r\n  reset: function () {\r\n    this.setEmphasis(0);\r\n  },\r\n\r\n  loadNTSCPalette: function () {\r\n    // prettier-ignore\r\n    this.curTable = [0x525252, 0xB40000, 0xA00000, 0xB1003D, 0x740069, 0x00005B, 0x00005F, 0x001840, 0x002F10, 0x084A08, 0x006700, 0x124200, 0x6D2800, 0x000000, 0x000000, 0x000000, 0xC4D5E7, 0xFF4000, 0xDC0E22, 0xFF476B, 0xD7009F, 0x680AD7, 0x0019BC, 0x0054B1, 0x006A5B, 0x008C03, 0x00AB00, 0x2C8800, 0xA47200, 0x000000, 0x000000, 0x000000, 0xF8F8F8, 0xFFAB3C, 0xFF7981, 0xFF5BC5, 0xFF48F2, 0xDF49FF, 0x476DFF, 0x00B4F7, 0x00E0FF, 0x00E375, 0x03F42B, 0x78B82E, 0xE5E218, 0x787878, 0x000000, 0x000000, 0xFFFFFF, 0xFFF2BE, 0xF8B8B8, 0xF8B8D8, 0xFFB6FF, 0xFFC3FF, 0xC7D1FF, 0x9ADAFF, 0x88EDF8, 0x83FFDD, 0xB8F8B8, 0xF5F8AC, 0xFFFFB0, 0xF8D8F8, 0x000000, 0x000000];\r\n    this.makeTables();\r\n    this.setEmphasis(0);\r\n  },\r\n\r\n  loadPALPalette: function () {\r\n    // prettier-ignore\r\n    this.curTable = [0x525252, 0xB40000, 0xA00000, 0xB1003D, 0x740069, 0x00005B, 0x00005F, 0x001840, 0x002F10, 0x084A08, 0x006700, 0x124200, 0x6D2800, 0x000000, 0x000000, 0x000000, 0xC4D5E7, 0xFF4000, 0xDC0E22, 0xFF476B, 0xD7009F, 0x680AD7, 0x0019BC, 0x0054B1, 0x006A5B, 0x008C03, 0x00AB00, 0x2C8800, 0xA47200, 0x000000, 0x000000, 0x000000, 0xF8F8F8, 0xFFAB3C, 0xFF7981, 0xFF5BC5, 0xFF48F2, 0xDF49FF, 0x476DFF, 0x00B4F7, 0x00E0FF, 0x00E375, 0x03F42B, 0x78B82E, 0xE5E218, 0x787878, 0x000000, 0x000000, 0xFFFFFF, 0xFFF2BE, 0xF8B8B8, 0xF8B8D8, 0xFFB6FF, 0xFFC3FF, 0xC7D1FF, 0x9ADAFF, 0x88EDF8, 0x83FFDD, 0xB8F8B8, 0xF5F8AC, 0xFFFFB0, 0xF8D8F8, 0x000000, 0x000000];\r\n    this.makeTables();\r\n    this.setEmphasis(0);\r\n  },\r\n\r\n  makeTables: function () {\r\n    var r, g, b, col, i, rFactor, gFactor, bFactor;\r\n\r\n    // Calculate a table for each possible emphasis setting:\r\n    for (var emph = 0; emph < 8; emph++) {\r\n      // Determine color component factors:\r\n      rFactor = 1.0;\r\n      gFactor = 1.0;\r\n      bFactor = 1.0;\r\n\r\n      if ((emph & 1) !== 0) {\r\n        rFactor = 0.75;\r\n        bFactor = 0.75;\r\n      }\r\n      if ((emph & 2) !== 0) {\r\n        rFactor = 0.75;\r\n        gFactor = 0.75;\r\n      }\r\n      if ((emph & 4) !== 0) {\r\n        gFactor = 0.75;\r\n        bFactor = 0.75;\r\n      }\r\n\r\n      this.emphTable[emph] = new Array(64);\r\n\r\n      // Calculate table:\r\n      for (i = 0; i < 64; i++) {\r\n        col = this.curTable[i];\r\n        r = Math.floor(this.getRed(col) * rFactor);\r\n        g = Math.floor(this.getGreen(col) * gFactor);\r\n        b = Math.floor(this.getBlue(col) * bFactor);\r\n        this.emphTable[emph][i] = this.getRgb(r, g, b);\r\n      }\r\n    }\r\n  },\r\n\r\n  setEmphasis: function (emph) {\r\n    if (emph !== this.currentEmph) {\r\n      this.currentEmph = emph;\r\n      for (var i = 0; i < 64; i++) {\r\n        this.curTable[i] = this.emphTable[emph][i];\r\n      }\r\n    }\r\n  },\r\n\r\n  getEntry: function (yiq) {\r\n    return this.curTable[yiq];\r\n  },\r\n\r\n  getRed: function (rgb) {\r\n    return (rgb >> 16) & 0xff;\r\n  },\r\n\r\n  getGreen: function (rgb) {\r\n    return (rgb >> 8) & 0xff;\r\n  },\r\n\r\n  getBlue: function (rgb) {\r\n    return rgb & 0xff;\r\n  },\r\n\r\n  getRgb: function (r, g, b) {\r\n    return (r << 16) | (g << 8) | b;\r\n  },\r\n\r\n  loadDefaultPalette: function () {\r\n    this.curTable[0] = this.getRgb(117, 117, 117);\r\n    this.curTable[1] = this.getRgb(39, 27, 143);\r\n    this.curTable[2] = this.getRgb(0, 0, 171);\r\n    this.curTable[3] = this.getRgb(71, 0, 159);\r\n    this.curTable[4] = this.getRgb(143, 0, 119);\r\n    this.curTable[5] = this.getRgb(171, 0, 19);\r\n    this.curTable[6] = this.getRgb(167, 0, 0);\r\n    this.curTable[7] = this.getRgb(127, 11, 0);\r\n    this.curTable[8] = this.getRgb(67, 47, 0);\r\n    this.curTable[9] = this.getRgb(0, 71, 0);\r\n    this.curTable[10] = this.getRgb(0, 81, 0);\r\n    this.curTable[11] = this.getRgb(0, 63, 23);\r\n    this.curTable[12] = this.getRgb(27, 63, 95);\r\n    this.curTable[13] = this.getRgb(0, 0, 0);\r\n    this.curTable[14] = this.getRgb(0, 0, 0);\r\n    this.curTable[15] = this.getRgb(0, 0, 0);\r\n    this.curTable[16] = this.getRgb(188, 188, 188);\r\n    this.curTable[17] = this.getRgb(0, 115, 239);\r\n    this.curTable[18] = this.getRgb(35, 59, 239);\r\n    this.curTable[19] = this.getRgb(131, 0, 243);\r\n    this.curTable[20] = this.getRgb(191, 0, 191);\r\n    this.curTable[21] = this.getRgb(231, 0, 91);\r\n    this.curTable[22] = this.getRgb(219, 43, 0);\r\n    this.curTable[23] = this.getRgb(203, 79, 15);\r\n    this.curTable[24] = this.getRgb(139, 115, 0);\r\n    this.curTable[25] = this.getRgb(0, 151, 0);\r\n    this.curTable[26] = this.getRgb(0, 171, 0);\r\n    this.curTable[27] = this.getRgb(0, 147, 59);\r\n    this.curTable[28] = this.getRgb(0, 131, 139);\r\n    this.curTable[29] = this.getRgb(0, 0, 0);\r\n    this.curTable[30] = this.getRgb(0, 0, 0);\r\n    this.curTable[31] = this.getRgb(0, 0, 0);\r\n    this.curTable[32] = this.getRgb(255, 255, 255);\r\n    this.curTable[33] = this.getRgb(63, 191, 255);\r\n    this.curTable[34] = this.getRgb(95, 151, 255);\r\n    this.curTable[35] = this.getRgb(167, 139, 253);\r\n    this.curTable[36] = this.getRgb(247, 123, 255);\r\n    this.curTable[37] = this.getRgb(255, 119, 183);\r\n    this.curTable[38] = this.getRgb(255, 119, 99);\r\n    this.curTable[39] = this.getRgb(255, 155, 59);\r\n    this.curTable[40] = this.getRgb(243, 191, 63);\r\n    this.curTable[41] = this.getRgb(131, 211, 19);\r\n    this.curTable[42] = this.getRgb(79, 223, 75);\r\n    this.curTable[43] = this.getRgb(88, 248, 152);\r\n    this.curTable[44] = this.getRgb(0, 235, 219);\r\n    this.curTable[45] = this.getRgb(0, 0, 0);\r\n    this.curTable[46] = this.getRgb(0, 0, 0);\r\n    this.curTable[47] = this.getRgb(0, 0, 0);\r\n    this.curTable[48] = this.getRgb(255, 255, 255);\r\n    this.curTable[49] = this.getRgb(171, 231, 255);\r\n    this.curTable[50] = this.getRgb(199, 215, 255);\r\n    this.curTable[51] = this.getRgb(215, 203, 255);\r\n    this.curTable[52] = this.getRgb(255, 199, 255);\r\n    this.curTable[53] = this.getRgb(255, 199, 219);\r\n    this.curTable[54] = this.getRgb(255, 191, 179);\r\n    this.curTable[55] = this.getRgb(255, 219, 171);\r\n    this.curTable[56] = this.getRgb(255, 231, 163);\r\n    this.curTable[57] = this.getRgb(227, 255, 163);\r\n    this.curTable[58] = this.getRgb(171, 243, 191);\r\n    this.curTable[59] = this.getRgb(179, 255, 207);\r\n    this.curTable[60] = this.getRgb(159, 255, 243);\r\n    this.curTable[61] = this.getRgb(0, 0, 0);\r\n    this.curTable[62] = this.getRgb(0, 0, 0);\r\n    this.curTable[63] = this.getRgb(0, 0, 0);\r\n\r\n    this.makeTables();\r\n    this.setEmphasis(0);\r\n  },\r\n};\r\n\r\nexport {PPU};\r\n","import {utils} from './utils.js'\r\n\r\nvar CPU_FREQ_NTSC = 1789772.5; //1789772.72727272d;\r\n// var CPU_FREQ_PAL = 1773447.4;\r\n\r\nvar PAPU = function (nes) {\r\n  this.nes = nes;\r\n\r\n  this.square1 = new ChannelSquare(this, true);\r\n  this.square2 = new ChannelSquare(this, false);\r\n  this.triangle = new ChannelTriangle(this);\r\n  this.noise = new ChannelNoise(this);\r\n  this.dmc = new ChannelDM(this);\r\n\r\n  this.frameIrqCounter = null;\r\n  this.frameIrqCounterMax = 4;\r\n  this.initCounter = 2048;\r\n  this.channelEnableValue = null;\r\n\r\n  this.sampleRate = 44100;\r\n\r\n  this.lengthLookup = null;\r\n  this.dmcFreqLookup = null;\r\n  this.noiseWavelengthLookup = null;\r\n  this.square_table = null;\r\n  this.tnd_table = null;\r\n\r\n  this.frameIrqEnabled = false;\r\n  this.frameIrqActive = null;\r\n  this.frameClockNow = null;\r\n  this.startedPlaying = false;\r\n  this.recordOutput = false;\r\n  this.initingHardware = false;\r\n\r\n  this.masterFrameCounter = null;\r\n  this.derivedFrameCounter = null;\r\n  this.countSequence = null;\r\n  this.sampleTimer = null;\r\n  this.frameTime = null;\r\n  this.sampleTimerMax = null;\r\n  this.sampleCount = null;\r\n  this.triValue = 0;\r\n\r\n  this.smpSquare1 = null;\r\n  this.smpSquare2 = null;\r\n  this.smpTriangle = null;\r\n  this.smpDmc = null;\r\n  this.accCount = null;\r\n\r\n  // DC removal vars:\r\n  this.prevSampleL = 0;\r\n  this.prevSampleR = 0;\r\n  this.smpAccumL = 0;\r\n  this.smpAccumR = 0;\r\n\r\n  // DAC range:\r\n  this.dacRange = 0;\r\n  this.dcValue = 0;\r\n\r\n  // Master volume:\r\n  this.masterVolume = 256;\r\n\r\n  // Stereo positioning:\r\n  this.stereoPosLSquare1 = null;\r\n  this.stereoPosLSquare2 = null;\r\n  this.stereoPosLTriangle = null;\r\n  this.stereoPosLNoise = null;\r\n  this.stereoPosLDMC = null;\r\n  this.stereoPosRSquare1 = null;\r\n  this.stereoPosRSquare2 = null;\r\n  this.stereoPosRTriangle = null;\r\n  this.stereoPosRNoise = null;\r\n  this.stereoPosRDMC = null;\r\n\r\n  this.extraCycles = null;\r\n\r\n  this.maxSample = null;\r\n  this.minSample = null;\r\n\r\n  // Panning:\r\n  this.panning = [80, 170, 100, 150, 128];\r\n  this.setPanning(this.panning);\r\n\r\n  // Initialize lookup tables:\r\n  this.initLengthLookup();\r\n  this.initDmcFrequencyLookup();\r\n  this.initNoiseWavelengthLookup();\r\n  this.initDACtables();\r\n\r\n  // Init sound registers:\r\n  for (var i = 0; i < 0x14; i++) {\r\n    if (i === 0x10) {\r\n      this.writeReg(0x4010, 0x10);\r\n    } else {\r\n      this.writeReg(0x4000 + i, 0);\r\n    }\r\n  }\r\n\r\n  this.reset();\r\n};\r\n\r\nPAPU.prototype = {\r\n  reset: function () {\r\n    this.sampleRate = this.nes.opts.sampleRate;\r\n    this.sampleTimerMax = Math.floor(\r\n      (1024.0 * CPU_FREQ_NTSC * this.nes.opts.preferredFrameRate) /\r\n        (this.sampleRate * 60.0)\r\n    );\r\n\r\n    this.frameTime = Math.floor(\r\n      (14915.0 * this.nes.opts.preferredFrameRate) / 60.0\r\n    );\r\n\r\n    this.sampleTimer = 0;\r\n\r\n    this.updateChannelEnable(0);\r\n    this.masterFrameCounter = 0;\r\n    this.derivedFrameCounter = 0;\r\n    this.countSequence = 0;\r\n    this.sampleCount = 0;\r\n    this.initCounter = 2048;\r\n    this.frameIrqEnabled = false;\r\n    this.initingHardware = false;\r\n\r\n    this.resetCounter();\r\n\r\n    this.square1.reset();\r\n    this.square2.reset();\r\n    this.triangle.reset();\r\n    this.noise.reset();\r\n    this.dmc.reset();\r\n\r\n    this.accCount = 0;\r\n    this.smpSquare1 = 0;\r\n    this.smpSquare2 = 0;\r\n    this.smpTriangle = 0;\r\n    this.smpDmc = 0;\r\n\r\n    this.frameIrqEnabled = false;\r\n    this.frameIrqCounterMax = 4;\r\n\r\n    this.channelEnableValue = 0xff;\r\n    this.startedPlaying = false;\r\n    this.prevSampleL = 0;\r\n    this.prevSampleR = 0;\r\n    this.smpAccumL = 0;\r\n    this.smpAccumR = 0;\r\n\r\n    this.maxSample = -500000;\r\n    this.minSample = 500000;\r\n  },\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  readReg: function (address) {\r\n    // Read 0x4015:\r\n    var tmp = 0;\r\n    tmp |= this.square1.getLengthStatus();\r\n    tmp |= this.square2.getLengthStatus() << 1;\r\n    tmp |= this.triangle.getLengthStatus() << 2;\r\n    tmp |= this.noise.getLengthStatus() << 3;\r\n    tmp |= this.dmc.getLengthStatus() << 4;\r\n    tmp |= (this.frameIrqActive && this.frameIrqEnabled ? 1 : 0) << 6;\r\n    tmp |= this.dmc.getIrqStatus() << 7;\r\n\r\n    this.frameIrqActive = false;\r\n    this.dmc.irqGenerated = false;\r\n\r\n    return tmp & 0xffff;\r\n  },\r\n\r\n  writeReg: function (address, value) {\r\n    if (address >= 0x4000 && address < 0x4004) {\r\n      // Square Wave 1 Control\r\n      this.square1.writeReg(address, value);\r\n      // console.log(\"Square Write\");\r\n    } else if (address >= 0x4004 && address < 0x4008) {\r\n      // Square 2 Control\r\n      this.square2.writeReg(address, value);\r\n    } else if (address >= 0x4008 && address < 0x400c) {\r\n      // Triangle Control\r\n      this.triangle.writeReg(address, value);\r\n    } else if (address >= 0x400c && address <= 0x400f) {\r\n      // Noise Control\r\n      this.noise.writeReg(address, value);\r\n    } else if (address === 0x4010) {\r\n      // DMC Play mode & DMA frequency\r\n      this.dmc.writeReg(address, value);\r\n    } else if (address === 0x4011) {\r\n      // DMC Delta Counter\r\n      this.dmc.writeReg(address, value);\r\n    } else if (address === 0x4012) {\r\n      // DMC Play code starting address\r\n      this.dmc.writeReg(address, value);\r\n    } else if (address === 0x4013) {\r\n      // DMC Play code length\r\n      this.dmc.writeReg(address, value);\r\n    } else if (address === 0x4015) {\r\n      // Channel enable\r\n      this.updateChannelEnable(value);\r\n\r\n      if (value !== 0 && this.initCounter > 0) {\r\n        // Start hardware initialization\r\n        this.initingHardware = true;\r\n      }\r\n\r\n      // DMC/IRQ Status\r\n      this.dmc.writeReg(address, value);\r\n    } else if (address === 0x4017) {\r\n      // Frame counter control\r\n      this.countSequence = (value >> 7) & 1;\r\n      this.masterFrameCounter = 0;\r\n      this.frameIrqActive = false;\r\n\r\n      if (((value >> 6) & 0x1) === 0) {\r\n        this.frameIrqEnabled = true;\r\n      } else {\r\n        this.frameIrqEnabled = false;\r\n      }\r\n\r\n      if (this.countSequence === 0) {\r\n        // NTSC:\r\n        this.frameIrqCounterMax = 4;\r\n        this.derivedFrameCounter = 4;\r\n      } else {\r\n        // PAL:\r\n        this.frameIrqCounterMax = 5;\r\n        this.derivedFrameCounter = 0;\r\n        this.frameCounterTick();\r\n      }\r\n    }\r\n  },\r\n\r\n  resetCounter: function () {\r\n    if (this.countSequence === 0) {\r\n      this.derivedFrameCounter = 4;\r\n    } else {\r\n      this.derivedFrameCounter = 0;\r\n    }\r\n  },\r\n\r\n  // Updates channel enable status.\r\n  // This is done on writes to the\r\n  // channel enable register (0x4015),\r\n  // and when the user enables/disables channels\r\n  // in the GUI.\r\n  updateChannelEnable: function (value) {\r\n    this.channelEnableValue = value & 0xffff;\r\n    this.square1.setEnabled((value & 1) !== 0);\r\n    this.square2.setEnabled((value & 2) !== 0);\r\n    this.triangle.setEnabled((value & 4) !== 0);\r\n    this.noise.setEnabled((value & 8) !== 0);\r\n    this.dmc.setEnabled((value & 16) !== 0);\r\n  },\r\n\r\n  // Clocks the frame counter. It should be clocked at\r\n  // twice the cpu speed, so the cycles will be\r\n  // divided by 2 for those counters that are\r\n  // clocked at cpu speed.\r\n  clockFrameCounter: function (nCycles) {\r\n    if (this.initCounter > 0) {\r\n      if (this.initingHardware) {\r\n        this.initCounter -= nCycles;\r\n        if (this.initCounter <= 0) {\r\n          this.initingHardware = false;\r\n        }\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Don't process ticks beyond next sampling:\r\n    nCycles += this.extraCycles;\r\n    var maxCycles = this.sampleTimerMax - this.sampleTimer;\r\n    if (nCycles << 10 > maxCycles) {\r\n      this.extraCycles = ((nCycles << 10) - maxCycles) >> 10;\r\n      nCycles -= this.extraCycles;\r\n    } else {\r\n      this.extraCycles = 0;\r\n    }\r\n\r\n    var dmc = this.dmc;\r\n    var triangle = this.triangle;\r\n    var square1 = this.square1;\r\n    var square2 = this.square2;\r\n    var noise = this.noise;\r\n\r\n    // Clock DMC:\r\n    if (dmc.isEnabled) {\r\n      dmc.shiftCounter -= nCycles << 3;\r\n      while (dmc.shiftCounter <= 0 && dmc.dmaFrequency > 0) {\r\n        dmc.shiftCounter += dmc.dmaFrequency;\r\n        dmc.clockDmc();\r\n      }\r\n    }\r\n\r\n    // Clock Triangle channel Prog timer:\r\n    if (triangle.progTimerMax > 0) {\r\n      triangle.progTimerCount -= nCycles;\r\n      while (triangle.progTimerCount <= 0) {\r\n        triangle.progTimerCount += triangle.progTimerMax + 1;\r\n        if (triangle.linearCounter > 0 && triangle.lengthCounter > 0) {\r\n          triangle.triangleCounter++;\r\n          triangle.triangleCounter &= 0x1f;\r\n\r\n          if (triangle.isEnabled) {\r\n            if (triangle.triangleCounter >= 0x10) {\r\n              // Normal value.\r\n              triangle.sampleValue = triangle.triangleCounter & 0xf;\r\n            } else {\r\n              // Inverted value.\r\n              triangle.sampleValue = 0xf - (triangle.triangleCounter & 0xf);\r\n            }\r\n            triangle.sampleValue <<= 4;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Clock Square channel 1 Prog timer:\r\n    square1.progTimerCount -= nCycles;\r\n    if (square1.progTimerCount <= 0) {\r\n      square1.progTimerCount += (square1.progTimerMax + 1) << 1;\r\n\r\n      square1.squareCounter++;\r\n      square1.squareCounter &= 0x7;\r\n      square1.updateSampleValue();\r\n    }\r\n\r\n    // Clock Square channel 2 Prog timer:\r\n    square2.progTimerCount -= nCycles;\r\n    if (square2.progTimerCount <= 0) {\r\n      square2.progTimerCount += (square2.progTimerMax + 1) << 1;\r\n\r\n      square2.squareCounter++;\r\n      square2.squareCounter &= 0x7;\r\n      square2.updateSampleValue();\r\n    }\r\n\r\n    // Clock noise channel Prog timer:\r\n    var acc_c = nCycles;\r\n    if (noise.progTimerCount - acc_c > 0) {\r\n      // Do all cycles at once:\r\n      noise.progTimerCount -= acc_c;\r\n      noise.accCount += acc_c;\r\n      noise.accValue += acc_c * noise.sampleValue;\r\n    } else {\r\n      // Slow-step:\r\n      while (acc_c-- > 0) {\r\n        if (--noise.progTimerCount <= 0 && noise.progTimerMax > 0) {\r\n          // Update noise shift register:\r\n          noise.shiftReg <<= 1;\r\n          noise.tmp =\r\n            ((noise.shiftReg << (noise.randomMode === 0 ? 1 : 6)) ^\r\n              noise.shiftReg) &\r\n            0x8000;\r\n          if (noise.tmp !== 0) {\r\n            // Sample value must be 0.\r\n            noise.shiftReg |= 0x01;\r\n            noise.randomBit = 0;\r\n            noise.sampleValue = 0;\r\n          } else {\r\n            // Find sample value:\r\n            noise.randomBit = 1;\r\n            if (noise.isEnabled && noise.lengthCounter > 0) {\r\n              noise.sampleValue = noise.masterVolume;\r\n            } else {\r\n              noise.sampleValue = 0;\r\n            }\r\n          }\r\n\r\n          noise.progTimerCount += noise.progTimerMax;\r\n        }\r\n\r\n        noise.accValue += noise.sampleValue;\r\n        noise.accCount++;\r\n      }\r\n    }\r\n\r\n    // Frame IRQ handling:\r\n    if (this.frameIrqEnabled && this.frameIrqActive) {\r\n      this.nes.cpu.requestIrq(this.nes.cpu.IRQ_NORMAL);\r\n    }\r\n\r\n    // Clock frame counter at double CPU speed:\r\n    this.masterFrameCounter += nCycles << 1;\r\n    if (this.masterFrameCounter >= this.frameTime) {\r\n      // 240Hz tick:\r\n      this.masterFrameCounter -= this.frameTime;\r\n      this.frameCounterTick();\r\n    }\r\n\r\n    // Accumulate sample value:\r\n    this.accSample(nCycles);\r\n\r\n    // Clock sample timer:\r\n    this.sampleTimer += nCycles << 10;\r\n    if (this.sampleTimer >= this.sampleTimerMax) {\r\n      // Sample channels:\r\n      this.sample();\r\n      this.sampleTimer -= this.sampleTimerMax;\r\n    }\r\n  },\r\n\r\n  accSample: function (cycles) {\r\n    // Special treatment for triangle channel - need to interpolate.\r\n    if (this.triangle.sampleCondition) {\r\n      this.triValue = Math.floor(\r\n        (this.triangle.progTimerCount << 4) / (this.triangle.progTimerMax + 1)\r\n      );\r\n      if (this.triValue > 16) {\r\n        this.triValue = 16;\r\n      }\r\n      if (this.triangle.triangleCounter >= 16) {\r\n        this.triValue = 16 - this.triValue;\r\n      }\r\n\r\n      // Add non-interpolated sample value:\r\n      this.triValue += this.triangle.sampleValue;\r\n    }\r\n\r\n    // Now sample normally:\r\n    if (cycles === 2) {\r\n      this.smpTriangle += this.triValue << 1;\r\n      this.smpDmc += this.dmc.sample << 1;\r\n      this.smpSquare1 += this.square1.sampleValue << 1;\r\n      this.smpSquare2 += this.square2.sampleValue << 1;\r\n      this.accCount += 2;\r\n    } else if (cycles === 4) {\r\n      this.smpTriangle += this.triValue << 2;\r\n      this.smpDmc += this.dmc.sample << 2;\r\n      this.smpSquare1 += this.square1.sampleValue << 2;\r\n      this.smpSquare2 += this.square2.sampleValue << 2;\r\n      this.accCount += 4;\r\n    } else {\r\n      this.smpTriangle += cycles * this.triValue;\r\n      this.smpDmc += cycles * this.dmc.sample;\r\n      this.smpSquare1 += cycles * this.square1.sampleValue;\r\n      this.smpSquare2 += cycles * this.square2.sampleValue;\r\n      this.accCount += cycles;\r\n    }\r\n  },\r\n\r\n  frameCounterTick: function () {\r\n    this.derivedFrameCounter++;\r\n    if (this.derivedFrameCounter >= this.frameIrqCounterMax) {\r\n      this.derivedFrameCounter = 0;\r\n    }\r\n\r\n    if (this.derivedFrameCounter === 1 || this.derivedFrameCounter === 3) {\r\n      // Clock length & sweep:\r\n      this.triangle.clockLengthCounter();\r\n      this.square1.clockLengthCounter();\r\n      this.square2.clockLengthCounter();\r\n      this.noise.clockLengthCounter();\r\n      this.square1.clockSweep();\r\n      this.square2.clockSweep();\r\n    }\r\n\r\n    if (this.derivedFrameCounter >= 0 && this.derivedFrameCounter < 4) {\r\n      // Clock linear & decay:\r\n      this.square1.clockEnvDecay();\r\n      this.square2.clockEnvDecay();\r\n      this.noise.clockEnvDecay();\r\n      this.triangle.clockLinearCounter();\r\n    }\r\n\r\n    if (this.derivedFrameCounter === 3 && this.countSequence === 0) {\r\n      // Enable IRQ:\r\n      this.frameIrqActive = true;\r\n    }\r\n\r\n    // End of 240Hz tick\r\n  },\r\n\r\n  // Samples the channels, mixes the output together, then writes to buffer.\r\n  sample: function () {\r\n    var sq_index, tnd_index;\r\n\r\n    if (this.accCount > 0) {\r\n      this.smpSquare1 <<= 4;\r\n      this.smpSquare1 = Math.floor(this.smpSquare1 / this.accCount);\r\n\r\n      this.smpSquare2 <<= 4;\r\n      this.smpSquare2 = Math.floor(this.smpSquare2 / this.accCount);\r\n\r\n      this.smpTriangle = Math.floor(this.smpTriangle / this.accCount);\r\n\r\n      this.smpDmc <<= 4;\r\n      this.smpDmc = Math.floor(this.smpDmc / this.accCount);\r\n\r\n      this.accCount = 0;\r\n    } else {\r\n      this.smpSquare1 = this.square1.sampleValue << 4;\r\n      this.smpSquare2 = this.square2.sampleValue << 4;\r\n      this.smpTriangle = this.triangle.sampleValue;\r\n      this.smpDmc = this.dmc.sample << 4;\r\n    }\r\n\r\n    var smpNoise = Math.floor((this.noise.accValue << 4) / this.noise.accCount);\r\n    this.noise.accValue = smpNoise >> 4;\r\n    this.noise.accCount = 1;\r\n\r\n    // Stereo sound.\r\n\r\n    // Left channel:\r\n    sq_index =\r\n      (this.smpSquare1 * this.stereoPosLSquare1 +\r\n        this.smpSquare2 * this.stereoPosLSquare2) >>\r\n      8;\r\n    tnd_index =\r\n      (3 * this.smpTriangle * this.stereoPosLTriangle +\r\n        (smpNoise << 1) * this.stereoPosLNoise +\r\n        this.smpDmc * this.stereoPosLDMC) >>\r\n      8;\r\n    if (sq_index >= this.square_table.length) {\r\n      sq_index = this.square_table.length - 1;\r\n    }\r\n    if (tnd_index >= this.tnd_table.length) {\r\n      tnd_index = this.tnd_table.length - 1;\r\n    }\r\n    var sampleValueL =\r\n      this.square_table[sq_index] + this.tnd_table[tnd_index] - this.dcValue;\r\n\r\n    // Right channel:\r\n    sq_index =\r\n      (this.smpSquare1 * this.stereoPosRSquare1 +\r\n        this.smpSquare2 * this.stereoPosRSquare2) >>\r\n      8;\r\n    tnd_index =\r\n      (3 * this.smpTriangle * this.stereoPosRTriangle +\r\n        (smpNoise << 1) * this.stereoPosRNoise +\r\n        this.smpDmc * this.stereoPosRDMC) >>\r\n      8;\r\n    if (sq_index >= this.square_table.length) {\r\n      sq_index = this.square_table.length - 1;\r\n    }\r\n    if (tnd_index >= this.tnd_table.length) {\r\n      tnd_index = this.tnd_table.length - 1;\r\n    }\r\n    var sampleValueR =\r\n      this.square_table[sq_index] + this.tnd_table[tnd_index] - this.dcValue;\r\n\r\n    // Remove DC from left channel:\r\n    var smpDiffL = sampleValueL - this.prevSampleL;\r\n    this.prevSampleL += smpDiffL;\r\n    this.smpAccumL += smpDiffL - (this.smpAccumL >> 10);\r\n    sampleValueL = this.smpAccumL;\r\n\r\n    // Remove DC from right channel:\r\n    var smpDiffR = sampleValueR - this.prevSampleR;\r\n    this.prevSampleR += smpDiffR;\r\n    this.smpAccumR += smpDiffR - (this.smpAccumR >> 10);\r\n    sampleValueR = this.smpAccumR;\r\n\r\n    // Write:\r\n    if (sampleValueL > this.maxSample) {\r\n      this.maxSample = sampleValueL;\r\n    }\r\n    if (sampleValueL < this.minSample) {\r\n      this.minSample = sampleValueL;\r\n    }\r\n\r\n    if (this.nes.opts.onAudioSample) {\r\n      this.nes.opts.onAudioSample(sampleValueL / 32768, sampleValueR / 32768);\r\n    }\r\n\r\n    // Reset sampled values:\r\n    this.smpSquare1 = 0;\r\n    this.smpSquare2 = 0;\r\n    this.smpTriangle = 0;\r\n    this.smpDmc = 0;\r\n  },\r\n\r\n  getLengthMax: function (value) {\r\n    return this.lengthLookup[value >> 3];\r\n  },\r\n\r\n  getDmcFrequency: function (value) {\r\n    if (value >= 0 && value < 0x10) {\r\n      return this.dmcFreqLookup[value];\r\n    }\r\n    return 0;\r\n  },\r\n\r\n  getNoiseWaveLength: function (value) {\r\n    if (value >= 0 && value < 0x10) {\r\n      return this.noiseWavelengthLookup[value];\r\n    }\r\n    return 0;\r\n  },\r\n\r\n  setPanning: function (pos) {\r\n    for (var i = 0; i < 5; i++) {\r\n      this.panning[i] = pos[i];\r\n    }\r\n    this.updateStereoPos();\r\n  },\r\n\r\n  setMasterVolume: function (value) {\r\n    if (value < 0) {\r\n      value = 0;\r\n    }\r\n    if (value > 256) {\r\n      value = 256;\r\n    }\r\n    this.masterVolume = value;\r\n    this.updateStereoPos();\r\n  },\r\n\r\n  updateStereoPos: function () {\r\n    this.stereoPosLSquare1 = (this.panning[0] * this.masterVolume) >> 8;\r\n    this.stereoPosLSquare2 = (this.panning[1] * this.masterVolume) >> 8;\r\n    this.stereoPosLTriangle = (this.panning[2] * this.masterVolume) >> 8;\r\n    this.stereoPosLNoise = (this.panning[3] * this.masterVolume) >> 8;\r\n    this.stereoPosLDMC = (this.panning[4] * this.masterVolume) >> 8;\r\n\r\n    this.stereoPosRSquare1 = this.masterVolume - this.stereoPosLSquare1;\r\n    this.stereoPosRSquare2 = this.masterVolume - this.stereoPosLSquare2;\r\n    this.stereoPosRTriangle = this.masterVolume - this.stereoPosLTriangle;\r\n    this.stereoPosRNoise = this.masterVolume - this.stereoPosLNoise;\r\n    this.stereoPosRDMC = this.masterVolume - this.stereoPosLDMC;\r\n  },\r\n\r\n  initLengthLookup: function () {\r\n    // prettier-ignore\r\n    this.lengthLookup = [\r\n            0x0A, 0xFE,\r\n            0x14, 0x02,\r\n            0x28, 0x04,\r\n            0x50, 0x06,\r\n            0xA0, 0x08,\r\n            0x3C, 0x0A,\r\n            0x0E, 0x0C,\r\n            0x1A, 0x0E,\r\n            0x0C, 0x10,\r\n            0x18, 0x12,\r\n            0x30, 0x14,\r\n            0x60, 0x16,\r\n            0xC0, 0x18,\r\n            0x48, 0x1A,\r\n            0x10, 0x1C,\r\n            0x20, 0x1E\r\n        ];\r\n  },\r\n\r\n  initDmcFrequencyLookup: function () {\r\n    this.dmcFreqLookup = new Array(16);\r\n\r\n    this.dmcFreqLookup[0x0] = 0xd60;\r\n    this.dmcFreqLookup[0x1] = 0xbe0;\r\n    this.dmcFreqLookup[0x2] = 0xaa0;\r\n    this.dmcFreqLookup[0x3] = 0xa00;\r\n    this.dmcFreqLookup[0x4] = 0x8f0;\r\n    this.dmcFreqLookup[0x5] = 0x7f0;\r\n    this.dmcFreqLookup[0x6] = 0x710;\r\n    this.dmcFreqLookup[0x7] = 0x6b0;\r\n    this.dmcFreqLookup[0x8] = 0x5f0;\r\n    this.dmcFreqLookup[0x9] = 0x500;\r\n    this.dmcFreqLookup[0xa] = 0x470;\r\n    this.dmcFreqLookup[0xb] = 0x400;\r\n    this.dmcFreqLookup[0xc] = 0x350;\r\n    this.dmcFreqLookup[0xd] = 0x2a0;\r\n    this.dmcFreqLookup[0xe] = 0x240;\r\n    this.dmcFreqLookup[0xf] = 0x1b0;\r\n    //for(int i=0;i<16;i++)dmcFreqLookup[i]/=8;\r\n  },\r\n\r\n  initNoiseWavelengthLookup: function () {\r\n    this.noiseWavelengthLookup = new Array(16);\r\n\r\n    this.noiseWavelengthLookup[0x0] = 0x004;\r\n    this.noiseWavelengthLookup[0x1] = 0x008;\r\n    this.noiseWavelengthLookup[0x2] = 0x010;\r\n    this.noiseWavelengthLookup[0x3] = 0x020;\r\n    this.noiseWavelengthLookup[0x4] = 0x040;\r\n    this.noiseWavelengthLookup[0x5] = 0x060;\r\n    this.noiseWavelengthLookup[0x6] = 0x080;\r\n    this.noiseWavelengthLookup[0x7] = 0x0a0;\r\n    this.noiseWavelengthLookup[0x8] = 0x0ca;\r\n    this.noiseWavelengthLookup[0x9] = 0x0fe;\r\n    this.noiseWavelengthLookup[0xa] = 0x17c;\r\n    this.noiseWavelengthLookup[0xb] = 0x1fc;\r\n    this.noiseWavelengthLookup[0xc] = 0x2fa;\r\n    this.noiseWavelengthLookup[0xd] = 0x3f8;\r\n    this.noiseWavelengthLookup[0xe] = 0x7f2;\r\n    this.noiseWavelengthLookup[0xf] = 0xfe4;\r\n  },\r\n\r\n  initDACtables: function () {\r\n    var value, ival, i;\r\n    var max_sqr = 0;\r\n    var max_tnd = 0;\r\n\r\n    this.square_table = new Array(32 * 16);\r\n    this.tnd_table = new Array(204 * 16);\r\n\r\n    for (i = 0; i < 32 * 16; i++) {\r\n      value = 95.52 / (8128.0 / (i / 16.0) + 100.0);\r\n      value *= 0.98411;\r\n      value *= 50000.0;\r\n      ival = Math.floor(value);\r\n\r\n      this.square_table[i] = ival;\r\n      if (ival > max_sqr) {\r\n        max_sqr = ival;\r\n      }\r\n    }\r\n\r\n    for (i = 0; i < 204 * 16; i++) {\r\n      value = 163.67 / (24329.0 / (i / 16.0) + 100.0);\r\n      value *= 0.98411;\r\n      value *= 50000.0;\r\n      ival = Math.floor(value);\r\n\r\n      this.tnd_table[i] = ival;\r\n      if (ival > max_tnd) {\r\n        max_tnd = ival;\r\n      }\r\n    }\r\n\r\n    this.dacRange = max_sqr + max_tnd;\r\n    this.dcValue = this.dacRange / 2;\r\n  },\r\n\r\n  JSON_PROPERTIES: [\r\n    \"frameIrqCounter\",\r\n    \"frameIrqCounterMax\",\r\n    \"initCounter\",\r\n    \"channelEnableValue\",\r\n    \"sampleRate\",\r\n    \"frameIrqEnabled\",\r\n    \"frameIrqActive\",\r\n    \"frameClockNow\",\r\n    \"startedPlaying\",\r\n    \"recordOutput\",\r\n    \"initingHardware\",\r\n    \"masterFrameCounter\",\r\n    \"derivedFrameCounter\",\r\n    \"countSequence\",\r\n    \"sampleTimer\",\r\n    \"frameTime\",\r\n    \"sampleTimerMax\",\r\n    \"sampleCount\",\r\n    \"triValue\",\r\n    \"smpSquare1\",\r\n    \"smpSquare2\",\r\n    \"smpTriangle\",\r\n    \"smpDmc\",\r\n    \"accCount\",\r\n    \"prevSampleL\",\r\n    \"prevSampleR\",\r\n    \"smpAccumL\",\r\n    \"smpAccumR\",\r\n    \"masterVolume\",\r\n    \"stereoPosLSquare1\",\r\n    \"stereoPosLSquare2\",\r\n    \"stereoPosLTriangle\",\r\n    \"stereoPosLNoise\",\r\n    \"stereoPosLDMC\",\r\n    \"stereoPosRSquare1\",\r\n    \"stereoPosRSquare2\",\r\n    \"stereoPosRTriangle\",\r\n    \"stereoPosRNoise\",\r\n    \"stereoPosRDMC\",\r\n    \"extraCycles\",\r\n    \"maxSample\",\r\n    \"minSample\",\r\n    \"panning\",\r\n  ],\r\n\r\n  toJSON: function () {\r\n    let obj = utils.toJSON(this);\r\n    obj.dmc = this.dmc.toJSON();\r\n    obj.noise = this.noise.toJSON();\r\n    obj.square1 = this.square1.toJSON();\r\n    obj.square2 = this.square2.toJSON();\r\n    obj.triangle = this.triangle.toJSON();\r\n    return obj;\r\n  },\r\n\r\n  fromJSON: function (s) {\r\n    utils.fromJSON(this, s);\r\n    this.dmc.fromJSON(s.dmc);\r\n    this.noise.fromJSON(s.noise);\r\n    this.square1.fromJSON(s.square1);\r\n    this.square2.fromJSON(s.square2);\r\n    this.triangle.fromJSON(s.triangle);\r\n  },\r\n};\r\n\r\nvar ChannelDM = function (papu) {\r\n  this.papu = papu;\r\n\r\n  this.MODE_NORMAL = 0;\r\n  this.MODE_LOOP = 1;\r\n  this.MODE_IRQ = 2;\r\n\r\n  this.isEnabled = null;\r\n  this.hasSample = null;\r\n  this.irqGenerated = false;\r\n\r\n  this.playMode = null;\r\n  this.dmaFrequency = null;\r\n  this.dmaCounter = null;\r\n  this.deltaCounter = null;\r\n  this.playStartAddress = null;\r\n  this.playAddress = null;\r\n  this.playLength = null;\r\n  this.playLengthCounter = null;\r\n  this.shiftCounter = null;\r\n  this.reg4012 = null;\r\n  this.reg4013 = null;\r\n  this.sample = null;\r\n  this.dacLsb = null;\r\n  this.data = null;\r\n\r\n  this.reset();\r\n};\r\n\r\nChannelDM.prototype = {\r\n  clockDmc: function () {\r\n    // Only alter DAC value if the sample buffer has data:\r\n    if (this.hasSample) {\r\n      if ((this.data & 1) === 0) {\r\n        // Decrement delta:\r\n        if (this.deltaCounter > 0) {\r\n          this.deltaCounter--;\r\n        }\r\n      } else {\r\n        // Increment delta:\r\n        if (this.deltaCounter < 63) {\r\n          this.deltaCounter++;\r\n        }\r\n      }\r\n\r\n      // Update sample value:\r\n      this.sample = this.isEnabled ? (this.deltaCounter << 1) + this.dacLsb : 0;\r\n\r\n      // Update shift register:\r\n      this.data >>= 1;\r\n    }\r\n\r\n    this.dmaCounter--;\r\n    if (this.dmaCounter <= 0) {\r\n      // No more sample bits.\r\n      this.hasSample = false;\r\n      this.endOfSample();\r\n      this.dmaCounter = 8;\r\n    }\r\n\r\n    if (this.irqGenerated) {\r\n      this.papu.nes.cpu.requestIrq(this.papu.nes.cpu.IRQ_NORMAL);\r\n    }\r\n  },\r\n\r\n  endOfSample: function () {\r\n    if (this.playLengthCounter === 0 && this.playMode === this.MODE_LOOP) {\r\n      // Start from beginning of sample:\r\n      this.playAddress = this.playStartAddress;\r\n      this.playLengthCounter = this.playLength;\r\n    }\r\n\r\n    if (this.playLengthCounter > 0) {\r\n      // Fetch next sample:\r\n      this.nextSample();\r\n\r\n      if (this.playLengthCounter === 0) {\r\n        // Last byte of sample fetched, generate IRQ:\r\n        if (this.playMode === this.MODE_IRQ) {\r\n          // Generate IRQ:\r\n          this.irqGenerated = true;\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  nextSample: function () {\r\n    // Fetch byte:\r\n    this.data = this.papu.nes.mmap.load(this.playAddress);\r\n    this.papu.nes.cpu.haltCycles(4);\r\n\r\n    this.playLengthCounter--;\r\n    this.playAddress++;\r\n    if (this.playAddress > 0xffff) {\r\n      this.playAddress = 0x8000;\r\n    }\r\n\r\n    this.hasSample = true;\r\n  },\r\n\r\n  writeReg: function (address, value) {\r\n    if (address === 0x4010) {\r\n      // Play mode, DMA Frequency\r\n      if (value >> 6 === 0) {\r\n        this.playMode = this.MODE_NORMAL;\r\n      } else if (((value >> 6) & 1) === 1) {\r\n        this.playMode = this.MODE_LOOP;\r\n      } else if (value >> 6 === 2) {\r\n        this.playMode = this.MODE_IRQ;\r\n      }\r\n\r\n      if ((value & 0x80) === 0) {\r\n        this.irqGenerated = false;\r\n      }\r\n\r\n      this.dmaFrequency = this.papu.getDmcFrequency(value & 0xf);\r\n    } else if (address === 0x4011) {\r\n      // Delta counter load register:\r\n      this.deltaCounter = (value >> 1) & 63;\r\n      this.dacLsb = value & 1;\r\n      this.sample = (this.deltaCounter << 1) + this.dacLsb; // update sample value\r\n    } else if (address === 0x4012) {\r\n      // DMA address load register\r\n      this.playStartAddress = (value << 6) | 0x0c000;\r\n      this.playAddress = this.playStartAddress;\r\n      this.reg4012 = value;\r\n    } else if (address === 0x4013) {\r\n      // Length of play code\r\n      this.playLength = (value << 4) + 1;\r\n      this.playLengthCounter = this.playLength;\r\n      this.reg4013 = value;\r\n    } else if (address === 0x4015) {\r\n      // DMC/IRQ Status\r\n      if (((value >> 4) & 1) === 0) {\r\n        // Disable:\r\n        this.playLengthCounter = 0;\r\n      } else {\r\n        // Restart:\r\n        this.playAddress = this.playStartAddress;\r\n        this.playLengthCounter = this.playLength;\r\n      }\r\n      this.irqGenerated = false;\r\n    }\r\n  },\r\n\r\n  setEnabled: function (value) {\r\n    if (!this.isEnabled && value) {\r\n      this.playLengthCounter = this.playLength;\r\n    }\r\n    this.isEnabled = value;\r\n  },\r\n\r\n  getLengthStatus: function () {\r\n    return this.playLengthCounter === 0 || !this.isEnabled ? 0 : 1;\r\n  },\r\n\r\n  getIrqStatus: function () {\r\n    return this.irqGenerated ? 1 : 0;\r\n  },\r\n\r\n  reset: function () {\r\n    this.isEnabled = false;\r\n    this.irqGenerated = false;\r\n    this.playMode = this.MODE_NORMAL;\r\n    this.dmaFrequency = 0;\r\n    this.dmaCounter = 0;\r\n    this.deltaCounter = 0;\r\n    this.playStartAddress = 0;\r\n    this.playAddress = 0;\r\n    this.playLength = 0;\r\n    this.playLengthCounter = 0;\r\n    this.sample = 0;\r\n    this.dacLsb = 0;\r\n    this.shiftCounter = 0;\r\n    this.reg4012 = 0;\r\n    this.reg4013 = 0;\r\n    this.data = 0;\r\n  },\r\n\r\n  JSON_PROPERTIES: [\r\n    \"MODE_NORMAL\",\r\n    \"MODE_LOOP\",\r\n    \"MODE_IRQ\",\r\n    \"isEnabled\",\r\n    \"hasSample\",\r\n    \"irqGenerated\",\r\n    \"playMode\",\r\n    \"dmaFrequency\",\r\n    \"dmaCounter\",\r\n    \"deltaCounter\",\r\n    \"playStartAddress\",\r\n    \"playAddress\",\r\n    \"playLength\",\r\n    \"playLengthCounter\",\r\n    \"shiftCounter\",\r\n    \"reg4012\",\r\n    \"reg4013\",\r\n    \"sample\",\r\n    \"dacLsb\",\r\n    \"data\",\r\n  ],\r\n\r\n  toJSON: function () {\r\n    return utils.toJSON(this);\r\n  },\r\n\r\n  fromJSON: function (s) {\r\n    utils.fromJSON(this, s);\r\n  },\r\n};\r\n\r\nvar ChannelNoise = function (papu) {\r\n  this.papu = papu;\r\n\r\n  this.isEnabled = null;\r\n  this.envDecayDisable = null;\r\n  this.envDecayLoopEnable = null;\r\n  this.lengthCounterEnable = null;\r\n  this.envReset = null;\r\n  this.shiftNow = null;\r\n\r\n  this.lengthCounter = null;\r\n  this.progTimerCount = null;\r\n  this.progTimerMax = null;\r\n  this.envDecayRate = null;\r\n  this.envDecayCounter = null;\r\n  this.envVolume = null;\r\n  this.masterVolume = null;\r\n  this.shiftReg = 1 << 14;\r\n  this.randomBit = null;\r\n  this.randomMode = null;\r\n  this.sampleValue = null;\r\n  this.accValue = 0;\r\n  this.accCount = 1;\r\n  this.tmp = null;\r\n\r\n  this.reset();\r\n};\r\n\r\nChannelNoise.prototype = {\r\n  reset: function () {\r\n    this.progTimerCount = 0;\r\n    this.progTimerMax = 0;\r\n    this.isEnabled = false;\r\n    this.lengthCounter = 0;\r\n    this.lengthCounterEnable = false;\r\n    this.envDecayDisable = false;\r\n    this.envDecayLoopEnable = false;\r\n    this.shiftNow = false;\r\n    this.envDecayRate = 0;\r\n    this.envDecayCounter = 0;\r\n    this.envVolume = 0;\r\n    this.masterVolume = 0;\r\n    this.shiftReg = 1;\r\n    this.randomBit = 0;\r\n    this.randomMode = 0;\r\n    this.sampleValue = 0;\r\n    this.tmp = 0;\r\n  },\r\n\r\n  clockLengthCounter: function () {\r\n    if (this.lengthCounterEnable && this.lengthCounter > 0) {\r\n      this.lengthCounter--;\r\n      if (this.lengthCounter === 0) {\r\n        this.updateSampleValue();\r\n      }\r\n    }\r\n  },\r\n\r\n  clockEnvDecay: function () {\r\n    if (this.envReset) {\r\n      // Reset envelope:\r\n      this.envReset = false;\r\n      this.envDecayCounter = this.envDecayRate + 1;\r\n      this.envVolume = 0xf;\r\n    } else if (--this.envDecayCounter <= 0) {\r\n      // Normal handling:\r\n      this.envDecayCounter = this.envDecayRate + 1;\r\n      if (this.envVolume > 0) {\r\n        this.envVolume--;\r\n      } else {\r\n        this.envVolume = this.envDecayLoopEnable ? 0xf : 0;\r\n      }\r\n    }\r\n    if (this.envDecayDisable) {\r\n      this.masterVolume = this.envDecayRate;\r\n    } else {\r\n      this.masterVolume = this.envVolume;\r\n    }\r\n    this.updateSampleValue();\r\n  },\r\n\r\n  updateSampleValue: function () {\r\n    if (this.isEnabled && this.lengthCounter > 0) {\r\n      this.sampleValue = this.randomBit * this.masterVolume;\r\n    }\r\n  },\r\n\r\n  writeReg: function (address, value) {\r\n    if (address === 0x400c) {\r\n      // Volume/Envelope decay:\r\n      this.envDecayDisable = (value & 0x10) !== 0;\r\n      this.envDecayRate = value & 0xf;\r\n      this.envDecayLoopEnable = (value & 0x20) !== 0;\r\n      this.lengthCounterEnable = (value & 0x20) === 0;\r\n      if (this.envDecayDisable) {\r\n        this.masterVolume = this.envDecayRate;\r\n      } else {\r\n        this.masterVolume = this.envVolume;\r\n      }\r\n    } else if (address === 0x400e) {\r\n      // Programmable timer:\r\n      this.progTimerMax = this.papu.getNoiseWaveLength(value & 0xf);\r\n      this.randomMode = value >> 7;\r\n    } else if (address === 0x400f) {\r\n      // Length counter\r\n      this.lengthCounter = this.papu.getLengthMax(value & 248);\r\n      this.envReset = true;\r\n    }\r\n    // Update:\r\n    //updateSampleValue();\r\n  },\r\n\r\n  setEnabled: function (value) {\r\n    this.isEnabled = value;\r\n    if (!value) {\r\n      this.lengthCounter = 0;\r\n    }\r\n    this.updateSampleValue();\r\n  },\r\n\r\n  getLengthStatus: function () {\r\n    return this.lengthCounter === 0 || !this.isEnabled ? 0 : 1;\r\n  },\r\n\r\n  JSON_PROPERTIES: [\r\n    \"isEnabled\",\r\n    \"envDecayDisable\",\r\n    \"envDecayLoopEnable\",\r\n    \"lengthCounterEnable\",\r\n    \"envReset\",\r\n    \"shiftNow\",\r\n    \"lengthCounter\",\r\n    \"progTimerCount\",\r\n    \"progTimerMax\",\r\n    \"envDecayRate\",\r\n    \"envDecayCounter\",\r\n    \"envVolume\",\r\n    \"masterVolume\",\r\n    \"shiftReg\",\r\n    \"randomBit\",\r\n    \"randomMode\",\r\n    \"sampleValue\",\r\n    \"accValue\",\r\n    \"accCount\",\r\n    \"tmp\",\r\n  ],\r\n\r\n  toJSON: function () {\r\n    return utils.toJSON(this);\r\n  },\r\n\r\n  fromJSON: function (s) {\r\n    utils.fromJSON(this, s);\r\n  },\r\n};\r\n\r\nvar ChannelSquare = function (papu, square1) {\r\n  this.papu = papu;\r\n\r\n  // prettier-ignore\r\n  this.dutyLookup = [\r\n         0, 1, 0, 0, 0, 0, 0, 0,\r\n         0, 1, 1, 0, 0, 0, 0, 0,\r\n         0, 1, 1, 1, 1, 0, 0, 0,\r\n         1, 0, 0, 1, 1, 1, 1, 1\r\n    ];\r\n  // prettier-ignore\r\n  this.impLookup = [\r\n         1,-1, 0, 0, 0, 0, 0, 0,\r\n         1, 0,-1, 0, 0, 0, 0, 0,\r\n         1, 0, 0, 0,-1, 0, 0, 0,\r\n        -1, 0, 1, 0, 0, 0, 0, 0\r\n    ];\r\n\r\n  this.sqr1 = square1;\r\n  this.isEnabled = null;\r\n  this.lengthCounterEnable = null;\r\n  this.sweepActive = null;\r\n  this.envDecayDisable = null;\r\n  this.envDecayLoopEnable = null;\r\n  this.envReset = null;\r\n  this.sweepCarry = null;\r\n  this.updateSweepPeriod = null;\r\n\r\n  this.progTimerCount = null;\r\n  this.progTimerMax = null;\r\n  this.lengthCounter = null;\r\n  this.squareCounter = null;\r\n  this.sweepCounter = null;\r\n  this.sweepCounterMax = null;\r\n  this.sweepMode = null;\r\n  this.sweepShiftAmount = null;\r\n  this.envDecayRate = null;\r\n  this.envDecayCounter = null;\r\n  this.envVolume = null;\r\n  this.masterVolume = null;\r\n  this.dutyMode = null;\r\n  this.sweepResult = null;\r\n  this.sampleValue = null;\r\n  this.vol = null;\r\n\r\n  this.reset();\r\n};\r\n\r\nChannelSquare.prototype = {\r\n  reset: function () {\r\n    this.progTimerCount = 0;\r\n    this.progTimerMax = 0;\r\n    this.lengthCounter = 0;\r\n    this.squareCounter = 0;\r\n    this.sweepCounter = 0;\r\n    this.sweepCounterMax = 0;\r\n    this.sweepMode = 0;\r\n    this.sweepShiftAmount = 0;\r\n    this.envDecayRate = 0;\r\n    this.envDecayCounter = 0;\r\n    this.envVolume = 0;\r\n    this.masterVolume = 0;\r\n    this.dutyMode = 0;\r\n    this.vol = 0;\r\n\r\n    this.isEnabled = false;\r\n    this.lengthCounterEnable = false;\r\n    this.sweepActive = false;\r\n    this.sweepCarry = false;\r\n    this.envDecayDisable = false;\r\n    this.envDecayLoopEnable = false;\r\n  },\r\n\r\n  clockLengthCounter: function () {\r\n    if (this.lengthCounterEnable && this.lengthCounter > 0) {\r\n      this.lengthCounter--;\r\n      if (this.lengthCounter === 0) {\r\n        this.updateSampleValue();\r\n      }\r\n    }\r\n  },\r\n\r\n  clockEnvDecay: function () {\r\n    if (this.envReset) {\r\n      // Reset envelope:\r\n      this.envReset = false;\r\n      this.envDecayCounter = this.envDecayRate + 1;\r\n      this.envVolume = 0xf;\r\n    } else if (--this.envDecayCounter <= 0) {\r\n      // Normal handling:\r\n      this.envDecayCounter = this.envDecayRate + 1;\r\n      if (this.envVolume > 0) {\r\n        this.envVolume--;\r\n      } else {\r\n        this.envVolume = this.envDecayLoopEnable ? 0xf : 0;\r\n      }\r\n    }\r\n\r\n    if (this.envDecayDisable) {\r\n      this.masterVolume = this.envDecayRate;\r\n    } else {\r\n      this.masterVolume = this.envVolume;\r\n    }\r\n    this.updateSampleValue();\r\n  },\r\n\r\n  clockSweep: function () {\r\n    if (--this.sweepCounter <= 0) {\r\n      this.sweepCounter = this.sweepCounterMax + 1;\r\n      if (\r\n        this.sweepActive &&\r\n        this.sweepShiftAmount > 0 &&\r\n        this.progTimerMax > 7\r\n      ) {\r\n        // Calculate result from shifter:\r\n        this.sweepCarry = false;\r\n        if (this.sweepMode === 0) {\r\n          this.progTimerMax += this.progTimerMax >> this.sweepShiftAmount;\r\n          if (this.progTimerMax > 4095) {\r\n            this.progTimerMax = 4095;\r\n            this.sweepCarry = true;\r\n          }\r\n        } else {\r\n          this.progTimerMax =\r\n            this.progTimerMax -\r\n            ((this.progTimerMax >> this.sweepShiftAmount) -\r\n              (this.sqr1 ? 1 : 0));\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.updateSweepPeriod) {\r\n      this.updateSweepPeriod = false;\r\n      this.sweepCounter = this.sweepCounterMax + 1;\r\n    }\r\n  },\r\n\r\n  updateSampleValue: function () {\r\n    if (this.isEnabled && this.lengthCounter > 0 && this.progTimerMax > 7) {\r\n      if (\r\n        this.sweepMode === 0 &&\r\n        this.progTimerMax + (this.progTimerMax >> this.sweepShiftAmount) > 4095\r\n      ) {\r\n        //if (this.sweepCarry) {\r\n        this.sampleValue = 0;\r\n      } else {\r\n        this.sampleValue =\r\n          this.masterVolume *\r\n          this.dutyLookup[(this.dutyMode << 3) + this.squareCounter];\r\n      }\r\n    } else {\r\n      this.sampleValue = 0;\r\n    }\r\n  },\r\n\r\n  writeReg: function (address, value) {\r\n    var addrAdd = this.sqr1 ? 0 : 4;\r\n    if (address === 0x4000 + addrAdd) {\r\n      // Volume/Envelope decay:\r\n      this.envDecayDisable = (value & 0x10) !== 0;\r\n      this.envDecayRate = value & 0xf;\r\n      this.envDecayLoopEnable = (value & 0x20) !== 0;\r\n      this.dutyMode = (value >> 6) & 0x3;\r\n      this.lengthCounterEnable = (value & 0x20) === 0;\r\n      if (this.envDecayDisable) {\r\n        this.masterVolume = this.envDecayRate;\r\n      } else {\r\n        this.masterVolume = this.envVolume;\r\n      }\r\n      this.updateSampleValue();\r\n    } else if (address === 0x4001 + addrAdd) {\r\n      // Sweep:\r\n      this.sweepActive = (value & 0x80) !== 0;\r\n      this.sweepCounterMax = (value >> 4) & 7;\r\n      this.sweepMode = (value >> 3) & 1;\r\n      this.sweepShiftAmount = value & 7;\r\n      this.updateSweepPeriod = true;\r\n    } else if (address === 0x4002 + addrAdd) {\r\n      // Programmable timer:\r\n      this.progTimerMax &= 0x700;\r\n      this.progTimerMax |= value;\r\n    } else if (address === 0x4003 + addrAdd) {\r\n      // Programmable timer, length counter\r\n      this.progTimerMax &= 0xff;\r\n      this.progTimerMax |= (value & 0x7) << 8;\r\n\r\n      if (this.isEnabled) {\r\n        this.lengthCounter = this.papu.getLengthMax(value & 0xf8);\r\n      }\r\n\r\n      this.envReset = true;\r\n    }\r\n  },\r\n\r\n  setEnabled: function (value) {\r\n    this.isEnabled = value;\r\n    if (!value) {\r\n      this.lengthCounter = 0;\r\n    }\r\n    this.updateSampleValue();\r\n  },\r\n\r\n  getLengthStatus: function () {\r\n    return this.lengthCounter === 0 || !this.isEnabled ? 0 : 1;\r\n  },\r\n\r\n  JSON_PROPERTIES: [\r\n    \"isEnabled\",\r\n    \"lengthCounterEnable\",\r\n    \"sweepActive\",\r\n    \"envDecayDisable\",\r\n    \"envDecayLoopEnable\",\r\n    \"envReset\",\r\n    \"sweepCarry\",\r\n    \"updateSweepPeriod\",\r\n    \"progTimerCount\",\r\n    \"progTimerMax\",\r\n    \"lengthCounter\",\r\n    \"squareCounter\",\r\n    \"sweepCounter\",\r\n    \"sweepCounterMax\",\r\n    \"sweepMode\",\r\n    \"sweepShiftAmount\",\r\n    \"envDecayRate\",\r\n    \"envDecayCounter\",\r\n    \"envVolume\",\r\n    \"masterVolume\",\r\n    \"dutyMode\",\r\n    \"sweepResult\",\r\n    \"sampleValue\",\r\n    \"vol\",\r\n  ],\r\n\r\n  toJSON: function () {\r\n    return utils.toJSON(this);\r\n  },\r\n\r\n  fromJSON: function (s) {\r\n    utils.fromJSON(this, s);\r\n  },\r\n};\r\n\r\nvar ChannelTriangle = function (papu) {\r\n  this.papu = papu;\r\n\r\n  this.isEnabled = null;\r\n  this.sampleCondition = null;\r\n  this.lengthCounterEnable = null;\r\n  this.lcHalt = null;\r\n  this.lcControl = null;\r\n\r\n  this.progTimerCount = null;\r\n  this.progTimerMax = null;\r\n  this.triangleCounter = null;\r\n  this.lengthCounter = null;\r\n  this.linearCounter = null;\r\n  this.lcLoadValue = null;\r\n  this.sampleValue = null;\r\n  this.tmp = null;\r\n\r\n  this.reset();\r\n};\r\n\r\nChannelTriangle.prototype = {\r\n  reset: function () {\r\n    this.progTimerCount = 0;\r\n    this.progTimerMax = 0;\r\n    this.triangleCounter = 0;\r\n    this.isEnabled = false;\r\n    this.sampleCondition = false;\r\n    this.lengthCounter = 0;\r\n    this.lengthCounterEnable = false;\r\n    this.linearCounter = 0;\r\n    this.lcLoadValue = 0;\r\n    this.lcHalt = true;\r\n    this.lcControl = false;\r\n    this.tmp = 0;\r\n    this.sampleValue = 0xf;\r\n  },\r\n\r\n  clockLengthCounter: function () {\r\n    if (this.lengthCounterEnable && this.lengthCounter > 0) {\r\n      this.lengthCounter--;\r\n      if (this.lengthCounter === 0) {\r\n        this.updateSampleCondition();\r\n      }\r\n    }\r\n  },\r\n\r\n  clockLinearCounter: function () {\r\n    if (this.lcHalt) {\r\n      // Load:\r\n      this.linearCounter = this.lcLoadValue;\r\n      this.updateSampleCondition();\r\n    } else if (this.linearCounter > 0) {\r\n      // Decrement:\r\n      this.linearCounter--;\r\n      this.updateSampleCondition();\r\n    }\r\n    if (!this.lcControl) {\r\n      // Clear halt flag:\r\n      this.lcHalt = false;\r\n    }\r\n  },\r\n\r\n  getLengthStatus: function () {\r\n    return this.lengthCounter === 0 || !this.isEnabled ? 0 : 1;\r\n  },\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  readReg: function (address) {\r\n    return 0;\r\n  },\r\n\r\n  writeReg: function (address, value) {\r\n    if (address === 0x4008) {\r\n      // New values for linear counter:\r\n      this.lcControl = (value & 0x80) !== 0;\r\n      this.lcLoadValue = value & 0x7f;\r\n\r\n      // Length counter enable:\r\n      this.lengthCounterEnable = !this.lcControl;\r\n    } else if (address === 0x400a) {\r\n      // Programmable timer:\r\n      this.progTimerMax &= 0x700;\r\n      this.progTimerMax |= value;\r\n    } else if (address === 0x400b) {\r\n      // Programmable timer, length counter\r\n      this.progTimerMax &= 0xff;\r\n      this.progTimerMax |= (value & 0x07) << 8;\r\n      this.lengthCounter = this.papu.getLengthMax(value & 0xf8);\r\n      this.lcHalt = true;\r\n    }\r\n\r\n    this.updateSampleCondition();\r\n  },\r\n\r\n  clockProgrammableTimer: function (nCycles) {\r\n    if (this.progTimerMax > 0) {\r\n      this.progTimerCount += nCycles;\r\n      while (\r\n        this.progTimerMax > 0 &&\r\n        this.progTimerCount >= this.progTimerMax\r\n      ) {\r\n        this.progTimerCount -= this.progTimerMax;\r\n        if (\r\n          this.isEnabled &&\r\n          this.lengthCounter > 0 &&\r\n          this.linearCounter > 0\r\n        ) {\r\n          this.clockTriangleGenerator();\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  clockTriangleGenerator: function () {\r\n    this.triangleCounter++;\r\n    this.triangleCounter &= 0x1f;\r\n  },\r\n\r\n  setEnabled: function (value) {\r\n    this.isEnabled = value;\r\n    if (!value) {\r\n      this.lengthCounter = 0;\r\n    }\r\n    this.updateSampleCondition();\r\n  },\r\n\r\n  updateSampleCondition: function () {\r\n    this.sampleCondition =\r\n      this.isEnabled &&\r\n      this.progTimerMax > 7 &&\r\n      this.linearCounter > 0 &&\r\n      this.lengthCounter > 0;\r\n  },\r\n\r\n  JSON_PROPERTIES: [\r\n    \"isEnabled\",\r\n    \"sampleCondition\",\r\n    \"lengthCounterEnable\",\r\n    \"lcHalt\",\r\n    \"lcControl\",\r\n    \"progTimerCount\",\r\n    \"progTimerMax\",\r\n    \"triangleCounter\",\r\n    \"lengthCounter\",\r\n    \"linearCounter\",\r\n    \"lcLoadValue\",\r\n    \"sampleValue\",\r\n    \"tmp\",\r\n  ],\r\n\r\n  toJSON: function () {\r\n    return utils.toJSON(this);\r\n  },\r\n\r\n  fromJSON: function (s) {\r\n    utils.fromJSON(this, s);\r\n  },\r\n};\r\n\r\nexport {PAPU};\r\n","import {utils} from './utils.js'\r\n\r\nvar Mappers = {};\r\n\r\nMappers[0] = function (nes) {\r\n  this.nes = nes;\r\n};\r\n\r\nMappers[0].prototype = {\r\n  reset: function () {\r\n    this.joy1StrobeState = 0;\r\n    this.joy2StrobeState = 0;\r\n    this.joypadLastWrite = 0;\r\n\r\n    this.zapperFired = false;\r\n    this.zapperX = null;\r\n    this.zapperY = null;\r\n  },\r\n\r\n  write: function (address, value) {\r\n    if (address < 0x2000) {\r\n      // Mirroring of RAM:\r\n      this.nes.cpu.mem[address & 0x7ff] = value;\r\n    } else if (address > 0x4017) {\r\n      this.nes.cpu.mem[address] = value;\r\n      if (address >= 0x6000 && address < 0x8000) {\r\n        // Write to persistent RAM\r\n        this.nes.opts.onBatteryRamWrite(address, value);\r\n      }\r\n    } else if (address > 0x2007 && address < 0x4000) {\r\n      this.regWrite(0x2000 + (address & 0x7), value);\r\n    } else {\r\n      this.regWrite(address, value);\r\n    }\r\n  },\r\n\r\n  writelow: function (address, value) {\r\n    if (address < 0x2000) {\r\n      // Mirroring of RAM:\r\n      this.nes.cpu.mem[address & 0x7ff] = value;\r\n    } else if (address > 0x4017) {\r\n      this.nes.cpu.mem[address] = value;\r\n    } else if (address > 0x2007 && address < 0x4000) {\r\n      this.regWrite(0x2000 + (address & 0x7), value);\r\n    } else {\r\n      this.regWrite(address, value);\r\n    }\r\n  },\r\n\r\n  load: function (address) {\r\n    // Wrap around:\r\n    address &= 0xffff;\r\n\r\n    // Check address range:\r\n    if (address > 0x4017) {\r\n      // ROM:\r\n      return this.nes.cpu.mem[address];\r\n    } else if (address >= 0x2000) {\r\n      // I/O Ports.\r\n      return this.regLoad(address);\r\n    } else {\r\n      // RAM (mirrored)\r\n      return this.nes.cpu.mem[address & 0x7ff];\r\n    }\r\n  },\r\n\r\n  regLoad: function (address) {\r\n    switch (\r\n      address >> 12 // use fourth nibble (0xF000)\r\n    ) {\r\n      case 0:\r\n        break;\r\n\r\n      case 1:\r\n        break;\r\n\r\n      case 2:\r\n      // Fall through to case 3\r\n      case 3:\r\n        // PPU Registers\r\n        switch (address & 0x7) {\r\n          case 0x0:\r\n            // 0x2000:\r\n            // PPU Control Register 1.\r\n            // (the value is stored both\r\n            // in main memory and in the\r\n            // PPU as flags):\r\n            // (not in the real NES)\r\n            return this.nes.cpu.mem[0x2000];\r\n\r\n          case 0x1:\r\n            // 0x2001:\r\n            // PPU Control Register 2.\r\n            // (the value is stored both\r\n            // in main memory and in the\r\n            // PPU as flags):\r\n            // (not in the real NES)\r\n            return this.nes.cpu.mem[0x2001];\r\n\r\n          case 0x2:\r\n            // 0x2002:\r\n            // PPU Status Register.\r\n            // The value is stored in\r\n            // main memory in addition\r\n            // to as flags in the PPU.\r\n            // (not in the real NES)\r\n            return this.nes.ppu.readStatusRegister();\r\n\r\n          case 0x3:\r\n            return 0;\r\n\r\n          case 0x4:\r\n            // 0x2004:\r\n            // Sprite Memory read.\r\n            return this.nes.ppu.sramLoad();\r\n          case 0x5:\r\n            return 0;\r\n\r\n          case 0x6:\r\n            return 0;\r\n\r\n          case 0x7:\r\n            // 0x2007:\r\n            // VRAM read:\r\n            return this.nes.ppu.vramLoad();\r\n        }\r\n        break;\r\n      case 4:\r\n        // Sound+Joypad registers\r\n        switch (address - 0x4015) {\r\n          case 0:\r\n            // 0x4015:\r\n            // Sound channel enable, DMC Status\r\n            return this.nes.papu.readReg(address);\r\n\r\n          case 1:\r\n            // 0x4016:\r\n            // Joystick 1 + Strobe\r\n            return this.joy1Read();\r\n\r\n          case 2:\r\n            // 0x4017:\r\n            // Joystick 2 + Strobe\r\n            // https://wiki.nesdev.com/w/index.php/Zapper\r\n            var w;\r\n\r\n            if (\r\n              this.zapperX !== null &&\r\n              this.zapperY !== null &&\r\n              this.nes.ppu.isPixelWhite(this.zapperX, this.zapperY)\r\n            ) {\r\n              w = 0;\r\n            } else {\r\n              w = 0x1 << 3;\r\n            }\r\n\r\n            if (this.zapperFired) {\r\n              w |= 0x1 << 4;\r\n            }\r\n            return (this.joy2Read() | w) & 0xffff;\r\n        }\r\n        break;\r\n    }\r\n    return 0;\r\n  },\r\n\r\n  regWrite: function (address, value) {\r\n    switch (address) {\r\n      case 0x2000:\r\n        // PPU Control register 1\r\n        this.nes.cpu.mem[address] = value;\r\n        this.nes.ppu.updateControlReg1(value);\r\n        break;\r\n\r\n      case 0x2001:\r\n        // PPU Control register 2\r\n        this.nes.cpu.mem[address] = value;\r\n        this.nes.ppu.updateControlReg2(value);\r\n        break;\r\n\r\n      case 0x2003:\r\n        // Set Sprite RAM address:\r\n        this.nes.ppu.writeSRAMAddress(value);\r\n        break;\r\n\r\n      case 0x2004:\r\n        // Write to Sprite RAM:\r\n        this.nes.ppu.sramWrite(value);\r\n        break;\r\n\r\n      case 0x2005:\r\n        // Screen Scroll offsets:\r\n        this.nes.ppu.scrollWrite(value);\r\n        break;\r\n\r\n      case 0x2006:\r\n        // Set VRAM address:\r\n        this.nes.ppu.writeVRAMAddress(value);\r\n        break;\r\n\r\n      case 0x2007:\r\n        // Write to VRAM:\r\n        this.nes.ppu.vramWrite(value);\r\n        break;\r\n\r\n      case 0x4014:\r\n        // Sprite Memory DMA Access\r\n        this.nes.ppu.sramDMA(value);\r\n        break;\r\n\r\n      case 0x4015:\r\n        // Sound Channel Switch, DMC Status\r\n        this.nes.papu.writeReg(address, value);\r\n        break;\r\n\r\n      case 0x4016:\r\n        // Joystick 1 + Strobe\r\n        if ((value & 1) === 0 && (this.joypadLastWrite & 1) === 1) {\r\n          this.joy1StrobeState = 0;\r\n          this.joy2StrobeState = 0;\r\n        }\r\n        this.joypadLastWrite = value;\r\n        break;\r\n\r\n      case 0x4017:\r\n        // Sound channel frame sequencer:\r\n        this.nes.papu.writeReg(address, value);\r\n        break;\r\n\r\n      default:\r\n        // Sound registers\r\n        // console.log(\"write to sound reg\");\r\n        if (address >= 0x4000 && address <= 0x4017) {\r\n          this.nes.papu.writeReg(address, value);\r\n        }\r\n    }\r\n  },\r\n\r\n  joy1Read: function () {\r\n    var ret;\r\n\r\n    switch (this.joy1StrobeState) {\r\n      case 0:\r\n      case 1:\r\n      case 2:\r\n      case 3:\r\n      case 4:\r\n      case 5:\r\n      case 6:\r\n      case 7:\r\n        ret = this.nes.controllers[1].state[this.joy1StrobeState];\r\n        break;\r\n      case 8:\r\n      case 9:\r\n      case 10:\r\n      case 11:\r\n      case 12:\r\n      case 13:\r\n      case 14:\r\n      case 15:\r\n      case 16:\r\n      case 17:\r\n      case 18:\r\n        ret = 0;\r\n        break;\r\n      case 19:\r\n        ret = 1;\r\n        break;\r\n      default:\r\n        ret = 0;\r\n    }\r\n\r\n    this.joy1StrobeState++;\r\n    if (this.joy1StrobeState === 24) {\r\n      this.joy1StrobeState = 0;\r\n    }\r\n\r\n    return ret;\r\n  },\r\n\r\n  joy2Read: function () {\r\n    var ret;\r\n\r\n    switch (this.joy2StrobeState) {\r\n      case 0:\r\n      case 1:\r\n      case 2:\r\n      case 3:\r\n      case 4:\r\n      case 5:\r\n      case 6:\r\n      case 7:\r\n        ret = this.nes.controllers[2].state[this.joy2StrobeState];\r\n        break;\r\n      case 8:\r\n      case 9:\r\n      case 10:\r\n      case 11:\r\n      case 12:\r\n      case 13:\r\n      case 14:\r\n      case 15:\r\n      case 16:\r\n      case 17:\r\n      case 18:\r\n        ret = 0;\r\n        break;\r\n      case 19:\r\n        ret = 1;\r\n        break;\r\n      default:\r\n        ret = 0;\r\n    }\r\n\r\n    this.joy2StrobeState++;\r\n    if (this.joy2StrobeState === 24) {\r\n      this.joy2StrobeState = 0;\r\n    }\r\n\r\n    return ret;\r\n  },\r\n\r\n  loadROM: function () {\r\n    if (!this.nes.rom.valid || this.nes.rom.romCount < 1) {\r\n      throw new Error(\"NoMapper: Invalid ROM! Unable to load.\");\r\n    }\r\n\r\n    // Load ROM into memory:\r\n    this.loadPRGROM();\r\n\r\n    // Load CHR-ROM:\r\n    this.loadCHRROM();\r\n\r\n    // Load Battery RAM (if present):\r\n    this.loadBatteryRam();\r\n\r\n    // Reset IRQ:\r\n    //nes.getCpu().doResetInterrupt();\r\n    this.nes.cpu.requestIrq(this.nes.cpu.IRQ_RESET);\r\n  },\r\n\r\n  loadPRGROM: function () {\r\n    if (this.nes.rom.romCount > 1) {\r\n      // Load the two first banks into memory.\r\n      this.loadRomBank(0, 0x8000);\r\n      this.loadRomBank(1, 0xc000);\r\n    } else {\r\n      // Load the one bank into both memory locations:\r\n      this.loadRomBank(0, 0x8000);\r\n      this.loadRomBank(0, 0xc000);\r\n    }\r\n  },\r\n\r\n  loadCHRROM: function () {\r\n    // console.log(\"Loading CHR ROM..\");\r\n    if (this.nes.rom.vromCount > 0) {\r\n      if (this.nes.rom.vromCount === 1) {\r\n        this.loadVromBank(0, 0x0000);\r\n        this.loadVromBank(0, 0x1000);\r\n      } else {\r\n        this.loadVromBank(0, 0x0000);\r\n        this.loadVromBank(1, 0x1000);\r\n      }\r\n    } else {\r\n      //System.out.println(\"There aren't any CHR-ROM banks..\");\r\n    }\r\n  },\r\n\r\n  loadBatteryRam: function () {\r\n    if (this.nes.rom.batteryRam) {\r\n      var ram = this.nes.rom.batteryRam;\r\n      if (ram !== null && ram.length === 0x2000) {\r\n        // Load Battery RAM into memory:\r\n        utils.copyArrayElements(ram, 0, this.nes.cpu.mem, 0x6000, 0x2000);\r\n      }\r\n    }\r\n  },\r\n\r\n  loadRomBank: function (bank, address) {\r\n    // Loads a ROM bank into the specified address.\r\n    bank %= this.nes.rom.romCount;\r\n    //var data = this.nes.rom.rom[bank];\r\n    //cpuMem.write(address,data,data.length);\r\n    utils.copyArrayElements(\r\n      this.nes.rom.rom[bank],\r\n      0,\r\n      this.nes.cpu.mem,\r\n      address,\r\n      16384\r\n    );\r\n  },\r\n\r\n  loadVromBank: function (bank, address) {\r\n    if (this.nes.rom.vromCount === 0) {\r\n      return;\r\n    }\r\n    this.nes.ppu.triggerRendering();\r\n\r\n    utils.copyArrayElements(\r\n      this.nes.rom.vrom[bank % this.nes.rom.vromCount],\r\n      0,\r\n      this.nes.ppu.vramMem,\r\n      address,\r\n      4096\r\n    );\r\n\r\n    var vromTile = this.nes.rom.vromTile[bank % this.nes.rom.vromCount];\r\n    utils.copyArrayElements(\r\n      vromTile,\r\n      0,\r\n      this.nes.ppu.ptTile,\r\n      address >> 4,\r\n      256\r\n    );\r\n  },\r\n\r\n  load32kRomBank: function (bank, address) {\r\n    this.loadRomBank((bank * 2) % this.nes.rom.romCount, address);\r\n    this.loadRomBank((bank * 2 + 1) % this.nes.rom.romCount, address + 16384);\r\n  },\r\n\r\n  load8kVromBank: function (bank4kStart, address) {\r\n    if (this.nes.rom.vromCount === 0) {\r\n      return;\r\n    }\r\n    this.nes.ppu.triggerRendering();\r\n\r\n    this.loadVromBank(bank4kStart % this.nes.rom.vromCount, address);\r\n    this.loadVromBank(\r\n      (bank4kStart + 1) % this.nes.rom.vromCount,\r\n      address + 4096\r\n    );\r\n  },\r\n\r\n  load1kVromBank: function (bank1k, address) {\r\n    if (this.nes.rom.vromCount === 0) {\r\n      return;\r\n    }\r\n    this.nes.ppu.triggerRendering();\r\n\r\n    var bank4k = Math.floor(bank1k / 4) % this.nes.rom.vromCount;\r\n    var bankoffset = (bank1k % 4) * 1024;\r\n    utils.copyArrayElements(\r\n      this.nes.rom.vrom[bank4k],\r\n      bankoffset,\r\n      this.nes.ppu.vramMem,\r\n      address,\r\n      1024\r\n    );\r\n\r\n    // Update tiles:\r\n    var vromTile = this.nes.rom.vromTile[bank4k];\r\n    var baseIndex = address >> 4;\r\n    for (var i = 0; i < 64; i++) {\r\n      this.nes.ppu.ptTile[baseIndex + i] = vromTile[(bank1k % 4 << 6) + i];\r\n    }\r\n  },\r\n\r\n  load2kVromBank: function (bank2k, address) {\r\n    if (this.nes.rom.vromCount === 0) {\r\n      return;\r\n    }\r\n    this.nes.ppu.triggerRendering();\r\n\r\n    var bank4k = Math.floor(bank2k / 2) % this.nes.rom.vromCount;\r\n    var bankoffset = (bank2k % 2) * 2048;\r\n    utils.copyArrayElements(\r\n      this.nes.rom.vrom[bank4k],\r\n      bankoffset,\r\n      this.nes.ppu.vramMem,\r\n      address,\r\n      2048\r\n    );\r\n\r\n    // Update tiles:\r\n    var vromTile = this.nes.rom.vromTile[bank4k];\r\n    var baseIndex = address >> 4;\r\n    for (var i = 0; i < 128; i++) {\r\n      this.nes.ppu.ptTile[baseIndex + i] = vromTile[(bank2k % 2 << 7) + i];\r\n    }\r\n  },\r\n\r\n  load8kRomBank: function (bank8k, address) {\r\n    var bank16k = Math.floor(bank8k / 2) % this.nes.rom.romCount;\r\n    var offset = (bank8k % 2) * 8192;\r\n\r\n    //this.nes.cpu.mem.write(address,this.nes.rom.rom[bank16k],offset,8192);\r\n    utils.copyArrayElements(\r\n      this.nes.rom.rom[bank16k],\r\n      offset,\r\n      this.nes.cpu.mem,\r\n      address,\r\n      8192\r\n    );\r\n  },\r\n\r\n  clockIrqCounter: function () {\r\n    // Does nothing. This is used by the MMC3 mapper.\r\n  },\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  latchAccess: function (address) {\r\n    // Does nothing. This is used by MMC2.\r\n  },\r\n\r\n  toJSON: function () {\r\n    return {\r\n      joy1StrobeState: this.joy1StrobeState,\r\n      joy2StrobeState: this.joy2StrobeState,\r\n      joypadLastWrite: this.joypadLastWrite,\r\n    };\r\n  },\r\n\r\n  fromJSON: function (s) {\r\n    this.joy1StrobeState = s.joy1StrobeState;\r\n    this.joy2StrobeState = s.joy2StrobeState;\r\n    this.joypadLastWrite = s.joypadLastWrite;\r\n  },\r\n};\r\n\r\nMappers[1] = function (nes) {\r\n  this.nes = nes;\r\n};\r\n\r\nMappers[1].prototype = new Mappers[0]();\r\n\r\nMappers[1].prototype.reset = function () {\r\n  Mappers[0].prototype.reset.apply(this);\r\n\r\n  // 5-bit buffer:\r\n  this.regBuffer = 0;\r\n  this.regBufferCounter = 0;\r\n\r\n  // Register 0:\r\n  this.mirroring = 0;\r\n  this.oneScreenMirroring = 0;\r\n  this.prgSwitchingArea = 1;\r\n  this.prgSwitchingSize = 1;\r\n  this.vromSwitchingSize = 0;\r\n\r\n  // Register 1:\r\n  this.romSelectionReg0 = 0;\r\n\r\n  // Register 2:\r\n  this.romSelectionReg1 = 0;\r\n\r\n  // Register 3:\r\n  this.romBankSelect = 0;\r\n};\r\n\r\nMappers[1].prototype.write = function (address, value) {\r\n  // Writes to addresses other than MMC registers are handled by NoMapper.\r\n  if (address < 0x8000) {\r\n    Mappers[0].prototype.write.apply(this, arguments);\r\n    return;\r\n  }\r\n\r\n  // See what should be done with the written value:\r\n  if ((value & 128) !== 0) {\r\n    // Reset buffering:\r\n    this.regBufferCounter = 0;\r\n    this.regBuffer = 0;\r\n\r\n    // Reset register:\r\n    if (this.getRegNumber(address) === 0) {\r\n      this.prgSwitchingArea = 1;\r\n      this.prgSwitchingSize = 1;\r\n    }\r\n  } else {\r\n    // Continue buffering:\r\n    //regBuffer = (regBuffer & (0xFF-(1<<regBufferCounter))) | ((value & (1<<regBufferCounter))<<regBufferCounter);\r\n    this.regBuffer =\r\n      (this.regBuffer & (0xff - (1 << this.regBufferCounter))) |\r\n      ((value & 1) << this.regBufferCounter);\r\n    this.regBufferCounter++;\r\n\r\n    if (this.regBufferCounter === 5) {\r\n      // Use the buffered value:\r\n      this.setReg(this.getRegNumber(address), this.regBuffer);\r\n\r\n      // Reset buffer:\r\n      this.regBuffer = 0;\r\n      this.regBufferCounter = 0;\r\n    }\r\n  }\r\n};\r\n\r\nMappers[1].prototype.setReg = function (reg, value) {\r\n  var tmp;\r\n\r\n  switch (reg) {\r\n    case 0:\r\n      // Mirroring:\r\n      tmp = value & 3;\r\n      if (tmp !== this.mirroring) {\r\n        // Set mirroring:\r\n        this.mirroring = tmp;\r\n        if ((this.mirroring & 2) === 0) {\r\n          // SingleScreen mirroring overrides the other setting:\r\n          this.nes.ppu.setMirroring(this.nes.rom.SINGLESCREEN_MIRRORING);\r\n        } else if ((this.mirroring & 1) !== 0) {\r\n          // Not overridden by SingleScreen mirroring.\r\n          this.nes.ppu.setMirroring(this.nes.rom.HORIZONTAL_MIRRORING);\r\n        } else {\r\n          this.nes.ppu.setMirroring(this.nes.rom.VERTICAL_MIRRORING);\r\n        }\r\n      }\r\n\r\n      // PRG Switching Area;\r\n      this.prgSwitchingArea = (value >> 2) & 1;\r\n\r\n      // PRG Switching Size:\r\n      this.prgSwitchingSize = (value >> 3) & 1;\r\n\r\n      // VROM Switching Size:\r\n      this.vromSwitchingSize = (value >> 4) & 1;\r\n\r\n      break;\r\n\r\n    case 1:\r\n      // ROM selection:\r\n      this.romSelectionReg0 = (value >> 4) & 1;\r\n\r\n      // Check whether the cart has VROM:\r\n      if (this.nes.rom.vromCount > 0) {\r\n        // Select VROM bank at 0x0000:\r\n        if (this.vromSwitchingSize === 0) {\r\n          // Swap 8kB VROM:\r\n          if (this.romSelectionReg0 === 0) {\r\n            this.load8kVromBank(value & 0xf, 0x0000);\r\n          } else {\r\n            this.load8kVromBank(\r\n              Math.floor(this.nes.rom.vromCount / 2) + (value & 0xf),\r\n              0x0000\r\n            );\r\n          }\r\n        } else {\r\n          // Swap 4kB VROM:\r\n          if (this.romSelectionReg0 === 0) {\r\n            this.loadVromBank(value & 0xf, 0x0000);\r\n          } else {\r\n            this.loadVromBank(\r\n              Math.floor(this.nes.rom.vromCount / 2) + (value & 0xf),\r\n              0x0000\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      break;\r\n\r\n    case 2:\r\n      // ROM selection:\r\n      this.romSelectionReg1 = (value >> 4) & 1;\r\n\r\n      // Check whether the cart has VROM:\r\n      if (this.nes.rom.vromCount > 0) {\r\n        // Select VROM bank at 0x1000:\r\n        if (this.vromSwitchingSize === 1) {\r\n          // Swap 4kB of VROM:\r\n          if (this.romSelectionReg1 === 0) {\r\n            this.loadVromBank(value & 0xf, 0x1000);\r\n          } else {\r\n            this.loadVromBank(\r\n              Math.floor(this.nes.rom.vromCount / 2) + (value & 0xf),\r\n              0x1000\r\n            );\r\n          }\r\n        }\r\n      }\r\n      break;\r\n\r\n    default:\r\n      // Select ROM bank:\r\n      // -------------------------\r\n      tmp = value & 0xf;\r\n      var bank;\r\n      var baseBank = 0;\r\n\r\n      if (this.nes.rom.romCount >= 32) {\r\n        // 1024 kB cart\r\n        if (this.vromSwitchingSize === 0) {\r\n          if (this.romSelectionReg0 === 1) {\r\n            baseBank = 16;\r\n          }\r\n        } else {\r\n          baseBank =\r\n            (this.romSelectionReg0 | (this.romSelectionReg1 << 1)) << 3;\r\n        }\r\n      } else if (this.nes.rom.romCount >= 16) {\r\n        // 512 kB cart\r\n        if (this.romSelectionReg0 === 1) {\r\n          baseBank = 8;\r\n        }\r\n      }\r\n\r\n      if (this.prgSwitchingSize === 0) {\r\n        // 32kB\r\n        bank = baseBank + (value & 0xf);\r\n        this.load32kRomBank(bank, 0x8000);\r\n      } else {\r\n        // 16kB\r\n        bank = baseBank * 2 + (value & 0xf);\r\n        if (this.prgSwitchingArea === 0) {\r\n          this.loadRomBank(bank, 0xc000);\r\n        } else {\r\n          this.loadRomBank(bank, 0x8000);\r\n        }\r\n      }\r\n  }\r\n};\r\n\r\n// Returns the register number from the address written to:\r\nMappers[1].prototype.getRegNumber = function (address) {\r\n  if (address >= 0x8000 && address <= 0x9fff) {\r\n    return 0;\r\n  } else if (address >= 0xa000 && address <= 0xbfff) {\r\n    return 1;\r\n  } else if (address >= 0xc000 && address <= 0xdfff) {\r\n    return 2;\r\n  } else {\r\n    return 3;\r\n  }\r\n};\r\n\r\nMappers[1].prototype.loadROM = function () {\r\n  if (!this.nes.rom.valid) {\r\n    throw new Error(\"MMC1: Invalid ROM! Unable to load.\");\r\n  }\r\n\r\n  // Load PRG-ROM:\r\n  this.loadRomBank(0, 0x8000); //   First ROM bank..\r\n  this.loadRomBank(this.nes.rom.romCount - 1, 0xc000); // ..and last ROM bank.\r\n\r\n  // Load CHR-ROM:\r\n  this.loadCHRROM();\r\n\r\n  // Load Battery RAM (if present):\r\n  this.loadBatteryRam();\r\n\r\n  // Do Reset-Interrupt:\r\n  this.nes.cpu.requestIrq(this.nes.cpu.IRQ_RESET);\r\n};\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nMappers[1].prototype.switchLowHighPrgRom = function (oldSetting) {\r\n  // not yet.\r\n};\r\n\r\nMappers[1].prototype.switch16to32 = function () {\r\n  // not yet.\r\n};\r\n\r\nMappers[1].prototype.switch32to16 = function () {\r\n  // not yet.\r\n};\r\n\r\nMappers[1].prototype.toJSON = function () {\r\n  var s = Mappers[0].prototype.toJSON.apply(this);\r\n  s.mirroring = this.mirroring;\r\n  s.oneScreenMirroring = this.oneScreenMirroring;\r\n  s.prgSwitchingArea = this.prgSwitchingArea;\r\n  s.prgSwitchingSize = this.prgSwitchingSize;\r\n  s.vromSwitchingSize = this.vromSwitchingSize;\r\n  s.romSelectionReg0 = this.romSelectionReg0;\r\n  s.romSelectionReg1 = this.romSelectionReg1;\r\n  s.romBankSelect = this.romBankSelect;\r\n  s.regBuffer = this.regBuffer;\r\n  s.regBufferCounter = this.regBufferCounter;\r\n  return s;\r\n};\r\n\r\nMappers[1].prototype.fromJSON = function (s) {\r\n  Mappers[0].prototype.fromJSON.apply(this, arguments);\r\n  this.mirroring = s.mirroring;\r\n  this.oneScreenMirroring = s.oneScreenMirroring;\r\n  this.prgSwitchingArea = s.prgSwitchingArea;\r\n  this.prgSwitchingSize = s.prgSwitchingSize;\r\n  this.vromSwitchingSize = s.vromSwitchingSize;\r\n  this.romSelectionReg0 = s.romSelectionReg0;\r\n  this.romSelectionReg1 = s.romSelectionReg1;\r\n  this.romBankSelect = s.romBankSelect;\r\n  this.regBuffer = s.regBuffer;\r\n  this.regBufferCounter = s.regBufferCounter;\r\n};\r\n\r\nMappers[2] = function (nes) {\r\n  this.nes = nes;\r\n};\r\n\r\nMappers[2].prototype = new Mappers[0]();\r\n\r\nMappers[2].prototype.write = function (address, value) {\r\n  // Writes to addresses other than MMC registers are handled by NoMapper.\r\n  if (address < 0x8000) {\r\n    Mappers[0].prototype.write.apply(this, arguments);\r\n    return;\r\n  } else {\r\n    // This is a ROM bank select command.\r\n    // Swap in the given ROM bank at 0x8000:\r\n    this.loadRomBank(value, 0x8000);\r\n  }\r\n};\r\n\r\nMappers[2].prototype.loadROM = function () {\r\n  if (!this.nes.rom.valid) {\r\n    throw new Error(\"UNROM: Invalid ROM! Unable to load.\");\r\n  }\r\n\r\n  // Load PRG-ROM:\r\n  this.loadRomBank(0, 0x8000);\r\n  this.loadRomBank(this.nes.rom.romCount - 1, 0xc000);\r\n\r\n  // Load CHR-ROM:\r\n  this.loadCHRROM();\r\n\r\n  // Do Reset-Interrupt:\r\n  this.nes.cpu.requestIrq(this.nes.cpu.IRQ_RESET);\r\n};\r\n\r\n/**\r\n * Mapper 003 (CNROM)\r\n *\r\n * @constructor\r\n * @example Solomon's Key, Arkanoid, Arkista's Ring, Bump 'n' Jump, Cybernoid\r\n * @description http://wiki.nesdev.com/w/index.php/INES_Mapper_003\r\n */\r\nMappers[3] = function (nes) {\r\n  this.nes = nes;\r\n};\r\n\r\nMappers[3].prototype = new Mappers[0]();\r\n\r\nMappers[3].prototype.write = function (address, value) {\r\n  // Writes to addresses other than MMC registers are handled by NoMapper.\r\n  if (address < 0x8000) {\r\n    Mappers[0].prototype.write.apply(this, arguments);\r\n    return;\r\n  } else {\r\n    // This is a ROM bank select command.\r\n    // Swap in the given ROM bank at 0x8000:\r\n    // This is a VROM bank select command.\r\n    // Swap in the given VROM bank at 0x0000:\r\n    var bank = (value % (this.nes.rom.vromCount / 2)) * 2;\r\n    this.loadVromBank(bank, 0x0000);\r\n    this.loadVromBank(bank + 1, 0x1000);\r\n    this.load8kVromBank(value * 2, 0x0000);\r\n  }\r\n};\r\n\r\nMappers[4] = function (nes) {\r\n  this.nes = nes;\r\n\r\n  this.CMD_SEL_2_1K_VROM_0000 = 0;\r\n  this.CMD_SEL_2_1K_VROM_0800 = 1;\r\n  this.CMD_SEL_1K_VROM_1000 = 2;\r\n  this.CMD_SEL_1K_VROM_1400 = 3;\r\n  this.CMD_SEL_1K_VROM_1800 = 4;\r\n  this.CMD_SEL_1K_VROM_1C00 = 5;\r\n  this.CMD_SEL_ROM_PAGE1 = 6;\r\n  this.CMD_SEL_ROM_PAGE2 = 7;\r\n\r\n  this.command = null;\r\n  this.prgAddressSelect = null;\r\n  this.chrAddressSelect = null;\r\n  this.pageNumber = null;\r\n  this.irqCounter = null;\r\n  this.irqLatchValue = null;\r\n  this.irqEnable = null;\r\n  this.prgAddressChanged = false;\r\n};\r\n\r\nMappers[4].prototype = new Mappers[0]();\r\n\r\nMappers[4].prototype.write = function (address, value) {\r\n  // Writes to addresses other than MMC registers are handled by NoMapper.\r\n  if (address < 0x8000) {\r\n    Mappers[0].prototype.write.apply(this, arguments);\r\n    return;\r\n  }\r\n\r\n  switch (address) {\r\n    case 0x8000:\r\n      // Command/Address Select register\r\n      this.command = value & 7;\r\n      var tmp = (value >> 6) & 1;\r\n      if (tmp !== this.prgAddressSelect) {\r\n        this.prgAddressChanged = true;\r\n      }\r\n      this.prgAddressSelect = tmp;\r\n      this.chrAddressSelect = (value >> 7) & 1;\r\n      break;\r\n\r\n    case 0x8001:\r\n      // Page number for command\r\n      this.executeCommand(this.command, value);\r\n      break;\r\n\r\n    case 0xa000:\r\n      // Mirroring select\r\n      if ((value & 1) !== 0) {\r\n        this.nes.ppu.setMirroring(this.nes.rom.HORIZONTAL_MIRRORING);\r\n      } else {\r\n        this.nes.ppu.setMirroring(this.nes.rom.VERTICAL_MIRRORING);\r\n      }\r\n      break;\r\n\r\n    case 0xa001:\r\n      // SaveRAM Toggle\r\n      // TODO\r\n      //nes.getRom().setSaveState((value&1)!=0);\r\n      break;\r\n\r\n    case 0xc000:\r\n      // IRQ Counter register\r\n      this.irqCounter = value;\r\n      //nes.ppu.mapperIrqCounter = 0;\r\n      break;\r\n\r\n    case 0xc001:\r\n      // IRQ Latch register\r\n      this.irqLatchValue = value;\r\n      break;\r\n\r\n    case 0xe000:\r\n      // IRQ Control Reg 0 (disable)\r\n      //irqCounter = irqLatchValue;\r\n      this.irqEnable = 0;\r\n      break;\r\n\r\n    case 0xe001:\r\n      // IRQ Control Reg 1 (enable)\r\n      this.irqEnable = 1;\r\n      break;\r\n\r\n    default:\r\n    // Not a MMC3 register.\r\n    // The game has probably crashed,\r\n    // since it tries to write to ROM..\r\n    // IGNORE.\r\n  }\r\n};\r\n\r\nMappers[4].prototype.executeCommand = function (cmd, arg) {\r\n  switch (cmd) {\r\n    case this.CMD_SEL_2_1K_VROM_0000:\r\n      // Select 2 1KB VROM pages at 0x0000:\r\n      if (this.chrAddressSelect === 0) {\r\n        this.load1kVromBank(arg, 0x0000);\r\n        this.load1kVromBank(arg + 1, 0x0400);\r\n      } else {\r\n        this.load1kVromBank(arg, 0x1000);\r\n        this.load1kVromBank(arg + 1, 0x1400);\r\n      }\r\n      break;\r\n\r\n    case this.CMD_SEL_2_1K_VROM_0800:\r\n      // Select 2 1KB VROM pages at 0x0800:\r\n      if (this.chrAddressSelect === 0) {\r\n        this.load1kVromBank(arg, 0x0800);\r\n        this.load1kVromBank(arg + 1, 0x0c00);\r\n      } else {\r\n        this.load1kVromBank(arg, 0x1800);\r\n        this.load1kVromBank(arg + 1, 0x1c00);\r\n      }\r\n      break;\r\n\r\n    case this.CMD_SEL_1K_VROM_1000:\r\n      // Select 1K VROM Page at 0x1000:\r\n      if (this.chrAddressSelect === 0) {\r\n        this.load1kVromBank(arg, 0x1000);\r\n      } else {\r\n        this.load1kVromBank(arg, 0x0000);\r\n      }\r\n      break;\r\n\r\n    case this.CMD_SEL_1K_VROM_1400:\r\n      // Select 1K VROM Page at 0x1400:\r\n      if (this.chrAddressSelect === 0) {\r\n        this.load1kVromBank(arg, 0x1400);\r\n      } else {\r\n        this.load1kVromBank(arg, 0x0400);\r\n      }\r\n      break;\r\n\r\n    case this.CMD_SEL_1K_VROM_1800:\r\n      // Select 1K VROM Page at 0x1800:\r\n      if (this.chrAddressSelect === 0) {\r\n        this.load1kVromBank(arg, 0x1800);\r\n      } else {\r\n        this.load1kVromBank(arg, 0x0800);\r\n      }\r\n      break;\r\n\r\n    case this.CMD_SEL_1K_VROM_1C00:\r\n      // Select 1K VROM Page at 0x1C00:\r\n      if (this.chrAddressSelect === 0) {\r\n        this.load1kVromBank(arg, 0x1c00);\r\n      } else {\r\n        this.load1kVromBank(arg, 0x0c00);\r\n      }\r\n      break;\r\n\r\n    case this.CMD_SEL_ROM_PAGE1:\r\n      if (this.prgAddressChanged) {\r\n        // Load the two hardwired banks:\r\n        if (this.prgAddressSelect === 0) {\r\n          this.load8kRomBank((this.nes.rom.romCount - 1) * 2, 0xc000);\r\n        } else {\r\n          this.load8kRomBank((this.nes.rom.romCount - 1) * 2, 0x8000);\r\n        }\r\n        this.prgAddressChanged = false;\r\n      }\r\n\r\n      // Select first switchable ROM page:\r\n      if (this.prgAddressSelect === 0) {\r\n        this.load8kRomBank(arg, 0x8000);\r\n      } else {\r\n        this.load8kRomBank(arg, 0xc000);\r\n      }\r\n      break;\r\n\r\n    case this.CMD_SEL_ROM_PAGE2:\r\n      // Select second switchable ROM page:\r\n      this.load8kRomBank(arg, 0xa000);\r\n\r\n      // hardwire appropriate bank:\r\n      if (this.prgAddressChanged) {\r\n        // Load the two hardwired banks:\r\n        if (this.prgAddressSelect === 0) {\r\n          this.load8kRomBank((this.nes.rom.romCount - 1) * 2, 0xc000);\r\n        } else {\r\n          this.load8kRomBank((this.nes.rom.romCount - 1) * 2, 0x8000);\r\n        }\r\n        this.prgAddressChanged = false;\r\n      }\r\n  }\r\n};\r\n\r\nMappers[4].prototype.loadROM = function () {\r\n  if (!this.nes.rom.valid) {\r\n    throw new Error(\"MMC3: Invalid ROM! Unable to load.\");\r\n  }\r\n\r\n  // Load hardwired PRG banks (0xC000 and 0xE000):\r\n  this.load8kRomBank((this.nes.rom.romCount - 1) * 2, 0xc000);\r\n  this.load8kRomBank((this.nes.rom.romCount - 1) * 2 + 1, 0xe000);\r\n\r\n  // Load swappable PRG banks (0x8000 and 0xA000):\r\n  this.load8kRomBank(0, 0x8000);\r\n  this.load8kRomBank(1, 0xa000);\r\n\r\n  // Load CHR-ROM:\r\n  this.loadCHRROM();\r\n\r\n  // Load Battery RAM (if present):\r\n  this.loadBatteryRam();\r\n\r\n  // Do Reset-Interrupt:\r\n  this.nes.cpu.requestIrq(this.nes.cpu.IRQ_RESET);\r\n};\r\n\r\nMappers[4].prototype.clockIrqCounter = function () {\r\n  if (this.irqEnable === 1) {\r\n    this.irqCounter--;\r\n    if (this.irqCounter < 0) {\r\n      // Trigger IRQ:\r\n      //nes.getCpu().doIrq();\r\n      this.nes.cpu.requestIrq(this.nes.cpu.IRQ_NORMAL);\r\n      this.irqCounter = this.irqLatchValue;\r\n    }\r\n  }\r\n};\r\n\r\nMappers[4].prototype.toJSON = function () {\r\n  var s = Mappers[0].prototype.toJSON.apply(this);\r\n  s.command = this.command;\r\n  s.prgAddressSelect = this.prgAddressSelect;\r\n  s.chrAddressSelect = this.chrAddressSelect;\r\n  s.pageNumber = this.pageNumber;\r\n  s.irqCounter = this.irqCounter;\r\n  s.irqLatchValue = this.irqLatchValue;\r\n  s.irqEnable = this.irqEnable;\r\n  s.prgAddressChanged = this.prgAddressChanged;\r\n  return s;\r\n};\r\n\r\nMappers[4].prototype.fromJSON = function (s) {\r\n  Mappers[0].prototype.fromJSON.apply(this, arguments);\r\n  this.command = s.command;\r\n  this.prgAddressSelect = s.prgAddressSelect;\r\n  this.chrAddressSelect = s.chrAddressSelect;\r\n  this.pageNumber = s.pageNumber;\r\n  this.irqCounter = s.irqCounter;\r\n  this.irqLatchValue = s.irqLatchValue;\r\n  this.irqEnable = s.irqEnable;\r\n  this.prgAddressChanged = s.prgAddressChanged;\r\n};\r\n\r\n/**\r\n * Mapper005 (MMC5,ExROM)\r\n *\r\n * @example Castlevania 3, Just Breed, Uncharted Waters, Romance of the 3 Kingdoms 2, Laser Invasion, Metal Slader Glory, Uchuu Keibitai SDF, Shin 4 Nin Uchi Mahjong - Yakuman Tengoku\r\n * @description http://wiki.nesdev.com/w/index.php/INES_Mapper_005\r\n * @constructor\r\n */\r\nMappers[5] = function (nes) {\r\n  this.nes = nes;\r\n};\r\n\r\nMappers[5].prototype = new Mappers[0]();\r\n\r\nMappers[5].prototype.write = function (address, value) {\r\n  // Writes to addresses other than MMC registers are handled by NoMapper.\r\n  if (address < 0x8000) {\r\n    Mappers[0].prototype.write.apply(this, arguments);\r\n  } else {\r\n    this.load8kVromBank(value, 0x0000);\r\n  }\r\n};\r\n\r\nMappers[5].prototype.write = function (address, value) {\r\n  // Writes to addresses other than MMC registers are handled by NoMapper.\r\n  if (address < 0x5000) {\r\n    Mappers[0].prototype.write.apply(this, arguments);\r\n    return;\r\n  }\r\n\r\n  switch (address) {\r\n    case 0x5100:\r\n      this.prg_size = value & 3;\r\n      break;\r\n    case 0x5101:\r\n      this.chr_size = value & 3;\r\n      break;\r\n    case 0x5102:\r\n      this.sram_we_a = value & 3;\r\n      break;\r\n    case 0x5103:\r\n      this.sram_we_b = value & 3;\r\n      break;\r\n    case 0x5104:\r\n      this.graphic_mode = value & 3;\r\n      break;\r\n    case 0x5105:\r\n      this.nametable_mode = value;\r\n      this.nametable_type[0] = value & 3;\r\n      this.load1kVromBank(value & 3, 0x2000);\r\n      value >>= 2;\r\n      this.nametable_type[1] = value & 3;\r\n      this.load1kVromBank(value & 3, 0x2400);\r\n      value >>= 2;\r\n      this.nametable_type[2] = value & 3;\r\n      this.load1kVromBank(value & 3, 0x2800);\r\n      value >>= 2;\r\n      this.nametable_type[3] = value & 3;\r\n      this.load1kVromBank(value & 3, 0x2c00);\r\n      break;\r\n    case 0x5106:\r\n      this.fill_chr = value;\r\n      break;\r\n    case 0x5107:\r\n      this.fill_pal = value & 3;\r\n      break;\r\n    case 0x5113:\r\n      this.SetBank_SRAM(3, value & 3);\r\n      break;\r\n    case 0x5114:\r\n    case 0x5115:\r\n    case 0x5116:\r\n    case 0x5117:\r\n      this.SetBank_CPU(address, value);\r\n      break;\r\n    case 0x5120:\r\n    case 0x5121:\r\n    case 0x5122:\r\n    case 0x5123:\r\n    case 0x5124:\r\n    case 0x5125:\r\n    case 0x5126:\r\n    case 0x5127:\r\n      this.chr_mode = 0;\r\n      this.chr_page[0][address & 7] = value;\r\n      this.SetBank_PPU();\r\n      break;\r\n    case 0x5128:\r\n    case 0x5129:\r\n    case 0x512a:\r\n    case 0x512b:\r\n      this.chr_mode = 1;\r\n      this.chr_page[1][(address & 3) + 0] = value;\r\n      this.chr_page[1][(address & 3) + 4] = value;\r\n      this.SetBank_PPU();\r\n      break;\r\n    case 0x5200:\r\n      this.split_control = value;\r\n      break;\r\n    case 0x5201:\r\n      this.split_scroll = value;\r\n      break;\r\n    case 0x5202:\r\n      this.split_page = value & 0x3f;\r\n      break;\r\n    case 0x5203:\r\n      this.irq_line = value;\r\n      this.nes.cpu.ClearIRQ();\r\n      break;\r\n    case 0x5204:\r\n      this.irq_enable = value;\r\n      this.nes.cpu.ClearIRQ();\r\n      break;\r\n    case 0x5205:\r\n      this.mult_a = value;\r\n      break;\r\n    case 0x5206:\r\n      this.mult_b = value;\r\n      break;\r\n    default:\r\n      if (address >= 0x5000 && address <= 0x5015) {\r\n        this.nes.papu.exWrite(address, value);\r\n      } else if (address >= 0x5c00 && address <= 0x5fff) {\r\n        if (this.graphic_mode === 2) {\r\n          // ExRAM\r\n          // vram write\r\n        } else if (this.graphic_mode !== 3) {\r\n          // Split,ExGraphic\r\n          if (this.irq_status & 0x40) {\r\n            // vram write\r\n          } else {\r\n            // vram write\r\n          }\r\n        }\r\n      } else if (address >= 0x6000 && address <= 0x7fff) {\r\n        if (this.sram_we_a === 2 && this.sram_we_b === 1) {\r\n          // additional ram write\r\n        }\r\n      }\r\n      break;\r\n  }\r\n};\r\n\r\nMappers[5].prototype.loadROM = function () {\r\n  if (!this.nes.rom.valid) {\r\n    throw new Error(\"UNROM: Invalid ROM! Unable to load.\");\r\n  }\r\n\r\n  // Load PRG-ROM:\r\n  this.load8kRomBank(this.nes.rom.romCount * 2 - 1, 0x8000);\r\n  this.load8kRomBank(this.nes.rom.romCount * 2 - 1, 0xa000);\r\n  this.load8kRomBank(this.nes.rom.romCount * 2 - 1, 0xc000);\r\n  this.load8kRomBank(this.nes.rom.romCount * 2 - 1, 0xe000);\r\n\r\n  // Load CHR-ROM:\r\n  this.loadCHRROM();\r\n\r\n  // Do Reset-Interrupt:\r\n  this.nes.cpu.requestIrq(this.nes.cpu.IRQ_RESET);\r\n};\r\n\r\n/**\r\n * Mapper007 (AxROM)\r\n * @example Battletoads, Time Lord, Marble Madness\r\n * @description http://wiki.nesdev.com/w/index.php/INES_Mapper_007\r\n * @constructor\r\n */\r\nMappers[7] = function (nes) {\r\n  this.nes = nes;\r\n};\r\n\r\nMappers[7].prototype = new Mappers[0]();\r\n\r\nMappers[7].prototype.write = function (address, value) {\r\n  // Writes to addresses other than MMC registers are handled by NoMapper.\r\n  if (address < 0x8000) {\r\n    Mappers[0].prototype.write.apply(this, arguments);\r\n  } else {\r\n    this.load32kRomBank(value & 0x7, 0x8000);\r\n    if (value & 0x10) {\r\n      this.nes.ppu.setMirroring(this.nes.rom.SINGLESCREEN_MIRRORING2);\r\n    } else {\r\n      this.nes.ppu.setMirroring(this.nes.rom.SINGLESCREEN_MIRRORING);\r\n    }\r\n  }\r\n};\r\n\r\nMappers[7].prototype.loadROM = function () {\r\n  if (!this.nes.rom.valid) {\r\n    throw new Error(\"AOROM: Invalid ROM! Unable to load.\");\r\n  }\r\n\r\n  // Load PRG-ROM:\r\n  this.loadPRGROM();\r\n\r\n  // Load CHR-ROM:\r\n  this.loadCHRROM();\r\n\r\n  // Do Reset-Interrupt:\r\n  this.nes.cpu.requestIrq(this.nes.cpu.IRQ_RESET);\r\n};\r\n\r\n/**\r\n * Mapper 011 (Color Dreams)\r\n *\r\n * @description http://wiki.nesdev.com/w/index.php/Color_Dreams\r\n * @example Crystal Mines, Metal Fighter\r\n * @constructor\r\n */\r\nMappers[11] = function (nes) {\r\n  this.nes = nes;\r\n};\r\n\r\nMappers[11].prototype = new Mappers[0]();\r\n\r\nMappers[11].prototype.write = function (address, value) {\r\n  if (address < 0x8000) {\r\n    Mappers[0].prototype.write.apply(this, arguments);\r\n    return;\r\n  } else {\r\n    // Swap in the given PRG-ROM bank:\r\n    var prgbank1 = ((value & 0xf) * 2) % this.nes.rom.romCount;\r\n    var prgbank2 = ((value & 0xf) * 2 + 1) % this.nes.rom.romCount;\r\n\r\n    this.loadRomBank(prgbank1, 0x8000);\r\n    this.loadRomBank(prgbank2, 0xc000);\r\n\r\n    if (this.nes.rom.vromCount > 0) {\r\n      // Swap in the given VROM bank at 0x0000:\r\n      var bank = ((value >> 4) * 2) % this.nes.rom.vromCount;\r\n      this.loadVromBank(bank, 0x0000);\r\n      this.loadVromBank(bank + 1, 0x1000);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Mapper 034 (BNROM, NINA-01)\r\n *\r\n * @description http://wiki.nesdev.com/w/index.php/INES_Mapper_034\r\n * @example Darkseed, Mashou, Mission Impossible 2\r\n * @constructor\r\n */\r\nMappers[34] = function (nes) {\r\n  this.nes = nes;\r\n};\r\n\r\nMappers[34].prototype = new Mappers[0]();\r\n\r\nMappers[34].prototype.write = function (address, value) {\r\n  if (address < 0x8000) {\r\n    Mappers[0].prototype.write.apply(this, arguments);\r\n    return;\r\n  } else {\r\n    this.load32kRomBank(value, 0x8000);\r\n  }\r\n};\r\n\r\n/**\r\n * Mapper 038\r\n *\r\n * @description http://wiki.nesdev.com/w/index.php/INES_Mapper_038\r\n * @example Crime Busters\r\n * @constructor\r\n */\r\nMappers[38] = function (nes) {\r\n  this.nes = nes;\r\n};\r\n\r\nMappers[38].prototype = new Mappers[0]();\r\n\r\nMappers[38].prototype.write = function (address, value) {\r\n  if (address < 0x7000 || address > 0x7fff) {\r\n    Mappers[0].prototype.write.apply(this, arguments);\r\n    return;\r\n  } else {\r\n    // Swap in the given PRG-ROM bank at 0x8000:\r\n    this.load32kRomBank(value & 3, 0x8000);\r\n\r\n    // Swap in the given VROM bank at 0x0000:\r\n    this.load8kVromBank(((value >> 2) & 3) * 2, 0x0000);\r\n  }\r\n};\r\n\r\n/**\r\n * Mapper 066 (GxROM)\r\n *\r\n * @description http://wiki.nesdev.com/w/index.php/INES_Mapper_066\r\n * @example Doraemon, Dragon Power, Gumshoe, Thunder & Lightning,\r\n * Super Mario Bros. + Duck Hunt\r\n * @constructor\r\n */\r\nMappers[66] = function (nes) {\r\n  this.nes = nes;\r\n};\r\n\r\nMappers[66].prototype = new Mappers[0]();\r\n\r\nMappers[66].prototype.write = function (address, value) {\r\n  if (address < 0x8000) {\r\n    Mappers[0].prototype.write.apply(this, arguments);\r\n    return;\r\n  } else {\r\n    // Swap in the given PRG-ROM bank at 0x8000:\r\n    this.load32kRomBank((value >> 4) & 3, 0x8000);\r\n\r\n    // Swap in the given VROM bank at 0x0000:\r\n    this.load8kVromBank((value & 3) * 2, 0x0000);\r\n  }\r\n};\r\n\r\n/**\r\n * Mapper 094 (UN1ROM)\r\n *\r\n * @description http://wiki.nesdev.com/w/index.php/INES_Mapper_094\r\n * @example Senjou no Ookami\r\n * @constructor\r\n */\r\nMappers[94] = function (nes) {\r\n  this.nes = nes;\r\n};\r\n\r\nMappers[94].prototype = new Mappers[0]();\r\n\r\nMappers[94].prototype.write = function (address, value) {\r\n  // Writes to addresses other than MMC registers are handled by NoMapper.\r\n  if (address < 0x8000) {\r\n    Mappers[0].prototype.write.apply(this, arguments);\r\n    return;\r\n  } else {\r\n    // This is a ROM bank select command.\r\n    // Swap in the given ROM bank at 0x8000:\r\n    this.loadRomBank(value >> 2, 0x8000);\r\n  }\r\n};\r\n\r\nMappers[94].prototype.loadROM = function () {\r\n  if (!this.nes.rom.valid) {\r\n    throw new Error(\"UN1ROM: Invalid ROM! Unable to load.\");\r\n  }\r\n\r\n  // Load PRG-ROM:\r\n  this.loadRomBank(0, 0x8000);\r\n  this.loadRomBank(this.nes.rom.romCount - 1, 0xc000);\r\n\r\n  // Load CHR-ROM:\r\n  this.loadCHRROM();\r\n\r\n  // Do Reset-Interrupt:\r\n  this.nes.cpu.requestIrq(this.nes.cpu.IRQ_RESET);\r\n};\r\n\r\n/**\r\n * Mapper 140\r\n *\r\n * @description http://wiki.nesdev.com/w/index.php/INES_Mapper_140\r\n * @example Bio Senshi Dan - Increaser Tono Tatakai\r\n * @constructor\r\n */\r\nMappers[140] = function (nes) {\r\n  this.nes = nes;\r\n};\r\n\r\nMappers[140].prototype = new Mappers[0]();\r\n\r\nMappers[140].prototype.write = function (address, value) {\r\n  if (address < 0x6000 || address > 0x7fff) {\r\n    Mappers[0].prototype.write.apply(this, arguments);\r\n    return;\r\n  } else {\r\n    // Swap in the given PRG-ROM bank at 0x8000:\r\n    this.load32kRomBank((value >> 4) & 3, 0x8000);\r\n\r\n    // Swap in the given VROM bank at 0x0000:\r\n    this.load8kVromBank((value & 0xf) * 2, 0x0000);\r\n  }\r\n};\r\n\r\n/**\r\n * Mapper 180\r\n *\r\n * @description http://wiki.nesdev.com/w/index.php/INES_Mapper_180\r\n * @example Crazy Climber\r\n * @constructor\r\n */\r\nMappers[180] = function (nes) {\r\n  this.nes = nes;\r\n};\r\n\r\nMappers[180].prototype = new Mappers[0]();\r\n\r\nMappers[180].prototype.write = function (address, value) {\r\n  // Writes to addresses other than MMC registers are handled by NoMapper.\r\n  if (address < 0x8000) {\r\n    Mappers[0].prototype.write.apply(this, arguments);\r\n    return;\r\n  } else {\r\n    // This is a ROM bank select command.\r\n    // Swap in the given ROM bank at 0xc000:\r\n    this.loadRomBank(value, 0xc000);\r\n  }\r\n};\r\n\r\nMappers[180].prototype.loadROM = function () {\r\n  if (!this.nes.rom.valid) {\r\n    throw new Error(\"Mapper 180: Invalid ROM! Unable to load.\");\r\n  }\r\n\r\n  // Load PRG-ROM:\r\n  this.loadRomBank(0, 0x8000);\r\n  this.loadRomBank(this.nes.rom.romCount - 1, 0xc000);\r\n\r\n  // Load CHR-ROM:\r\n  this.loadCHRROM();\r\n\r\n  // Do Reset-Interrupt:\r\n  this.nes.cpu.requestIrq(this.nes.cpu.IRQ_RESET);\r\n};\r\n\r\nexport {Mappers};\r\n","\r\nimport {Mappers} from './mappers.js'\r\nimport {Tile} from './tile.js'\r\n\r\nvar ROM = function (nes) {\r\n  this.nes = nes;\r\n\r\n  this.mapperName = new Array(92);\r\n\r\n  for (var i = 0; i < 92; i++) {\r\n    this.mapperName[i] = \"Unknown Mapper\";\r\n  }\r\n  this.mapperName[0] = \"Direct Access\";\r\n  this.mapperName[1] = \"Nintendo MMC1\";\r\n  this.mapperName[2] = \"UNROM\";\r\n  this.mapperName[3] = \"CNROM\";\r\n  this.mapperName[4] = \"Nintendo MMC3\";\r\n  this.mapperName[5] = \"Nintendo MMC5\";\r\n  this.mapperName[6] = \"FFE F4xxx\";\r\n  this.mapperName[7] = \"AOROM\";\r\n  this.mapperName[8] = \"FFE F3xxx\";\r\n  this.mapperName[9] = \"Nintendo MMC2\";\r\n  this.mapperName[10] = \"Nintendo MMC4\";\r\n  this.mapperName[11] = \"Color Dreams Chip\";\r\n  this.mapperName[12] = \"FFE F6xxx\";\r\n  this.mapperName[15] = \"100-in-1 switch\";\r\n  this.mapperName[16] = \"Bandai chip\";\r\n  this.mapperName[17] = \"FFE F8xxx\";\r\n  this.mapperName[18] = \"Jaleco SS8806 chip\";\r\n  this.mapperName[19] = \"Namcot 106 chip\";\r\n  this.mapperName[20] = \"Famicom Disk System\";\r\n  this.mapperName[21] = \"Konami VRC4a\";\r\n  this.mapperName[22] = \"Konami VRC2a\";\r\n  this.mapperName[23] = \"Konami VRC2a\";\r\n  this.mapperName[24] = \"Konami VRC6\";\r\n  this.mapperName[25] = \"Konami VRC4b\";\r\n  this.mapperName[32] = \"Irem G-101 chip\";\r\n  this.mapperName[33] = \"Taito TC0190/TC0350\";\r\n  this.mapperName[34] = \"32kB ROM switch\";\r\n\r\n  this.mapperName[64] = \"Tengen RAMBO-1 chip\";\r\n  this.mapperName[65] = \"Irem H-3001 chip\";\r\n  this.mapperName[66] = \"GNROM switch\";\r\n  this.mapperName[67] = \"SunSoft3 chip\";\r\n  this.mapperName[68] = \"SunSoft4 chip\";\r\n  this.mapperName[69] = \"SunSoft5 FME-7 chip\";\r\n  this.mapperName[71] = \"Camerica chip\";\r\n  this.mapperName[78] = \"Irem 74HC161/32-based\";\r\n  this.mapperName[91] = \"Pirate HK-SF3 chip\";\r\n};\r\n\r\nROM.prototype = {\r\n  // Mirroring types:\r\n  VERTICAL_MIRRORING: 0,\r\n  HORIZONTAL_MIRRORING: 1,\r\n  FOURSCREEN_MIRRORING: 2,\r\n  SINGLESCREEN_MIRRORING: 3,\r\n  SINGLESCREEN_MIRRORING2: 4,\r\n  SINGLESCREEN_MIRRORING3: 5,\r\n  SINGLESCREEN_MIRRORING4: 6,\r\n  CHRROM_MIRRORING: 7,\r\n\r\n  header: null,\r\n  rom: null,\r\n  vrom: null,\r\n  vromTile: null,\r\n\r\n  romCount: null,\r\n  vromCount: null,\r\n  mirroring: null,\r\n  batteryRam: null,\r\n  trainer: null,\r\n  fourScreen: null,\r\n  mapperType: null,\r\n  valid: false,\r\n\r\n  load: function (data) {\r\n    var i, j, v;\r\n\r\n    if (data.indexOf(\"NES\\x1a\") === -1) {\r\n      throw new Error(\"Not a valid NES ROM.\");\r\n    }\r\n    this.header = new Array(16);\r\n    for (i = 0; i < 16; i++) {\r\n      this.header[i] = data.charCodeAt(i) & 0xff;\r\n    }\r\n    this.romCount = this.header[4];\r\n    this.vromCount = this.header[5] * 2; // Get the number of 4kB banks, not 8kB\r\n    this.mirroring = (this.header[6] & 1) !== 0 ? 1 : 0;\r\n    this.batteryRam = (this.header[6] & 2) !== 0;\r\n    this.trainer = (this.header[6] & 4) !== 0;\r\n    this.fourScreen = (this.header[6] & 8) !== 0;\r\n    this.mapperType = (this.header[6] >> 4) | (this.header[7] & 0xf0);\r\n    /* TODO\r\n        if (this.batteryRam)\r\n            this.loadBatteryRam();*/\r\n    // Check whether byte 8-15 are zero's:\r\n    var foundError = false;\r\n    for (i = 8; i < 16; i++) {\r\n      if (this.header[i] !== 0) {\r\n        foundError = true;\r\n        break;\r\n      }\r\n    }\r\n    if (foundError) {\r\n      this.mapperType &= 0xf; // Ignore byte 7\r\n    }\r\n    // Load PRG-ROM banks:\r\n    this.rom = new Array(this.romCount);\r\n    var offset = 16;\r\n    for (i = 0; i < this.romCount; i++) {\r\n      this.rom[i] = new Array(16384);\r\n      for (j = 0; j < 16384; j++) {\r\n        if (offset + j >= data.length) {\r\n          break;\r\n        }\r\n        this.rom[i][j] = data.charCodeAt(offset + j) & 0xff;\r\n      }\r\n      offset += 16384;\r\n    }\r\n    // Load CHR-ROM banks:\r\n    this.vrom = new Array(this.vromCount);\r\n    for (i = 0; i < this.vromCount; i++) {\r\n      this.vrom[i] = new Array(4096);\r\n      for (j = 0; j < 4096; j++) {\r\n        if (offset + j >= data.length) {\r\n          break;\r\n        }\r\n        this.vrom[i][j] = data.charCodeAt(offset + j) & 0xff;\r\n      }\r\n      offset += 4096;\r\n    }\r\n\r\n    // Create VROM tiles:\r\n    this.vromTile = new Array(this.vromCount);\r\n    for (i = 0; i < this.vromCount; i++) {\r\n      this.vromTile[i] = new Array(256);\r\n      for (j = 0; j < 256; j++) {\r\n        this.vromTile[i][j] = new Tile();\r\n      }\r\n    }\r\n\r\n    // Convert CHR-ROM banks to tiles:\r\n    var tileIndex;\r\n    var leftOver;\r\n    for (v = 0; v < this.vromCount; v++) {\r\n      for (i = 0; i < 4096; i++) {\r\n        tileIndex = i >> 4;\r\n        leftOver = i % 16;\r\n        if (leftOver < 8) {\r\n          this.vromTile[v][tileIndex].setScanline(\r\n            leftOver,\r\n            this.vrom[v][i],\r\n            this.vrom[v][i + 8]\r\n          );\r\n        } else {\r\n          this.vromTile[v][tileIndex].setScanline(\r\n            leftOver - 8,\r\n            this.vrom[v][i - 8],\r\n            this.vrom[v][i]\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    this.valid = true;\r\n  },\r\n\r\n  getMirroringType: function () {\r\n    if (this.fourScreen) {\r\n      return this.FOURSCREEN_MIRRORING;\r\n    }\r\n    if (this.mirroring === 0) {\r\n      return this.HORIZONTAL_MIRRORING;\r\n    }\r\n    return this.VERTICAL_MIRRORING;\r\n  },\r\n\r\n  getMapperName: function () {\r\n    if (this.mapperType >= 0 && this.mapperType < this.mapperName.length) {\r\n      return this.mapperName[this.mapperType];\r\n    }\r\n    return \"Unknown Mapper, \" + this.mapperType;\r\n  },\r\n\r\n  mapperSupported: function () {\r\n    return typeof Mappers[this.mapperType] !== \"undefined\";\r\n  },\r\n\r\n  createMapper: function () {\r\n    if (this.mapperSupported()) {\r\n      return new Mappers[this.mapperType](this.nes);\r\n    } else {\r\n      throw new Error(\r\n        \"This ROM uses a mapper not supported by JSNES: \" +\r\n          this.getMapperName() +\r\n          \"(\" +\r\n          this.mapperType +\r\n          \")\"\r\n      );\r\n    }\r\n  },\r\n};\r\n\r\nexport {ROM}\r\n","\r\nimport {CPU} from './cpu.js'\r\nimport {Controller} from  \"./controller.js\"\r\nimport {PPU} from './ppu.js'\r\nimport {PAPU} from './papu.js'\r\nimport {ROM} from './rom.js'\r\n\r\n\r\nvar NES = function (opts) {\r\n  this.opts = {\r\n    onFrame: function () {},\r\n    onAudioSample: null,\r\n    onStatusUpdate: function (a) {\r\n      // console.log(a)\r\n    },\r\n    onBatteryRamWrite: function () {},\r\n\r\n    // FIXME: not actually used except for in PAPU\r\n    preferredFrameRate: 60,\r\n\r\n    emulateSound: true,\r\n    sampleRate: 48000,\r\n  };\r\n  if (typeof opts !== \"undefined\") {\r\n    var key;\r\n    for (key in this.opts) {\r\n      if (typeof opts[key] !== \"undefined\") {\r\n        this.opts[key] = opts[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  this.frameTime = 1000 / this.opts.preferredFrameRate;\r\n\r\n  this.ui = {\r\n    writeFrame: this.opts.onFrame,\r\n    updateStatus: this.opts.onStatusUpdate,\r\n  };\r\n  this.cpu = new CPU(this);\r\n  this.ppu = new PPU(this);\r\n  this.papu = new PAPU(this);\r\n  this.mmap = null; // set in loadROM()\r\n  this.controllers = {\r\n    1: new Controller(),\r\n    2: new Controller(),\r\n  };\r\n\r\n  this.ui.updateStatus(\"Ready to load a ROM.\");\r\n\r\n  this.frame = this.frame.bind(this);\r\n  this.buttonDown = this.buttonDown.bind(this);\r\n  this.buttonUp = this.buttonUp.bind(this);\r\n  this.zapperMove = this.zapperMove.bind(this);\r\n  this.zapperFireDown = this.zapperFireDown.bind(this);\r\n  this.zapperFireUp = this.zapperFireUp.bind(this);\r\n};\r\n\r\nNES.prototype = {\r\n  fpsFrameCount: 0,\r\n  romData: null,\r\n  break: false,\r\n\r\n  // Set break to true to stop frame loop.\r\n  stop: function () {\r\n    this.break = true;\r\n  },\r\n\r\n  // Resets the system\r\n  reset: function () {\r\n    if (this.mmap !== null) {\r\n      this.mmap.reset();\r\n    }\r\n\r\n    this.cpu.reset();\r\n    this.ppu.reset();\r\n    this.papu.reset();\r\n\r\n    this.lastFpsTime = null;\r\n    this.fpsFrameCount = 0;\r\n\r\n    this.break = false;\r\n  },\r\n\r\n  frame: function () {\r\n    this.ppu.startFrame();\r\n    var cycles = 0;\r\n    var emulateSound = this.opts.emulateSound;\r\n    var cpu = this.cpu;\r\n    var ppu = this.ppu;\r\n    var papu = this.papu;\r\n    FRAMELOOP: for (;;) {\r\n      if (this.break) break;\r\n      if (cpu.cyclesToHalt === 0) {\r\n        // Execute a CPU instruction\r\n        cycles = cpu.emulate();\r\n        if (emulateSound) {\r\n          papu.clockFrameCounter(cycles);\r\n        }\r\n        cycles *= 3;\r\n      } else {\r\n        if (cpu.cyclesToHalt > 8) {\r\n          cycles = 24;\r\n          if (emulateSound) {\r\n            papu.clockFrameCounter(8);\r\n          }\r\n          cpu.cyclesToHalt -= 8;\r\n        } else {\r\n          cycles = cpu.cyclesToHalt * 3;\r\n          if (emulateSound) {\r\n            papu.clockFrameCounter(cpu.cyclesToHalt);\r\n          }\r\n          cpu.cyclesToHalt = 0;\r\n        }\r\n      }\r\n\r\n      for (; cycles > 0; cycles--) {\r\n        if (\r\n          ppu.curX === ppu.spr0HitX &&\r\n          ppu.f_spVisibility === 1 &&\r\n          ppu.scanline - 21 === ppu.spr0HitY\r\n        ) {\r\n          // Set sprite 0 hit flag:\r\n          ppu.setStatusFlag(ppu.STATUS_SPRITE0HIT, true);\r\n        }\r\n\r\n        if (ppu.requestEndFrame) {\r\n          ppu.nmiCounter--;\r\n          if (ppu.nmiCounter === 0) {\r\n            ppu.requestEndFrame = false;\r\n            ppu.startVBlank();\r\n            break FRAMELOOP;\r\n          }\r\n        }\r\n\r\n        ppu.curX++;\r\n        if (ppu.curX === 341) {\r\n          ppu.curX = 0;\r\n          ppu.endScanline();\r\n        }\r\n      }\r\n    }\r\n    this.fpsFrameCount++;\r\n  },\r\n\r\n  buttonDown: function (controller, button) {\r\n    this.controllers[controller].buttonDown(button);\r\n  },\r\n\r\n  buttonUp: function (controller, button) {\r\n    this.controllers[controller].buttonUp(button);\r\n  },\r\n\r\n  zapperMove: function (x, y) {\r\n    if (!this.mmap) return;\r\n    this.mmap.zapperX = x;\r\n    this.mmap.zapperY = y;\r\n  },\r\n\r\n  zapperFireDown: function () {\r\n    if (!this.mmap) return;\r\n    this.mmap.zapperFired = true;\r\n  },\r\n\r\n  zapperFireUp: function () {\r\n    if (!this.mmap) return;\r\n    this.mmap.zapperFired = false;\r\n  },\r\n\r\n  getFPS: function () {\r\n    var now = +new Date();\r\n    var fps = null;\r\n    if (this.lastFpsTime) {\r\n      fps = this.fpsFrameCount / ((now - this.lastFpsTime) / 1000);\r\n    }\r\n    this.fpsFrameCount = 0;\r\n    this.lastFpsTime = now;\r\n    return fps;\r\n  },\r\n\r\n  reloadROM: function () {\r\n    if (this.romData !== null) {\r\n      this.loadROM(this.romData);\r\n    }\r\n  },\r\n\r\n  // Loads a ROM file into the CPU and PPU.\r\n  // The ROM file is validated first.\r\n  loadROM: function (data) {\r\n    // Load ROM file:\r\n    this.rom = new ROM(this);\r\n    this.rom.load(data);\r\n\r\n    this.reset();\r\n    this.mmap = this.rom.createMapper();\r\n    this.mmap.loadROM();\r\n    this.ppu.setMirroring(this.rom.getMirroringType());\r\n    this.romData = data;\r\n  },\r\n\r\n  setFramerate: function (rate) {\r\n    this.opts.preferredFrameRate = rate;\r\n    this.frameTime = 1000 / rate;\r\n    this.papu.setSampleRate(this.opts.sampleRate, false);\r\n  },\r\n\r\n  toJSON: function () {\r\n    return {\r\n      // romData: this.romData,\r\n      cpu: this.cpu.toJSON(),\r\n      mmap: this.mmap.toJSON(),\r\n      ppu: this.ppu.toJSON(),\r\n      papu: this.papu.toJSON(),\r\n    };\r\n  },\r\n\r\n  fromJSON: function (s) {\r\n    this.reset();\r\n    // this.romData = s.romData;\r\n    this.cpu.fromJSON(s.cpu);\r\n    this.mmap.fromJSON(s.mmap);\r\n    this.ppu.fromJSON(s.ppu);\r\n    this.papu.fromJSON(s.papu);\r\n  },\r\n};\r\n\r\nexport {NES};\r\n","// module.exports = {\r\n//   Controller: require(\"./controller\"),\r\n//   NES: require(\"./nes\"),\r\n// };\r\nimport {Controller} from './controller.js'\r\nimport {NES} from './nes.js'\r\nlet jsnes = {Controller,NES};\r\nexport {jsnes}","import {jsnes} from \"./index.js\";\r\n\r\nlet holdNes = {};\r\nvar SCREEN_WIDTH = 256;\r\nvar SCREEN_HEIGHT = 240;\r\nvar FRAMEBUFFER_SIZE = SCREEN_WIDTH * SCREEN_HEIGHT;\r\n\r\nvar canvas_ctx, image;\r\nvar framebuffer_u8, framebuffer_u32;\r\n\r\nvar AUDIO_BUFFERING = 512;\r\nvar SAMPLE_COUNT = 4 * 1024;\r\nvar SAMPLE_MASK = SAMPLE_COUNT - 1;\r\nvar audio_samples_L = new Float32Array(SAMPLE_COUNT);\r\nvar audio_samples_R = new Float32Array(SAMPLE_COUNT);\r\nvar audio_write_cursor = 0, audio_read_cursor = 0;\r\nvar nes = new jsnes.NES({\r\n    onFrame: function (framebuffer_24) {\r\n        for (var i = 0; i < FRAMEBUFFER_SIZE; i++) framebuffer_u32[i] = 0xFF000000 | framebuffer_24[i];\r\n    },\r\n    onAudioSample: function (l, r) {\r\n        audio_samples_L[audio_write_cursor] = l;\r\n        audio_samples_R[audio_write_cursor] = r;\r\n        audio_write_cursor = (audio_write_cursor + 1) & SAMPLE_MASK;\r\n    },\r\n});\r\n\r\nholdNes.nes = nes;\r\n\r\n//浏览器更新页面时的回调\r\nfunction onAnimationFrame() {\r\n\r\n    nes.ui.updateStatus(parseInt(nes.getFPS()));\r\n    window.requestAnimationFrame(onAnimationFrame);\r\n\r\n    image.data.set(framebuffer_u8);\r\n    canvas_ctx.putImageData(image, 0, 0);\r\n}\r\n\r\nfunction audio_remain() {\r\n    return (audio_write_cursor - audio_read_cursor) & SAMPLE_MASK;\r\n}\r\n\r\nfunction audio_callback(event) {\r\n    var dst = event.outputBuffer;\r\n    var len = dst.length;\r\n\r\n    // Attempt to avoid buffer underruns.\r\n    if (audio_remain() < AUDIO_BUFFERING) nes.frame();\r\n\r\n    var dst_l = dst.getChannelData(0);\r\n    var dst_r = dst.getChannelData(1);\r\n    for (var i = 0; i < len; i++) {\r\n        var src_idx = (audio_read_cursor + i) & SAMPLE_MASK;\r\n        dst_l[i] = audio_samples_L[src_idx];\r\n        dst_r[i] = audio_samples_R[src_idx];\r\n    }\r\n\r\n    audio_read_cursor = (audio_read_cursor + len) & SAMPLE_MASK;\r\n}\r\nlet player1Set = {BUTTON_A:222,BUTTON_B:186,BUTTON_SELECT:32,BUTTON_START:13,BUTTON_UP:87,BUTTON_DOWN:83,BUTTON_LEFT:65,BUTTON_RIGHT:68}\r\nlet player2Set = {BUTTON_A:97,BUTTON_B:98,BUTTON_SELECT:100,BUTTON_START:101,BUTTON_UP:38,BUTTON_DOWN:40,BUTTON_LEFT:37,BUTTON_RIGHT:39}\r\nlet nesSet = {reSet:80,PauseAndStart:82}\r\n;!function(){\r\n    let temp = localStorage.getItem(\"player1Set\");;\r\n    player1Set = temp != null && temp ? JSON.parse(temp):player1Set;\r\n\r\n    let temp2 = localStorage.getItem(\"player2Set\");;\r\n    player2Set = temp2 != null && temp2 ? JSON.parse(temp2):player2Set;\r\n\r\n    let temp3 = localStorage.getItem(\"nesSet\");;\r\n    nesSet = temp3 != null && temp3 ? JSON.parse(temp3):nesSet;\r\n}();\r\nholdNes.player1Set = player1Set;\r\nholdNes.player2Set = player2Set;\r\nholdNes.nesSet = nesSet;\r\n\r\nholdNes.saveThisKeyMap = function () {\r\n    localStorage.setItem(\"player1Set\",JSON.stringify(player1Set))\r\n    localStorage.setItem(\"player2Set\",JSON.stringify(player2Set))\r\n    localStorage.setItem(\"nesSet\",JSON.stringify(nesSet))\r\n}\r\n\r\nfunction keyboard(callback, event) {\r\n    var player1 = 1;\r\n    var player2 = 2;\r\n\r\n    switch (event.keyCode) {\r\n        case player1Set.BUTTON_A: callback(player1, jsnes.Controller.BUTTON_A); break;      // '\r\n        case player1Set.BUTTON_B: callback(player1, jsnes.Controller.BUTTON_B); break;      // ; (Central European keyboard) 89\r\n        case player1Set.BUTTON_SELECT: callback(player1, jsnes.Controller.BUTTON_SELECT); break; // Spacebar Ctrl\r\n        case player1Set.BUTTON_START: callback(player1, jsnes.Controller.BUTTON_START); break;  // Enter\r\n        case player1Set.BUTTON_UP: callback(player1, jsnes.Controller.BUTTON_UP); break;     // W 38\r\n        case player1Set.BUTTON_DOWN: callback(player1, jsnes.Controller.BUTTON_DOWN); break;   // S 40\r\n        case player1Set.BUTTON_LEFT: callback(player1, jsnes.Controller.BUTTON_LEFT); break;   // A 37\r\n        case player1Set.BUTTON_RIGHT: callback(player1, jsnes.Controller.BUTTON_RIGHT); break;  // D 39\r\n\r\n        case player2Set.BUTTON_A: callback(player2, jsnes.Controller.BUTTON_A); break;     // Num-1\r\n        case player2Set.BUTTON_B: callback(player2, jsnes.Controller.BUTTON_B); break;     // Num-2\r\n        case player2Set.BUTTON_SELECT: callback(player2, jsnes.Controller.BUTTON_SELECT); break; // Num-4\r\n        case player2Set.BUTTON_START: callback(player2, jsnes.Controller.BUTTON_START); break;  // Num-5\r\n        case player2Set.BUTTON_UP: callback(player2, jsnes.Controller.BUTTON_UP); break;    // Up 38\r\n        case player2Set.BUTTON_DOWN: callback(player2, jsnes.Controller.BUTTON_DOWN); break;   // Down 40\r\n        case player2Set.BUTTON_LEFT: callback(player2, jsnes.Controller.BUTTON_LEFT); break;  // Left 37\r\n        case player2Set.BUTTON_RIGHT: callback(player2, jsnes.Controller.BUTTON_RIGHT);break; // Right 39\r\n\r\n        case nesSet.reSet:if(event.type === \"keydown\"){reStart();}break; // p 重启\r\n        case 86:if(event.type === \"keydown\"){toggleVoice();}break; // V 开启关闭声音\r\n        case nesSet.PauseAndStart:if(event.type === \"keydown\"){toggleRunAndStart();}break; // r 暂停，继续\r\n\r\n\r\n        default: return true;\r\n    }\r\n}\r\n\r\nfunction nes_init(canvas_id) {\r\n    var canvas = document.getElementById(canvas_id);\r\n\r\n    canvas_ctx = canvas.getContext(\"2d\");\r\n    image = canvas_ctx.getImageData(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\r\n\r\n    canvas_ctx.fillStyle = \"black\";\r\n    canvas_ctx.fillRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\r\n\r\n    // Allocate framebuffer array.\r\n    var buffer = new ArrayBuffer(image.data.length);\r\n    framebuffer_u8 = new Uint8ClampedArray(buffer);\r\n    framebuffer_u32 = new Uint32Array(buffer);\r\n\r\n    // Setup audio.\r\n    if(!holdNes.alerdSet){\r\n        holdNes.alerdSet = true;\r\n        var AudioContext = window.AudioContext || window.webkitAudioContext || false;\r\n        var audio_ctx;\r\n        if (AudioContext) {\r\n            audio_ctx = new AudioContext({sampleRate: nes.papu.sampleRate});\r\n        }else {\r\n            console.error(\"错误\")\r\n        }\r\n        audio_ctx.resume();\r\n        var script_processor = audio_ctx.createScriptProcessor(AUDIO_BUFFERING, 0, 2);\r\n        script_processor[\"onaudioprocess\"] = audio_callback;\r\n        script_processor.connect(audio_ctx.destination);\r\n\r\n        holdNes.audio_ctx = audio_ctx;\r\n    }\r\n    holdNes.screen = $(canvas);\r\n}\r\n\r\nfunction nes_boot(rom_data) {\r\n    nes.loadROM(rom_data);\r\n    window.requestAnimationFrame(onAnimationFrame);\r\n}\r\n\r\nfunction nes_load_data(canvas_id, rom_data) {\r\n    nes_init(canvas_id);\r\n    nes_boot(rom_data);\r\n}\r\n\r\nfunction nes_load_url(canvas_id, path) {\r\n    nes_init(canvas_id);\r\n\r\n    var req = new XMLHttpRequest();\r\n    req.open(\"GET\", path);\r\n    req.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n    req.onerror = () => console.log(`Error loading ${path}: ${req.statusText}`);\r\n\r\n    req.onload = function () {\r\n        if (this.status === 200) {\r\n            nes_boot(this.responseText);\r\n        } else if (this.status === 0) {\r\n            // Aborted, so ignore error\r\n        } else {\r\n            req.onerror();\r\n        }\r\n    };\r\n    req.send();\r\n}\r\nholdNes.nes_load_url = nes_load_url;\r\nholdNes.alerdSet = false;\r\n\r\nfunction toggleVoice(){//holdNes.nes.opts.\r\n\r\n}\r\nfunction toggleRunAndStart(){\r\n    if(holdNes.audio_ctx.state === \"running\"){\r\n        holdNes.audio_ctx.suspend();\r\n    }else if(holdNes.audio_ctx.state === 'suspended'){\r\n        holdNes.audio_ctx.resume();\r\n    }\r\n}\r\n\r\nfunction reStart(){\r\n    holdNes.nes.reloadROM()\r\n}\r\n\r\ndocument.addEventListener('keydown', (event) => {\r\n    keyboard(nes.buttonDown, event)\r\n});\r\ndocument.addEventListener('keyup', (event) => {\r\n    keyboard(nes.buttonUp, event)\r\n});\r\n\r\n\r\nexport {holdNes};","let romsData = {\r\n    \"最爱\": [\r\n        ['快打旋风', 'roms/1981/kuaidaxuanfeng.nes'],\r\n        ['激龟快打', 'roms/1981/HeroTurtles.nes'],\r\n        ['雪人兄弟', 'roms/1981/Snow Bros. (J).nes'],\r\n        ['冒险岛4', 'roms/1981/maoxiandao.nes'],\r\n        ['加纳战机', 'roms/1981/Gun-Nac.nes'],\r\n        ['三目童子', 'roms/1981/sanmotz.nes'],\r\n        ['魂斗罗1(U)30S', 'roms/Contra/Contra1(U)30S.nes'],\r\n        ['超级马里奥1 (W) Super Mario Bros. [!]', 'roms/rom1/(W) Super Mario Bros. [!].nes'],\r\n        ['双截龙2 Double Dragon2', 'roms/Double Dragon/Double Dragon2.nes'],\r\n    ],\r\n    \"魂斗罗\": [\r\n        ['魂斗罗1(U)30', 'roms/Contra/Contra1(U)30.nes'],\r\n        ['魂斗罗1(U)30F', 'roms/Contra/Contra1(U)30F.nes'],\r\n        ['魂斗罗1(U)30L', 'roms/Contra/Contra1(U)30L.nes'],\r\n        ['魂斗罗1(U)30M', 'roms/Contra/Contra1(U)30M.nes'],\r\n        ['魂斗罗1(U)F', 'roms/Contra/Contra1(U)F.nes'],\r\n        ['魂斗罗1(U)L', 'roms/Contra/Contra1(U)L.nes'],\r\n        ['魂斗罗1(U)M', 'roms/Contra/Contra1(U)M.nes'],\r\n        ['魂斗罗1(U)S', 'roms/Contra/Contra1(U)S.nes'],\r\n    ],\r\n    \"超级玛丽\": [\r\n        ['超级马里奥3 (W) Super Mario Bros. 3 (U)', 'roms/bfirsh/Super Mario Bros. 3 (U) (PRG1) [!].nes'],\r\n        ['马里奥拆屋工 (W) Wrecking Crew [!]', 'roms/rom1/(W) Wrecking Crew [!].nes'],\r\n        ['马里奥医生 Dr. Mario (JU)', 'roms/bfirsh/Dr. Mario (JU).nes'],\r\n    ],\r\n    \"双截龙\": [\r\n        ['双截龙1 Double Dragon1', 'roms/Double Dragon/Double Dragon1.nes'],\r\n        ['双截龙3 Double Dragon3', 'roms/Double Dragon/Double Dragon3.nes'],\r\n        ['双截龙4 Double Dragon4', 'roms/Double Dragon/Double Dragon4.nes'],\r\n    ],\r\n    \"俄罗斯方块\": [\r\n        ['俄罗斯方块LJ65', 'roms/lj65/lj65.nes'],\r\n        ['俄罗斯方块Tetris(U)', 'roms/other/Tetris (U) [!].nes'],\r\n        ['俄罗斯方块Tetris 2(U)', 'roms/other/Tetris 2 (U) [!].nes'],\r\n    ],\r\n    \"坦克\": [\r\n        ['坦克 (Ch) Missile Tank', 'roms/rom1/(Ch) Missile Tank.nes'],\r\n        ['坦克 (Ch) Tank 1990', 'roms/rom1/(Ch) Tank 1990.nes'],\r\n        ['坦克 (J) Battle City', 'roms/rom1/(J) Battle City.nes'],\r\n    ],\r\n    \"经典\": [\r\n        ['赤影战士 Kage', 'roms/other/Kage.nes'],\r\n        ['中国象棋', 'roms/other/Zhong Guo Xiang Qi.nes'],\r\n        ['吃豆精灵 (J) (V1.1) Pac-Man [!]', 'roms/other/Pac-Man.nes'],\r\n        ['摩托车大赛 (J) (PRG1) Mach Rider [!]', 'roms/other/Mach Rider.nes'],\r\n        ['沙罗曼蛇 (U) Life Force', 'roms/rom2/Life Force [!].nes'],\r\n        ['1943 (U) 1943 - The Battle of Midway', 'roms/rom2/1943.nes'],\r\n        ['脱狱 Cross Fire (J)', 'roms/rom2/Cross Fire (J).nes'],\r\n        ['撞球咖啡馆 Shufflepuck Cafe', 'roms/rom2/Shufflepuck Cafe.nes'],\r\n        ['功夫 (J) (V1.2) Yie Ar Kung-Fu [!]', 'roms/rom1/(J) (V1.2) Yie Ar Kung-Fu [!].nes'],\r\n    ],\r\n    \"淘金者\": [\r\n        ['淘金者(汉化)', 'roms/rom1/TaoJinZhe.nes'],\r\n        ['淘金者(J)', 'roms/rom1/Championship Lode Runner (J).nes'],\r\n    ],\r\n\r\n    \"赛车\": [\r\n        ['F1赛车 (J) F-1 Race [!]', 'roms/rom1/(J) F-1 Race [!].nes'],\r\n        ['摩托车大赛 (JU) (PRG0) Mach Rider [!]', 'roms/rom1/(JU) (PRG0) Mach Rider [!].nes'],\r\n        ['越野机车 (JU) Excitebike [!]', 'roms/rom1/(JU) Excitebike [!].nes'],\r\n        ['火箭车 (J) Road Fighter [!]', 'roms/rom1/(J) Road Fighter [!].nes'],\r\n    ],\r\n\r\n    \"其它\": [\r\n        ['泡泡 Bubble Bobble (U)', 'roms/bfirsh/Bubble Bobble (U).nes'],\r\n        ['Concentration Room', 'roms/croom/croom.nes'],\r\n        ['网球Tennis(JU)', 'roms/other/Tennis (JU) [!].nes'],\r\n        ['高尔夫 Golf (JU)', 'roms/bfirsh/Golf (JU).nes'],\r\n        ['Zelda II - The Adventure of Link(U)', 'roms/other/Zelda II - The Adventure of Link (U).nes'],\r\n        ['地底探险1 (J) Spelunker [!]', 'roms/rom1/(J) Spelunker [!].nes'],\r\n        ['快乐猫 (J) Mappy [!]', 'roms/rom1/(J) Mappy [!].nes'],\r\n        ['成龙踢馆1 (J) Spartan X [!]', 'roms/rom1/(J) Spartan X [!].nes'],\r\n        ['敲冰块 (J) Ice Climber', 'roms/rom1/(J) Ice Climber.nes'],\r\n        ['炸弹人1 (J) Bomberman [!]', 'roms/rom1/(J) Bomberman [!].nes'],\r\n        ['猪小弟 (J) Pooyan', 'roms/rom1/(J) Pooyan.nes'],\r\n        ['马戏团 (J) Circus Charlie [!]', 'roms/rom1/(J) Circus Charlie [!].nes'],\r\n    ],\r\n};\r\n\r\nromsData.keyMap = {\r\n    8: 'Backspace',\r\n    9: 'Tab',\r\n    13: 'Enter',\r\n    16: 'ShiftLeft',\r\n    17: 'ControlLeft',\r\n    18: 'AltLeft',\r\n    19: 'Pause',\r\n    20: 'CapsLock',\r\n    27: 'Escape',\r\n    32: 'Space',\r\n    33: 'PageUp',\r\n    34: 'PageDown',\r\n    35: 'End',\r\n    36: 'Home',\r\n    37: 'ArrowLeft',\r\n    38: 'ArrowUp',\r\n    39: 'ArrowRight',\r\n    40: 'ArrowDown',\r\n    45: 'Insert',\r\n    46: 'Delete',\r\n    48: 'Digit0',\r\n    49: 'Digit1',\r\n    50: 'Digit2',\r\n    51: 'Digit3',\r\n    52: 'Digit4',\r\n    53: 'Digit5',\r\n    54: 'Digit6',\r\n    55: 'Digit7',\r\n    56: 'Digit8',\r\n    57: 'Digit9',\r\n    65: 'KeyA',\r\n    66: 'KeyB',\r\n    67: 'KeyC',\r\n    68: 'KeyD',\r\n    69: 'KeyE',\r\n    70: 'KeyF',\r\n    71: 'KeyG',\r\n    72: 'KeyH',\r\n    73: 'KeyI',\r\n    74: 'KeyJ',\r\n    75: 'KeyK',\r\n    76: 'KeyL',\r\n    77: 'KeyM',\r\n    78: 'KeyN',\r\n    79: 'KeyO',\r\n    80: 'KeyP',\r\n    81: 'KeyQ',\r\n    82: 'KeyR',\r\n    83: 'KeyS',\r\n    84: 'KeyT',\r\n    85: 'KeyU',\r\n    86: 'KeyV',\r\n    87: 'KeyW',\r\n    88: 'KeyX',\r\n    89: 'KeyY',\r\n    90: 'KeyZ',\r\n    91: 'MetaLeft',\r\n    93: 'ContextMenu',\r\n    96: 'Numpad0',\r\n    97: 'Numpad1',\r\n    98: 'Numpad2',\r\n    99: 'Numpad3',\r\n    100: 'Numpad4',\r\n    101: 'Numpad5',\r\n    102: 'Numpad6',\r\n    103: 'Numpad7',\r\n    104: 'Numpad8',\r\n    105: 'Numpad9',\r\n    106: 'NumpadMultiply',\r\n    107: 'NumpadAdd',\r\n    109: 'NumpadSubtract',\r\n    110: 'NumpadDecimal',\r\n    111: 'NumpadDivide',\r\n    112: 'F1',\r\n    113: 'F2',\r\n    114: 'F3',\r\n    115: 'F4',\r\n    116: 'F5',\r\n    117: 'F6',\r\n    118: 'F7',\r\n    120: 'F9',\r\n    121: 'F10',\r\n    122: 'F11',\r\n    123: 'F12',\r\n    144: 'NumLock',\r\n    145: 'ScrollLock',\r\n    186: 'Semicolon',\r\n    187: 'Equal',\r\n    188: 'Comma',\r\n    189: 'Minus',\r\n    190: 'Period',\r\n    191: 'Slash',\r\n    192: 'Backquote',\r\n    219: 'BracketLeft',\r\n    220: 'Backslash',\r\n    221: 'BracketRight',\r\n    222: 'Quote'\r\n}\r\nexport {romsData};\r\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","\r\nvar gamepadInfo = {}\r\nvar start;\r\n\r\nimport {holdNes} from \"./initnes.js\";\r\n\r\nvar rAF = window.mozRequestAnimationFrame ||\r\n    window.webkitRequestAnimationFrame ||\r\n    window.requestAnimationFrame;\r\n\r\nvar rAFStop = window.mozCancelRequestAnimationFrame ||\r\n    window.webkitCancelRequestAnimationFrame ||\r\n    window.cancelRequestAnimationFrame;\r\n\r\nwindow.addEventListener(\"gamepadconnected\", function () {\r\n    var gp = navigator.getGamepads()[0];\r\n    gamepadInfo.innerHTML = \"Gamepad connected at index \" + gp.index + \": \" + gp.id + \". It has \" + gp.buttons.length + \" buttons and \" + gp.axes.length + \" axes.\";\r\n\r\n    gameLoop();\r\n});\r\n\r\nwindow.addEventListener(\"gamepaddisconnected\", function () {\r\n    gamepadInfo.innerHTML = \"Waiting for gamepad.\";\r\n\r\n    rAFStop(start);\r\n});\r\n\r\nif (!('GamepadEvent' in window)) {\r\n    // No gamepad events available, poll instead.\r\n    var interval = setInterval(pollGamepads, 100);\r\n}\r\n\r\nfunction pollGamepads() {\r\n    var gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads : []);\r\n    for (var i = 0; i < gamepads.length; i++) {\r\n        var gp = gamepads[i];\r\n        if (gp) {\r\n            gamepadInfo.innerHTML = \"Gamepad connected at index \" + gp.index + \": \" + gp.id + \". It has \" + gp.buttons.length + \" buttons and \" + gp.axes.length + \" axes.\";\r\n            gameLoop();\r\n            clearInterval(interval);\r\n        }\r\n    }\r\n}\r\n\r\nfunction buttonPressed(b) {\r\n    if (typeof (b) == \"object\") {\r\n        return b.pressed && b.touched;\r\n    }\r\n    return b == 1.0;\r\n}\r\n\r\n\r\nlet keys = {\r\n    KEY_A: 0,\r\n    KEY_B: 1,\r\n    KEY_SELECT: 2,\r\n    KEY_START: 3,\r\n    KEY_UP: 4,\r\n    KEY_DOWN: 5,\r\n    KEY_LEFT: 6,\r\n    KEY_RIGHT: 7\r\n};\r\n// 0A 1B 2X 3Y\r\nlet _keyA = 0,_keyB = 2,_tubA = 1,_tubB = 3;\r\nlet kesA = {\r\n    12: \"KEY_UP\",\r\n    13: \"KEY_DOWN\",\r\n    14: \"KEY_LEFT\",\r\n    15: \"KEY_RIGHT\",\r\n    8: \"KEY_SELECT\",\r\n    9: \"KEY_START\",\r\n}\r\nkesA[_keyA] = \"KEY_A\"\r\nkesA[_keyB] = \"KEY_B\"\r\nkesA[_tubA] = \"KEY_AA\"\r\nkesA[_tubB] = \"KEY_BB\"\r\n!function(){\r\n    let temp3 = localStorage.getItem(\"kesPad\");\r\n    kesA = temp3 != null && temp3 ? JSON.parse(temp3):kesA;\r\n}()\r\nlet pressKey = [];\r\nlet keyPress;\r\nwindow.canSet = undefined;\r\nwindow.canSetValue = undefined;\r\n\r\nfunction gameLoop() {\r\n    var gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads : []);\r\n    if (!gamepads) return;\r\n    var gp = gamepads[0];\r\n    for (var i = 0; i < gp.axes.length; i++) {\r\n        let temp = gp.axes[i];\r\n        if (temp === -1) {\r\n            console.log(`-1位于${i}`)\r\n        }\r\n        if (temp === 1) {\r\n            console.log(`1位于${i}`)\r\n        }\r\n    }\r\n\r\n    for (var i = 0; i < gp.buttons.length; i++) {\r\n        if (buttonPressed(gp.buttons[i])) {\r\n            if (pressKey.indexOf(i) === -1) {\r\n                //触发按下\r\n                console.log(`按下了${kesA[i]}`)\r\n                keyPress = i;\r\n                if(canSet !== undefined){\r\n                    gamePadApi.setGamePad(canSetValue)\r\n                    window.setGamePadCall(keyPress);\r\n                }\r\n                // nes.keyboard.setNESKeyBord(keys[kesA[i]],0x41)\r\n                holdNes.nes.buttonDown(1,keys[kesA[i]])\r\n                pressKey[pressKey.length] = i;\r\n            }\r\n            if(i === _tubA){\r\n                //A键连发\r\n                tubrro(0)\r\n            }\r\n            if(i === _tubB){\r\n                //B键连发\r\n                tubrro(1)\r\n            }\r\n        } else {\r\n            //未按下\r\n            let idnex = pressKey.indexOf(i);\r\n            if (idnex > -1) {\r\n                //触发按键抬起\r\n                console.log(`抬起了${kesA[i]}`)\r\n                // nes.keyboard.setNESKeyBord(keys[kesA[i]],0x40)\r\n                holdNes.nes.buttonUp(1,keys[kesA[i]])\r\n                if(i === _tubA){\r\n                    //A键连发\r\n                    // nes.keyboard.setNESKeyBord(0,0x40)\r\n                    holdNes.nes.buttonUp(1,0)\r\n\r\n                }\r\n                if(i === _tubB){\r\n                    //B键连发\r\n                    // nes.keyboard.setNESKeyBord(1,0x40)\r\n                    holdNes.nes.buttonUp(1,1)\r\n\r\n                }\r\n\r\n                delete pressKey[idnex];\r\n            }\r\n        }\r\n\r\n    }\r\n    var start = rAF(gameLoop);\r\n};\r\n\r\n\r\nasync function tubrro(key) {\r\n    // nes.keyboard.setNESKeyBord(key,0x41);\r\n    holdNes.nes.buttonDown(1,key)\r\n    setTimeout(()=>{\r\n        // nes.keyboard.setNESKeyBord(key,0x40)\r\n        holdNes.nes.buttonUp(1,key)\r\n    },10)\r\n\r\n}\r\nlet gamePadApi = {\r\n    kesPad:kesA,\r\n    saveKesPadSet:function () {\r\n        localStorage.setItem(\"kesPad\",JSON.stringify(kesA))\r\n    },\r\n    setGamePad:function (value,callback) {\r\n        kesA[keyPress] = value;\r\n    }\r\n}\r\n\r\nexport {gamePadApi};","<template>\r\n    <div class=\"hello\" align=\"center\">\r\n        <div class=\"container\">\r\n            <el-row>\r\n                <el-col :span=\"cb1\">\r\n                    <el-select v-model=\"value\" placeholder=\"请选择\" @change=\"changeGame\">\r\n                        <el-option-group\r\n                                v-for=\"group in options\"\r\n                                :key=\"group.label\"\r\n                                :label=\"group.label\">\r\n                            <el-option\r\n                                    v-for=\"item in group.options\"\r\n                                    :key=\"item.value\"\r\n                                    :label=\"item.label\"\r\n                                    :value=\"item.value\">\r\n                            </el-option>\r\n                        </el-option-group>\r\n                    </el-select>\r\n                </el-col>\r\n                <el-col :span=\"cb2\">\r\n                    <el-tag style=\"float: left;\" v-model=\"fps\">FPS:{{fps}}</el-tag>\r\n                </el-col>\r\n                <el-col :span=\"zj\">\r\n\r\n                    <DIV ID=\"emulator\" style=\"text-align: center;\">\r\n                        <canvas id=\"nes-canvas\" :width=\"canWidth\" :height=\"canHeigh\"></canvas>\r\n                    </DIV>\r\n                </el-col>\r\n                <el-col :span=\"cb3\">\r\n                    <el-collapse v-model=\"activeName\" accordion>\r\n                        <el-collapse-item title=\"手柄设置\" name=\"gamepad\">\r\n                            <el-row v-for=\"(item,index) in gamePadSet\" :key=\"index\">\r\n                                <el-col :span=\"labSpan\">\r\n                                    <el-tag>{{item.label}}</el-tag>\r\n                                </el-col>\r\n                                <el-col :span=\"inputSpan\">\r\n                                    <el-input v-model=\"item.key\" placeholder=\"请输入内容\"></el-input>\r\n                                </el-col>\r\n                            </el-row>\r\n                        </el-collapse-item>\r\n                        <el-collapse-item title=\"p1\" name=\"p1\">\r\n                            <el-row v-for=\"(item,index) in player1Set\" :key=\"index\">\r\n                                <el-col :span=\"labSpan\">\r\n                                    <el-tag>{{item.label}}</el-tag>\r\n                                </el-col>\r\n                                <el-col :span=\"inputSpan\">\r\n                                    <el-input v-model=\"keyMap[item.key]\"  placeholder=\"请输入内容\"></el-input>\r\n                                </el-col>\r\n                            </el-row>\r\n                        </el-collapse-item>\r\n                        <el-collapse-item title=\"p2\" name=\"p2\">\r\n                            <el-row v-for=\"(item,index) in player2Set\" :key=\"index\">\r\n                                <el-col :span=\"labSpan\">\r\n                                    <el-tag>{{item.label}}</el-tag>\r\n                                </el-col>\r\n                                <el-col :span=\"inputSpan\">\r\n                                    <el-input v-model=\"keyMap[item.key]\" placeholder=\"请输入内容\"></el-input>\r\n                                </el-col>\r\n                            </el-row>\r\n                        </el-collapse-item>\r\n\r\n                    </el-collapse>\r\n\r\n                </el-col>\r\n            </el-row>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {holdNes} from \"../nes/initnes.js\";\r\n    import {romsData} from \"../nes/romUrl.js\";\r\n    import {gamePadApi} from \"../nes/gamepad.js\";\r\n\r\n    export default {\r\n        name: 'Nes',\r\n        components: {}\r\n        , data: function () {\r\n            return {\r\n                canWidth: \"256px\",\r\n                canHeigh: \"240px\"\r\n                , toggRange: 1.5\r\n                , labSpan: 6\r\n                ,inputSpan:14\r\n                ,keyMap: {}\r\n                ,gamePadSet:[]\r\n                ,player1Set:[]\r\n                ,player2Set:[]\r\n                ,cb1:4\r\n                ,cb3:7\r\n                ,zj:12\r\n                ,cb2:1\r\n                ,fps:0\r\n                ,activeName:\"p1\"\r\n                , value: ''\r\n                , options: [{\r\n                    label: '热门城市',\r\n                    options: [{\r\n                        value: 'Shanghai',\r\n                        label: '上海'\r\n                    }]\r\n                }, {}],\r\n            }\r\n        }\r\n        , created() {\r\n            this.setOption();\r\n            this.setPadKey();\r\n            this.keyMap = romsData.keyMap;\r\n            if(holdNes.alreadyLoadRom){\r\n                this.value = holdNes.alreadyLoadRom;\r\n            }\r\n            this.$nextTick(() => {\r\n                this.setFc();\r\n            })\r\n        }\r\n        , beforeRouteLeave(to, from, next) {\r\n            holdNes.audio_ctx && holdNes.audio_ctx.suspend();\r\n            next();\r\n        }\r\n        ,\r\n        methods: {\r\n            setFc: function () {\r\n                holdNes.audio_ctx &&  holdNes.audio_ctx.resume();\r\n                if(holdNes.alreadyLoad){\r\n                    holdNes.nes_load_url(\"nes-canvas\", holdNes.alreadyLoad);\r\n                }else {\r\n                    holdNes.nes_load_url(\"nes-canvas\", '../../roms/Contra/Contra1(U)30.nes');\r\n                }\r\n                let startTime = 0\r\n                let thatVue = this;\r\n                holdNes.nes.ui.updateStatus = async function (text) {\r\n                    let nowTime = new Date().getTime();\r\n                    if (nowTime - startTime < 300) {\r\n                        return;\r\n                    }\r\n                    startTime = nowTime;\r\n                    thatVue.fps = text;\r\n                }\r\n                holdNes.screen.animate({\r\n                    width: `${512 * this.toggRange}px`,\r\n                    height: `${480 * this.toggRange}px`\r\n                }, 0);\r\n            }\r\n            ,setPadKey:function () {\r\n                let keys = gamePadApi.kesPad;\r\n                for(let key in keys){\r\n                    let foo = {label:keys[key],key:key}\r\n                    this.gamePadSet[this.gamePadSet.length] = foo;\r\n                }\r\n\r\n                let player1Set = holdNes.player1Set;\r\n                for(let key in player1Set){\r\n                    let foo = {label:key,key:player1Set[key]}\r\n                    this.player1Set[this.player1Set.length] = foo;\r\n                }\r\n\r\n                let player2Set = holdNes.player2Set;\r\n                for(let key in player2Set){\r\n                    let foo = {label:key,key:player2Set[key]}\r\n                    this.player2Set[this.player2Set.length] = foo;\r\n                }\r\n\r\n\r\n            }\r\n            ,setOption:function () {\r\n                let foo = [];\r\n                for(let key in  romsData){\r\n                    let bar = {};\r\n                    if(key !== \"keyMap\"){\r\n                        let data = romsData[key];\r\n                        bar.label = key;\r\n                        bar.options = [];\r\n                        for(let i=0;i<data.length;i++){\r\n                            let fb = data[i];\r\n                            bar.options[bar.options.length] = {value:fb[1],label:fb[0]};\r\n                        }\r\n                    }\r\n                    foo[foo.length] = bar\r\n                }\r\n                this.options = foo;\r\n            }\r\n            ,changeGame(val){\r\n                holdNes.alreadyLoad = `../../${val}`;\r\n                holdNes.alreadyLoadRom = val;\r\n                var req = new XMLHttpRequest();\r\n                req.open(\"GET\", `../../${val}`);\r\n                req.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n                req.onerror = () => console.log(`Error loading ${data.value}: ${req.statusText}`);\r\n                req.onload = function () {\r\n                    if (this.status === 200) {\r\n                        holdNes.nes.loadROM(this.responseText);\r\n                    } else if (this.status === 0) {\r\n                        // Aborted, so ignore error\r\n                    } else {\r\n                        req.onerror();\r\n                    }\r\n                };\r\n                req.send();\r\n            }\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Nes.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Nes.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Nes.vue?vue&type=template&id=ce8c37ce&scoped=true&\"\nimport script from \"./Nes.vue?vue&type=script&lang=js&\"\nexport * from \"./Nes.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ce8c37ce\",\n  null\n  \n)\n\nexport default component.exports","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n"],"sourceRoot":""}